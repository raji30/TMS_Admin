!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("tslib"),require("calendar-utils"),require("@angular/core"),require("@angular/common"),require("positioning"),require("date-fns/sub_days/index"),require("date-fns/sub_weeks/index"),require("date-fns/sub_months/index"),require("date-fns/add_days/index"),require("date-fns/add_weeks/index"),require("date-fns/add_months/index"),require("date-fns/start_of_today/index"),require("date-fns/get_iso_week/index"),require("angular-draggable-droppable"),require("date-fns/is_same_day/index"),require("date-fns/set_date/index"),require("date-fns/set_month/index"),require("date-fns/set_year/index"),require("date-fns/get_date/index"),require("date-fns/get_month/index"),require("date-fns/get_year/index"),require("date-fns/difference_in_seconds/index"),require("date-fns/add_seconds/index"),require("@angular/animations"),require("angular-resizable-element"),require("date-fns/add_minutes/index")):"function"==typeof define&&define.amd?define("angular-calendar",["exports","tslib","calendar-utils","@angular/core","@angular/common","positioning","date-fns/sub_days/index","date-fns/sub_weeks/index","date-fns/sub_months/index","date-fns/add_days/index","date-fns/add_weeks/index","date-fns/add_months/index","date-fns/start_of_today/index","date-fns/get_iso_week/index","angular-draggable-droppable","date-fns/is_same_day/index","date-fns/set_date/index","date-fns/set_month/index","date-fns/set_year/index","date-fns/get_date/index","date-fns/get_month/index","date-fns/get_year/index","date-fns/difference_in_seconds/index","date-fns/add_seconds/index","@angular/animations","angular-resizable-element","date-fns/add_minutes/index"],t):t(e["angular-calendar"]={},e.tslib,null,e.ng.core,e.ng.common,null,e.dateFns.subDays,e.dateFns.subWeeks,e.dateFns.subMonths,e.dateFns.addDays,e.dateFns.addWeeks,e.dateFns.addMonths,e.dateFns.startOfToday,e.dateFns.getIsoWeek,e["angular-draggable-droppable"],e.dateFns.isSameDay,e.dateFns.setDate,e.dateFns.setMonth,e.dateFns.setYear,e.dateFns.getDate,e.dateFns.getMonth,e.dateFns.getYear,e.dateFns.differenceInSeconds,e.dateFns.addSeconds,e.ng.animations,e["angular-resizable-element"],e.dateFns.addMinutes)}(this,function(e,n,t,a,o,r,i,l,s,d,p,c,u,y,m,v,h,g,f,w,k,D,T,C,E,I,O){"use strict";i=i&&i.hasOwnProperty("default")?i["default"]:i,l=l&&l.hasOwnProperty("default")?l["default"]:l,s=s&&s.hasOwnProperty("default")?s["default"]:s,d=d&&d.hasOwnProperty("default")?d["default"]:d,p=p&&p.hasOwnProperty("default")?p["default"]:p,c=c&&c.hasOwnProperty("default")?c["default"]:c,u=u&&u.hasOwnProperty("default")?u["default"]:u,y=y&&y.hasOwnProperty("default")?y["default"]:y,v=v&&v.hasOwnProperty("default")?v["default"]:v,h=h&&h.hasOwnProperty("default")?h["default"]:h,g=g&&g.hasOwnProperty("default")?g["default"]:g,f=f&&f.hasOwnProperty("default")?f["default"]:f,w=w&&w.hasOwnProperty("default")?w["default"]:w,k=k&&k.hasOwnProperty("default")?k["default"]:k,D=D&&D.hasOwnProperty("default")?D["default"]:D,T=T&&T.hasOwnProperty("default")?T["default"]:T,C=C&&C.hasOwnProperty("default")?C["default"]:C,O=O&&O.hasOwnProperty("default")?O["default"]:O;var b=function(e){return t.validateEvents(e,function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return console.warn.apply(console,n.__spread(["angular-calendar"],e))})};function S(e,t){return e.left<=t.left&&t.left<=e.right&&e.left<=t.right&&t.right<=e.right&&e.top<=t.top&&t.top<=e.bottom&&e.top<=t.bottom&&t.bottom<=e.bottom}var x=function(e,t){return t.id?t.id:t},H=function(e,t){return t.date.toISOString()},B=function(e){return e},M=function(){function e(){this.trackByIndex=B}return e.decorators=[{type:a.Component,args:[{selector:"mwl-calendar-event-actions",template:'\n    <span *ngIf="event.actions" class="cal-event-actions">\n      <a\n        class="cal-event-action"\n        href="javascript:;"\n        *ngFor="let action of event.actions; trackBy:trackByIndex"\n        (mwlClick)="action.onClick({event: event})"\n        [ngClass]="action.cssClass"\n        [innerHtml]="action.label">\n      </a>\n    </span>\n  '}]}],e.propDecorators={event:[{type:a.Input}]},e}(),R=function(){function e(){}return e.decorators=[{type:a.Component,args:[{selector:"mwl-calendar-event-title",template:'\n    <ng-template\n      #defaultTemplate\n      let-event="event"\n      let-view="view">\n      <a\n        class="cal-event-title"\n        href="javascript:;"\n        [innerHTML]="event.title | calendarEventTitle:view:event">\n      </a>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]="customTemplate || defaultTemplate"\n      [ngTemplateOutletContext]="{\n        event: event,\n        view: view\n      }">\n    </ng-template>\n  '}]}],e.propDecorators={event:[{type:a.Input}],customTemplate:[{type:a.Input}],view:[{type:a.Input}]},e}(),P=function(){function e(){}return e.decorators=[{type:a.Component,args:[{template:'\n    <ng-template\n      #defaultTemplate\n      let-contents="contents"\n      let-placement="placement"\n      let-event="event">\n      <div class="cal-tooltip" [ngClass]="\'cal-tooltip-\' + placement">\n        <div class="cal-tooltip-arrow"></div>\n        <div class="cal-tooltip-inner" [innerHtml]="contents"></div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]="customTemplate || defaultTemplate"\n      [ngTemplateOutletContext]="{\n        contents: contents,\n        placement: placement,\n        event: event\n      }">\n    </ng-template>\n  '}]}],e.propDecorators={contents:[{type:a.Input}],placement:[{type:a.Input}],event:[{type:a.Input}],customTemplate:[{type:a.Input}]},e}(),V=function(){function e(e,t,n,a,o,i){this.elementRef=e,this.injector=t,this.renderer=n,this.viewContainerRef=o,this.document=i,this.placement="top",this.positioning=new r.Positioning,this.tooltipFactory=a.resolveComponentFactory(P)}return e.prototype.ngOnDestroy=function(){this.hide()},e.prototype.onMouseOver=function(){this.show()},e.prototype.onMouseOut=function(){this.hide()},e.prototype.show=function(){var e=this;!this.tooltipRef&&this.contents&&(this.tooltipRef=this.viewContainerRef.createComponent(this.tooltipFactory,0,this.injector,[]),this.tooltipRef.instance.contents=this.contents,this.tooltipRef.instance.placement=this.placement,this.tooltipRef.instance.customTemplate=this.customTemplate,this.tooltipRef.instance.event=this.event,this.appendToBody&&this.document.body.appendChild(this.tooltipRef.location.nativeElement),requestAnimationFrame(function(){e.positionTooltip()}))},e.prototype.hide=function(){this.tooltipRef&&(this.viewContainerRef.remove(this.viewContainerRef.indexOf(this.tooltipRef.hostView)),this.tooltipRef=null)},e.prototype.positionTooltip=function(){if(this.tooltipRef){var e=this.positioning.positionElements(this.elementRef.nativeElement,this.tooltipRef.location.nativeElement.children[0],this.placement,this.appendToBody),t=this.tooltipRef.location.nativeElement.children[0];this.renderer.setStyle(t,"top",e.top+"px"),this.renderer.setStyle(t,"left",e.left+"px")}},e.decorators=[{type:a.Directive,args:[{selector:"[mwlCalendarTooltip]"}]}],e.ctorParameters=function(){return[{type:a.ElementRef},{type:a.Injector},{type:a.Renderer2},{type:a.ComponentFactoryResolver},{type:a.ViewContainerRef},{type:undefined,decorators:[{type:a.Inject,args:[o.DOCUMENT]}]}]},e.propDecorators={contents:[{type:a.Input,args:["mwlCalendarTooltip"]}],placement:[{type:a.Input,args:["tooltipPlacement"]}],customTemplate:[{type:a.Input,args:["tooltipTemplate"]}],event:[{type:a.Input,args:["tooltipEvent"]}],appendToBody:[{type:a.Input,args:["tooltipAppendToBody"]}],onMouseOver:[{type:a.HostListener,args:["mouseenter"]}],onMouseOut:[{type:a.HostListener,args:["mouseleave"]}]},e}(),z=function(){function e(){this.viewDateChange=new a.EventEmitter}return e.prototype.onClick=function(){var e={day:i,week:l,month:s}[this.view];this.viewDateChange.emit(e(this.viewDate,1))},e.decorators=[{type:a.Directive,args:[{selector:"[mwlCalendarPreviousView]"}]}],e.propDecorators={view:[{type:a.Input}],viewDate:[{type:a.Input}],viewDateChange:[{type:a.Output}],onClick:[{type:a.HostListener,args:["click"]}]},e}(),F=function(){function e(){this.viewDateChange=new a.EventEmitter}return e.prototype.onClick=function(){var e={day:d,week:p,month:c}[this.view];this.viewDateChange.emit(e(this.viewDate,1))},e.decorators=[{type:a.Directive,args:[{selector:"[mwlCalendarNextView]"}]}],e.propDecorators={view:[{type:a.Input}],viewDate:[{type:a.Input}],viewDateChange:[{type:a.Output}],onClick:[{type:a.HostListener,args:["click"]}]},e}(),A=function(){function e(){this.viewDateChange=new a.EventEmitter}return e.prototype.onClick=function(){this.viewDateChange.emit(u())},e.decorators=[{type:a.Directive,args:[{selector:"[mwlCalendarToday]"}]}],e.propDecorators={viewDate:[{type:a.Input}],viewDateChange:[{type:a.Output}],onClick:[{type:a.HostListener,args:["click"]}]},e}(),_=function(){function e(){}return e.prototype.monthViewColumnHeader=function(e){var t=e.date,n=e.locale;return new o.DatePipe(n).transform(t,"EEEE",null,n)},e.prototype.monthViewDayNumber=function(e){var t=e.date,n=e.locale;return new o.DatePipe(n).transform(t,"d",null,n)},e.prototype.monthViewTitle=function(e){var t=e.date,n=e.locale;return new o.DatePipe(n).transform(t,"MMMM y",null,n)},e.prototype.weekViewColumnHeader=function(e){var t=e.date,n=e.locale;return new o.DatePipe(n).transform(t,"EEEE",null,n)},e.prototype.weekViewColumnSubHeader=function(e){var t=e.date,n=e.locale;return new o.DatePipe(n).transform(t,"MMM d",null,n)},e.prototype.weekViewTitle=function(e){var t=e.date,n=e.locale,a=new o.DatePipe(n).transform(t,"y",null,n);return"Week "+y(t)+" of "+a},e.prototype.dayViewHour=function(e){var t=e.date,n=e.locale;return new o.DatePipe(n).transform(t,"h a",null,n)},e.prototype.dayViewTitle=function(e){var t=e.date,n=e.locale;return new o.DatePipe(n).transform(t,"EEEE, MMMM d, y",null,n)},e}(),W=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return n.__extends(t,e),t}(_),q=function(){function e(e,t){this.dateFormatter=e,this.locale=t}return e.prototype.transform=function(e,t,n){return void 0===n&&(n=this.locale),this.dateFormatter[t]({date:e,locale:n})},e.decorators=[{type:a.Pipe,args:[{name:"calendarDate"}]}],e.ctorParameters=function(){return[{type:W},{type:undefined,decorators:[{type:a.Inject,args:[a.LOCALE_ID]}]}]},e}(),L=function(){function e(){}return e.prototype.month=function(e){return e.title},e.prototype.monthTooltip=function(e){return e.title},e.prototype.week=function(e){return e.title},e.prototype.weekTooltip=function(e){return e.title},e.prototype.day=function(e){return e.title},e.prototype.dayTooltip=function(e){return e.title},e}(),j=function(){function e(e){this.calendarEventTitle=e}return e.prototype.transform=function(e,t,n){return this.calendarEventTitle[t](n)},e.decorators=[{type:a.Pipe,args:[{name:"calendarEventTitle"}]}],e.ctorParameters=function(){return[{type:L}]},e}(),Y=function(){function e(e,t){this.renderer=e,this.elm=t,this.click=new a.EventEmitter}return e.prototype.ngOnInit=function(){var t=this,e="undefined"!=typeof window&&"undefined"!=typeof window.Hammer?"tap":"click";this.removeListener=this.renderer.listen(this.elm.nativeElement,e,function(e){t.click.next(e)})},e.prototype.ngOnDestroy=function(){this.removeListener()},e.decorators=[{type:a.Directive,args:[{selector:"[mwlClick]"}]}],e.ctorParameters=function(){return[{type:a.Renderer2},{type:a.ElementRef}]},e.propDecorators={click:[{type:a.Output,args:["mwlClick"]}]},e}(),$=function(){function e(){}return e.prototype.getMonthView=function(e){return t.getMonthView(e)},e.prototype.getWeekViewHeader=function(e){return t.getWeekViewHeader(e)},e.prototype.getWeekView=function(e){return t.getWeekView(e)},e.prototype.getDayView=function(e){return t.getDayView(e)},e.prototype.getDayViewHourGrid=function(e){return t.getDayViewHourGrid(e)},e.decorators=[{type:a.Injectable}],e}(),N=new a.InjectionToken("Moment"),G=function(){function e(e){this.moment=e}return e.prototype.monthViewColumnHeader=function(e){var t=e.date,n=e.locale;return this.moment(t).locale(n).format("dddd")},e.prototype.monthViewDayNumber=function(e){var t=e.date,n=e.locale;return this.moment(t).locale(n).format("D")},e.prototype.monthViewTitle=function(e){var t=e.date,n=e.locale;return this.moment(t).locale(n).format("MMMM YYYY")},e.prototype.weekViewColumnHeader=function(e){var t=e.date,n=e.locale;return this.moment(t).locale(n).format("dddd")},e.prototype.weekViewColumnSubHeader=function(e){var t=e.date,n=e.locale;return this.moment(t).locale(n).format("D MMM")},e.prototype.weekViewTitle=function(e){var t=e.date,n=e.locale;return this.moment(t).locale(n).format("[Week] W [of] YYYY")},e.prototype.dayViewHour=function(e){var t=e.date,n=e.locale;return this.moment(t).locale(n).format("ha")},e.prototype.dayViewTitle=function(e){var t=e.date,n=e.locale;return this.moment(t).locale(n).format("dddd, D MMMM, YYYY")},e.ctorParameters=function(){return[{type:undefined,decorators:[{type:a.Inject,args:[N]}]}]},e}(),K=function(){function e(){}return e.prototype.monthViewColumnHeader=function(e){var t=e.date,n=e.locale;return new Intl.DateTimeFormat(n,{weekday:"long"}).format(t)},e.prototype.monthViewDayNumber=function(e){var t=e.date,n=e.locale;return new Intl.DateTimeFormat(n,{day:"numeric"}).format(t)},e.prototype.monthViewTitle=function(e){var t=e.date,n=e.locale;return new Intl.DateTimeFormat(n,{year:"numeric",month:"long"}).format(t)},e.prototype.weekViewColumnHeader=function(e){var t=e.date,n=e.locale;return new Intl.DateTimeFormat(n,{weekday:"long"}).format(t)},e.prototype.weekViewColumnSubHeader=function(e){var t=e.date,n=e.locale;return new Intl.DateTimeFormat(n,{day:"numeric",month:"short"}).format(t)},e.prototype.weekViewTitle=function(e){var t=e.date,n=e.locale,a=new Intl.DateTimeFormat(n,{year:"numeric"}).format(t);return"Week "+y(t)+" of "+a},e.prototype.dayViewHour=function(e){var t=e.date,n=e.locale;return new Intl.DateTimeFormat(n,{hour:"numeric"}).format(t)},e.prototype.dayViewTitle=function(e){var t=e.date,n=e.locale;return new Intl.DateTimeFormat(n,{day:"numeric",month:"long",year:"numeric",weekday:"long"}).format(t)},e}(),U=function(){function t(){}return t.forRoot=function(e){return void 0===e&&(e={}),{ngModule:t,providers:[m.DraggableHelper,e.eventTitleFormatter||L,e.dateFormatter||W,e.utils||$]}},t.decorators=[{type:a.NgModule,args:[{declarations:[M,R,P,V,z,F,A,q,j,Y],imports:[o.CommonModule],exports:[M,R,P,V,z,F,A,q,j,Y],entryComponents:[P]}]}],t}(),J=function(){function e(e,t,n){this.cdr=e,this.utils=t,this.events=[],this.excludeDays=[],this.activeDayIsOpen=!1,this.tooltipPlacement="top",this.tooltipAppendToBody=!0,this.beforeViewRender=new a.EventEmitter,this.dayClicked=new a.EventEmitter,this.eventClicked=new a.EventEmitter,this.eventTimesChanged=new a.EventEmitter,this.trackByIndex=B,this.trackByDate=function(e,t){return t.date.toISOString()},this.locale=n}return e.prototype.ngOnInit=function(){var e=this;this.refresh&&(this.refreshSubscription=this.refresh.subscribe(function(){e.refreshAll(),e.cdr.markForCheck()}))},e.prototype.ngOnChanges=function(e){(e.viewDate||e.excludeDays||e.weekendDays)&&this.refreshHeader(),e.events&&b(this.events),(e.viewDate||e.events||e.excludeDays||e.weekendDays)&&this.refreshBody(),(e.activeDayIsOpen||e.viewDate||e.events||e.excludeDays)&&this.checkActiveDayIsOpen()},e.prototype.ngOnDestroy=function(){this.refreshSubscription&&this.refreshSubscription.unsubscribe()},e.prototype.toggleDayHighlight=function(t,n){this.view.days.forEach(function(e){n&&-1<e.events.indexOf(t)?e.backgroundColor=t.color&&t.color.secondary||"#D1E8FF":delete e.backgroundColor})},e.prototype.eventDropped=function(e,t){var n,a=D(e.date),o=k(e.date),i=w(e.date),r=h(g(f(t.start,a),o),i);if(t.end){var l=T(r,t.start);n=C(t.end,l)}this.eventTimesChanged.emit({event:t,newStart:r,newEnd:n,day:e})},e.prototype.handleDayClick=function(e,t){e.target.classList.contains("cal-event")||this.dayClicked.emit({day:t})},e.prototype.refreshHeader=function(){this.columnHeaders=this.utils.getWeekViewHeader({viewDate:this.viewDate,weekStartsOn:this.weekStartsOn,excluded:this.excludeDays,weekendDays:this.weekendDays}),this.emitBeforeViewRender()},e.prototype.refreshBody=function(){this.view=this.utils.getMonthView({events:this.events,viewDate:this.viewDate,weekStartsOn:this.weekStartsOn,excluded:this.excludeDays,weekendDays:this.weekendDays}),this.emitBeforeViewRender()},e.prototype.checkActiveDayIsOpen=function(){var t=this;if(!0===this.activeDayIsOpen){this.openDay=this.view.days.find(function(e){return v(e.date,t.viewDate)});var e=this.view.days.indexOf(this.openDay);this.openRowIndex=Math.floor(e/this.view.totalDaysVisibleInWeek)*this.view.totalDaysVisibleInWeek}else this.openRowIndex=null,this.openDay=null},e.prototype.refreshAll=function(){this.columnHeaders=null,this.view=null,this.refreshHeader(),this.refreshBody(),this.checkActiveDayIsOpen()},e.prototype.emitBeforeViewRender=function(){this.columnHeaders&&this.view&&this.beforeViewRender.emit({header:this.columnHeaders,body:this.view.days,period:this.view.period})},e.decorators=[{type:a.Component,args:[{selector:"mwl-calendar-month-view",template:'\n    <div class="cal-month-view">\n      <mwl-calendar-month-view-header\n        [days]="columnHeaders"\n        [locale]="locale"\n        [customTemplate]="headerTemplate">\n      </mwl-calendar-month-view-header>\n      <div class="cal-days">\n        <div *ngFor="let rowIndex of view.rowOffsets; trackByIndex">\n          <div class="cal-cell-row">\n            <mwl-calendar-month-cell\n              *ngFor="let day of (view.days | slice : rowIndex : rowIndex + (view.totalDaysVisibleInWeek)); trackBy:trackByDate"\n              [class.cal-drag-over]="day.dragOver"\n              [ngClass]="day?.cssClass"\n              [day]="day"\n              [openDay]="openDay"\n              [locale]="locale"\n              [tooltipPlacement]="tooltipPlacement"\n              [tooltipAppendToBody]="tooltipAppendToBody"\n              [tooltipTemplate]="tooltipTemplate"\n              [customTemplate]="cellTemplate"\n              (click)="handleDayClick($event, day)"\n              (highlightDay)="toggleDayHighlight($event.event, true)"\n              (unhighlightDay)="toggleDayHighlight($event.event, false)"\n              mwlDroppable\n              (dragEnter)="day.dragOver = true"\n              (dragLeave)="day.dragOver = false"\n              (drop)="day.dragOver = false; eventDropped(day, $event.dropData.event)"\n              (eventClicked)="eventClicked.emit({event: $event.event})">\n            </mwl-calendar-month-cell>\n          </div>\n          <mwl-calendar-open-day-events\n            [isOpen]="openRowIndex === rowIndex"\n            [events]="openDay?.events"\n            [customTemplate]="openDayEventsTemplate"\n            [eventTitleTemplate]="eventTitleTemplate"\n            (eventClicked)="eventClicked.emit({event: $event.event})">\n          </mwl-calendar-open-day-events>\n        </div>\n      </div>\n    </div>\n  '}]}],e.ctorParameters=function(){return[{type:a.ChangeDetectorRef},{type:$},{type:undefined,decorators:[{type:a.Inject,args:[a.LOCALE_ID]}]}]},e.propDecorators={viewDate:[{type:a.Input}],events:[{type:a.Input}],excludeDays:[{type:a.Input}],activeDayIsOpen:[{type:a.Input}],refresh:[{type:a.Input}],locale:[{type:a.Input}],tooltipPlacement:[{type:a.Input}],tooltipTemplate:[{type:a.Input}],tooltipAppendToBody:[{type:a.Input}],weekStartsOn:[{type:a.Input}],headerTemplate:[{type:a.Input}],cellTemplate:[{type:a.Input}],openDayEventsTemplate:[{type:a.Input}],eventTitleTemplate:[{type:a.Input}],weekendDays:[{type:a.Input}],beforeViewRender:[{type:a.Output}],dayClicked:[{type:a.Output}],eventClicked:[{type:a.Output}],eventTimesChanged:[{type:a.Output}]},e}(),Q=function(){function e(){this.trackByWeekDayHeaderDate=H}return e.decorators=[{type:a.Component,args:[{selector:"mwl-calendar-month-view-header",template:'\n    <ng-template\n      #defaultTemplate\n      let-days="days"\n      let-locale="locale">\n      <div class="cal-cell-row cal-header">\n        <div\n          class="cal-cell"\n          *ngFor="let day of days; trackBy:trackByWeekDayHeaderDate"\n          [class.cal-past]="day.isPast"\n          [class.cal-today]="day.isToday"\n          [class.cal-future]="day.isFuture"\n          [class.cal-weekend]="day.isWeekend"\n          [ngClass]="day.cssClass">\n          {{ day.date | calendarDate:\'monthViewColumnHeader\':locale }}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]="customTemplate || defaultTemplate"\n      [ngTemplateOutletContext]="{days: days, locale: locale}">\n    </ng-template>\n  '}]}],e.propDecorators={days:[{type:a.Input}],locale:[{type:a.Input}],customTemplate:[{type:a.Input}]},e}(),X=function(){function e(){this.highlightDay=new a.EventEmitter,this.unhighlightDay=new a.EventEmitter,this.eventClicked=new a.EventEmitter,this.trackByEventId=x}return e.decorators=[{type:a.Component,args:[{selector:"mwl-calendar-month-cell",template:'\n    <ng-template\n      #defaultTemplate\n      let-day="day"\n      let-openDay="openDay"\n      let-locale="locale"\n      let-tooltipPlacement="tooltipPlacement"\n      let-highlightDay="highlightDay"\n      let-unhighlightDay="unhighlightDay"\n      let-eventClicked="eventClicked"\n      let-tooltipTemplate="tooltipTemplate"\n      let-tooltipAppendToBody="tooltipAppendToBody">\n      <div class="cal-cell-top">\n        <span class="cal-day-badge" *ngIf="day.badgeTotal > 0">{{ day.badgeTotal }}</span>\n        <span class="cal-day-number">{{ day.date | calendarDate:\'monthViewDayNumber\':locale }}</span>\n      </div>\n      <div class="cal-events" *ngIf="day.events.length > 0">\n        <div\n          class="cal-event"\n          *ngFor="let event of day.events; trackBy:trackByEventId"\n          [style.backgroundColor]="event.color?.primary"\n          [ngClass]="event?.cssClass"\n          (mouseenter)="highlightDay.emit({event: event})"\n          (mouseleave)="unhighlightDay.emit({event: event})"\n          [mwlCalendarTooltip]="event.title | calendarEventTitle:\'monthTooltip\':event"\n          [tooltipPlacement]="tooltipPlacement"\n          [tooltipEvent]="event"\n          [tooltipTemplate]="tooltipTemplate"\n          [tooltipAppendToBody]="tooltipAppendToBody"\n          mwlDraggable\n          [dropData]="{event: event}"\n          [dragAxis]="{x: event.draggable, y: event.draggable}"\n          (mwlClick)="eventClicked.emit({ event: event })">\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]="customTemplate || defaultTemplate"\n      [ngTemplateOutletContext]="{\n        day: day,\n        openDay: openDay,\n        locale: locale,\n        tooltipPlacement: tooltipPlacement,\n        highlightDay: highlightDay,\n        unhighlightDay: unhighlightDay,\n        eventClicked: eventClicked,\n        tooltipTemplate: tooltipTemplate,\n        tooltipAppendToBody: tooltipAppendToBody\n      }">\n    </ng-template>\n  ',host:{"class":"cal-cell cal-day-cell","[class.cal-past]":"day.isPast","[class.cal-today]":"day.isToday","[class.cal-future]":"day.isFuture","[class.cal-weekend]":"day.isWeekend","[class.cal-in-month]":"day.inMonth","[class.cal-out-month]":"!day.inMonth","[class.cal-has-events]":"day.events.length > 0","[class.cal-open]":"day === openDay","[style.backgroundColor]":"day.backgroundColor"}}]}],e.propDecorators={day:[{type:a.Input}],openDay:[{type:a.Input}],locale:[{type:a.Input}],tooltipPlacement:[{type:a.Input}],tooltipAppendToBody:[{type:a.Input}],customTemplate:[{type:a.Input}],tooltipTemplate:[{type:a.Input}],highlightDay:[{type:a.Output}],unhighlightDay:[{type:a.Output}],eventClicked:[{type:a.Output}]},e}(),Z=function(){function e(){this.isOpen=!1,this.eventClicked=new a.EventEmitter,this.trackByEventId=x}return e.decorators=[{type:a.Component,args:[{selector:"mwl-calendar-open-day-events",template:'\n    <ng-template\n      #defaultTemplate\n      let-events="events"\n      let-eventClicked="eventClicked">\n      <div\n        *ngFor="let event of events; trackBy:trackByEventId"\n        [ngClass]="event?.cssClass"\n        mwlDraggable\n        [dropData]="{event: event}"\n        [dragAxis]="{x: event.draggable, y: event.draggable}">\n        <span\n          class="cal-event"\n          [style.backgroundColor]="event.color?.primary">\n        </span>\n        &ngsp;\n        <mwl-calendar-event-title\n          [event]="event"\n          [customTemplate]="eventTitleTemplate"\n          view="month"\n          (mwlClick)="eventClicked.emit({event: event})">\n        </mwl-calendar-event-title>\n        &ngsp;\n        <mwl-calendar-event-actions [event]="event"></mwl-calendar-event-actions>\n      </div>\n    </ng-template>\n    <div class="cal-open-day-events" [@collapse] *ngIf="isOpen">\n      <ng-template\n        [ngTemplateOutlet]="customTemplate || defaultTemplate"\n        [ngTemplateOutletContext]="{\n          events: events,\n          eventClicked: eventClicked\n        }">\n      </ng-template>\n    </div>\n  ',animations:[E.trigger("collapse",[E.transition("void => *",[E.style({height:0,overflow:"hidden"}),E.animate("150ms",E.style({height:"*"}))]),E.transition("* => void",[E.style({height:"*",overflow:"hidden"}),E.animate("150ms",E.style({height:0}))])])]}]}],e.propDecorators={isOpen:[{type:a.Input}],events:[{type:a.Input}],customTemplate:[{type:a.Input}],eventTitleTemplate:[{type:a.Input}],eventClicked:[{type:a.Output}]},e}(),ee=function(){function e(){}return e.decorators=[{type:a.NgModule,args:[{imports:[o.CommonModule,m.DragAndDropModule,U],declarations:[J,X,Z,Q],exports:[m.DragAndDropModule,J,X,Z,Q]}]}],e}(),te=function(){function e(e,t){this.dragContainerElement=e,this.startPosition=t.getBoundingClientRect()}return e.prototype.validateDrag=function(e){var t=e.x,n=e.y,a=Object.assign({},this.startPosition,{left:this.startPosition.left+t,right:this.startPosition.right+t,top:this.startPosition.top+n,bottom:this.startPosition.bottom+n});return S(this.dragContainerElement.getBoundingClientRect(),a)},e}(),ne=function(){function e(e,t){this.resizeContainerElement=e,this.minWidth=t}return e.prototype.validateResize=function(e){var t=e.rectangle;return!(this.minWidth&&t.width<this.minWidth)&&S(this.resizeContainerElement.getBoundingClientRect(),t)},e}(),ae=function(){function e(e,t,n){this.cdr=e,this.utils=t,this.events=[],this.excludeDays=[],this.tooltipPlacement="bottom",this.tooltipAppendToBody=!0,this.precision="days",this.dayHeaderClicked=new a.EventEmitter,this.eventClicked=new a.EventEmitter,this.eventTimesChanged=new a.EventEmitter,this.beforeViewRender=new a.EventEmitter,this.currentResizes=new Map,this.trackByIndex=B,this.trackByEventId=function(e,t){return t.event.id?t.event.id:t},this.locale=n}return e.prototype.ngOnInit=function(){var e=this;this.refresh&&(this.refreshSubscription=this.refresh.subscribe(function(){e.refreshAll(),e.cdr.markForCheck()}))},e.prototype.ngOnChanges=function(e){(e.viewDate||e.excludeDays||e.weekendDays)&&this.refreshHeader(),e.events&&b(this.events),(e.events||e.viewDate||e.excludeDays)&&this.refreshBody()},e.prototype.ngOnDestroy=function(){this.refreshSubscription&&this.refreshSubscription.unsubscribe()},e.prototype.resizeStarted=function(e,t,n){this.currentResizes.set(t,{originalOffset:t.offset,originalSpan:t.span,edge:"undefined"!=typeof n.edges.left?"left":"right"}),this.dayColumnWidth=this.getDayColumnWidth(e);var a=new ne(e,this.dayColumnWidth);this.validateResize=function(e){var t=e.rectangle;return a.validateResize({rectangle:t})},this.cdr.markForCheck()},e.prototype.resizing=function(e,t,n){var a=this.currentResizes.get(e);if(t.edges.left){var o=Math.round(+t.edges.left/n);e.offset=a.originalOffset+o,e.span=a.originalSpan-o}else if(t.edges.right){o=Math.round(+t.edges.right/n);e.span=a.originalSpan+o}},e.prototype.resizeEnded=function(e){var t,n=this.currentResizes.get(e);t="left"===n.edge?e.offset-n.originalOffset:e.span-n.originalSpan,e.offset=n.originalOffset,e.span=n.originalSpan;var a=e.event.start,o=e.event.end;"left"===n.edge?a=d(a,t):o&&(o=d(o,t)),this.eventTimesChanged.emit({newStart:a,newEnd:o,event:e.event}),this.currentResizes["delete"](e)},e.prototype.eventDragged=function(e,t,n){var a,o=t/n,i=d(e.event.start,o);e.event.end&&(a=d(e.event.end,o)),this.eventTimesChanged.emit({newStart:i,newEnd:a,event:e.event})},e.prototype.getDayColumnWidth=function(e){return Math.floor(e.offsetWidth/this.days.length)},e.prototype.dragStart=function(e,t){var a=this;this.dayColumnWidth=this.getDayColumnWidth(e);var o=new te(e,t);this.validateDrag=function(e){var t=e.x,n=e.y;return 0===a.currentResizes.size&&o.validateDrag({x:t,y:n})},this.cdr.markForCheck()},e.prototype.refreshHeader=function(){this.days=this.utils.getWeekViewHeader({viewDate:this.viewDate,weekStartsOn:this.weekStartsOn,excluded:this.excludeDays,weekendDays:this.weekendDays}),this.emitBeforeViewRender()},e.prototype.refreshBody=function(){this.view=this.utils.getWeekView({events:this.events,viewDate:this.viewDate,weekStartsOn:this.weekStartsOn,excluded:this.excludeDays,precision:this.precision,absolutePositionedEvents:!0}),this.emitBeforeViewRender()},e.prototype.refreshAll=function(){this.refreshHeader(),this.refreshBody()},e.prototype.emitBeforeViewRender=function(){this.days&&this.view&&this.beforeViewRender.emit({header:this.days,period:this.view.period})},e.decorators=[{type:a.Component,args:[{selector:"mwl-calendar-week-view",template:'\n    <div class="cal-week-view" #weekViewContainer>\n      <mwl-calendar-week-view-header\n        [days]="days"\n        [locale]="locale"\n        [customTemplate]="headerTemplate"\n        (dayHeaderClicked)="dayHeaderClicked.emit($event)"\n        (eventDropped)="eventTimesChanged.emit($event)">\n      </mwl-calendar-week-view-header>\n      <div *ngFor="let eventRow of view.eventRows; trackBy:trackByIndex" #eventRowContainer class="cal-events-row">\n        <div\n          *ngFor="let weekEvent of eventRow.row; trackBy:trackByEventId"\n          #event\n          class="cal-event-container"\n          [class.cal-draggable]="weekEvent.event.draggable"\n          [class.cal-starts-within-week]="!weekEvent.startsBeforeWeek"\n          [class.cal-ends-within-week]="!weekEvent.endsAfterWeek"\n          [ngClass]="weekEvent.event?.cssClass"\n          [style.width]="((100 / days.length) * weekEvent.span) + \'%\'"\n          [style.marginLeft]="((100 / days.length) * weekEvent.offset) + \'%\'"\n          mwlResizable\n          [resizeEdges]="{left: weekEvent.event?.resizable?.beforeStart, right: weekEvent.event?.resizable?.afterEnd}"\n          [resizeSnapGrid]="{left: dayColumnWidth, right: dayColumnWidth}"\n          [validateResize]="validateResize"\n          (resizeStart)="resizeStarted(weekViewContainer, weekEvent, $event)"\n          (resizing)="resizing(weekEvent, $event, dayColumnWidth)"\n          (resizeEnd)="resizeEnded(weekEvent)"\n          mwlDraggable\n          [dragAxis]="{x: weekEvent.event.draggable && currentResizes.size === 0, y: false}"\n          [dragSnapGrid]="{x: dayColumnWidth}"\n          [validateDrag]="validateDrag"\n          (dragPointerDown)="dragStart(weekViewContainer, event)"\n          (dragEnd)="eventDragged(weekEvent, $event.x, dayColumnWidth)">\n          <mwl-calendar-week-view-event\n            [weekEvent]="weekEvent"\n            [tooltipPlacement]="tooltipPlacement"\n            [tooltipTemplate]="tooltipTemplate"\n            [tooltipAppendToBody]="tooltipAppendToBody"\n            [customTemplate]="eventTemplate"\n            [eventTitleTemplate]="eventTitleTemplate"\n            (eventClicked)="eventClicked.emit({event: weekEvent.event})">\n          </mwl-calendar-week-view-event>\n        </div>\n      </div>\n    </div>\n  '}]}],e.ctorParameters=function(){return[{type:a.ChangeDetectorRef},{type:$},{type:undefined,decorators:[{type:a.Inject,args:[a.LOCALE_ID]}]}]},e.propDecorators={viewDate:[{type:a.Input}],events:[{type:a.Input}],excludeDays:[{type:a.Input}],refresh:[{type:a.Input}],locale:[{type:a.Input}],tooltipPlacement:[{type:a.Input}],tooltipTemplate:[{type:a.Input}],tooltipAppendToBody:[{type:a.Input}],weekStartsOn:[{type:a.Input}],headerTemplate:[{type:a.Input}],eventTemplate:[{type:a.Input}],eventTitleTemplate:[{type:a.Input}],precision:[{type:a.Input}],weekendDays:[{type:a.Input}],dayHeaderClicked:[{type:a.Output}],eventClicked:[{type:a.Output}],eventTimesChanged:[{type:a.Output}],beforeViewRender:[{type:a.Output}]},e}(),oe=function(){function e(){this.dayHeaderClicked=new a.EventEmitter,this.eventDropped=new a.EventEmitter,this.trackByWeekDayHeaderDate=H}return e.decorators=[{type:a.Component,args:[{selector:"mwl-calendar-week-view-header",template:'\n    <ng-template\n      #defaultTemplate\n      let-days="days"\n      let-locale="locale"\n      let-dayHeaderClicked="dayHeaderClicked"\n      let-eventDropped="eventDropped">\n      <div class="cal-day-headers">\n        <div\n          class="cal-header"\n          *ngFor="let day of days; trackBy:trackByWeekDayHeaderDate"\n          [class.cal-past]="day.isPast"\n          [class.cal-today]="day.isToday"\n          [class.cal-future]="day.isFuture"\n          [class.cal-weekend]="day.isWeekend"\n          [class.cal-drag-over]="day.dragOver"\n          [ngClass]="day.cssClass"\n          (mwlClick)="dayHeaderClicked.emit({day: day})"\n          mwlDroppable\n          (dragEnter)="day.dragOver = true"\n          (dragLeave)="day.dragOver = false"\n          (drop)="day.dragOver = false; eventDropped.emit({event: $event.dropData.event, newStart: day.date})">\n          <b>{{ day.date | calendarDate:\'weekViewColumnHeader\':locale }}</b><br>\n          <span>{{ day.date | calendarDate:\'weekViewColumnSubHeader\':locale }}</span>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]="customTemplate || defaultTemplate"\n      [ngTemplateOutletContext]="{days: days, locale: locale, dayHeaderClicked: dayHeaderClicked, eventDropped: eventDropped}">\n    </ng-template>\n  '}]}],e.propDecorators={days:[{type:a.Input}],locale:[{type:a.Input}],customTemplate:[{type:a.Input}],dayHeaderClicked:[{type:a.Output}],eventDropped:[{type:a.Output}]},e}(),ie=function(){function e(){this.eventClicked=new a.EventEmitter}return e.decorators=[{type:a.Component,args:[{selector:"mwl-calendar-week-view-event",template:'\n    <ng-template\n      #defaultTemplate\n      let-weekEvent="weekEvent"\n      let-tooltipPlacement="tooltipPlacement"\n      let-eventClicked="eventClicked"\n      let-tooltipTemplate="tooltipTemplate"\n      let-tooltipAppendToBody="tooltipAppendToBody">\n      <div\n        class="cal-event"\n        [style.backgroundColor]="weekEvent.event.color?.secondary"\n        [style.borderColor]="weekEvent.event.color?.primary"\n        [mwlCalendarTooltip]="weekEvent.event.title | calendarEventTitle:\'weekTooltip\':weekEvent.event"\n        [tooltipPlacement]="tooltipPlacement"\n        [tooltipEvent]="weekEvent.event"\n        [tooltipTemplate]="tooltipTemplate"\n        [tooltipAppendToBody]="tooltipAppendToBody">\n        <mwl-calendar-event-actions [event]="weekEvent.event"></mwl-calendar-event-actions>\n        &ngsp;\n        <mwl-calendar-event-title\n          [event]="weekEvent.event"\n          [customTemplate]="eventTitleTemplate"\n          view="week"\n          (mwlClick)="eventClicked.emit()">\n        </mwl-calendar-event-title>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]="customTemplate || defaultTemplate"\n      [ngTemplateOutletContext]="{\n        weekEvent: weekEvent,\n        tooltipPlacement: tooltipPlacement,\n        eventClicked: eventClicked,\n        tooltipTemplate: tooltipTemplate,\n        tooltipAppendToBody: tooltipAppendToBody\n      }">\n    </ng-template>\n  '}]}],e.propDecorators={weekEvent:[{type:a.Input}],tooltipPlacement:[{type:a.Input}],tooltipAppendToBody:[{type:a.Input}],customTemplate:[{type:a.Input}],eventTitleTemplate:[{type:a.Input}],tooltipTemplate:[{type:a.Input}],eventClicked:[{type:a.Output}]},e}(),re=function(){function e(){}return e.decorators=[{type:a.NgModule,args:[{imports:[o.CommonModule,I.ResizableModule,m.DragAndDropModule,U],declarations:[ae,oe,ie],exports:[I.ResizableModule,m.DragAndDropModule,ae,oe,ie]}]}],e}(),le=function(){function e(e,t,n){this.cdr=e,this.utils=t,this.events=[],this.hourSegments=2,this.hourSegmentHeight=30,this.dayStartHour=0,this.dayStartMinute=0,this.dayEndHour=23,this.dayEndMinute=59,this.eventWidth=150,this.eventSnapSize=this.hourSegmentHeight,this.tooltipPlacement="top",this.tooltipAppendToBody=!0,this.eventClicked=new a.EventEmitter,this.hourSegmentClicked=new a.EventEmitter,this.eventTimesChanged=new a.EventEmitter,this.beforeViewRender=new a.EventEmitter,this.hours=[],this.width=0,this.currentResizes=new Map,this.trackByEventId=x,this.trackByDayEvent=function(e,t){return t.event.id?t.event.id:t.event},this.trackByHour=function(e,t){return t.segments[0].date.toISOString()},this.trackByHourSegment=function(e,t){return t.date.toISOString()},this.locale=n}return e.prototype.ngOnInit=function(){var e=this;this.refresh&&(this.refreshSubscription=this.refresh.subscribe(function(){e.refreshAll(),e.cdr.markForCheck()}))},e.prototype.ngOnDestroy=function(){this.refreshSubscription&&this.refreshSubscription.unsubscribe()},e.prototype.ngOnChanges=function(e){(e.viewDate||e.dayStartHour||e.dayStartMinute||e.dayEndHour||e.dayEndMinute||e.hourSegments)&&this.refreshHourGrid(),e.events&&b(this.events),(e.viewDate||e.events||e.dayStartHour||e.dayStartMinute||e.dayEndHour||e.dayEndMinute||e.eventWidth)&&this.refreshView()},e.prototype.eventDropped=function(e,t){e.dropData&&e.dropData.event&&this.eventTimesChanged.emit({event:e.dropData.event,newStart:t.date})},e.prototype.resizeStarted=function(e,t,n){this.currentResizes.set(e,{originalTop:e.top,originalHeight:e.height,edge:"undefined"!=typeof t.edges.top?"top":"bottom"});var a=new ne(n);this.validateResize=function(e){var t=e.rectangle;return a.validateResize({rectangle:t})},this.cdr.markForCheck()},e.prototype.resizing=function(e,t){var n=this.currentResizes.get(e);t.edges.top?(e.top=n.originalTop+ +t.edges.top,e.height=n.originalHeight-+t.edges.top):t.edges.bottom&&(e.height=n.originalHeight+ +t.edges.bottom)},e.prototype.resizeEnded=function(e){var t,n=this.currentResizes.get(e);t="top"===n.edge?e.top-n.originalTop:e.height-n.originalHeight,e.top=n.originalTop,e.height=n.originalHeight;var a=t*(60/(this.hourSegments*this.hourSegmentHeight)),o=e.event.start,i=e.event.end;"top"===n.edge?o=O(o,a):i&&(i=O(i,a)),this.eventTimesChanged.emit({newStart:o,newEnd:i,event:e.event}),this.currentResizes["delete"](e)},e.prototype.dragStart=function(e,t){var a=this,o=new te(t,e);this.validateDrag=function(e){var t=e.x,n=e.y;return 0===a.currentResizes.size&&o.validateDrag({x:t,y:n})},this.cdr.markForCheck()},e.prototype.eventDragged=function(e,t){var n,a=t*(60/(this.hourSegments*this.hourSegmentHeight)),o=O(e.event.start,a);e.event.end&&(n=O(e.event.end,a)),this.eventTimesChanged.emit({newStart:o,newEnd:n,event:e.event})},e.prototype.refreshHourGrid=function(){this.hours=this.utils.getDayViewHourGrid({viewDate:this.viewDate,hourSegments:this.hourSegments,dayStart:{hour:this.dayStartHour,minute:this.dayStartMinute},dayEnd:{hour:this.dayEndHour,minute:this.dayEndMinute}}),this.emitBeforeViewRender()},e.prototype.refreshView=function(){this.view=this.utils.getDayView({events:this.events,viewDate:this.viewDate,hourSegments:this.hourSegments,dayStart:{hour:this.dayStartHour,minute:this.dayStartMinute},dayEnd:{hour:this.dayEndHour,minute:this.dayEndMinute},eventWidth:this.eventWidth,segmentHeight:this.hourSegmentHeight}),this.emitBeforeViewRender()},e.prototype.refreshAll=function(){this.refreshHourGrid(),this.refreshView()},e.prototype.emitBeforeViewRender=function(){this.hours&&this.view&&this.beforeViewRender.emit({body:{hourGrid:this.hours},period:this.view.period})},e.decorators=[{type:a.Component,args:[{selector:"mwl-calendar-day-view",template:'\n    <div class="cal-day-view" #dayViewContainer>\n      <mwl-calendar-all-day-event\n        *ngFor="let event of view.allDayEvents; trackBy:trackByEventId"\n        [event]="event"\n        [customTemplate]="allDayEventTemplate"\n        [eventTitleTemplate]="eventTitleTemplate"\n        (eventClicked)="eventClicked.emit({event: event})">\n      </mwl-calendar-all-day-event>\n      <div class="cal-hour-rows">\n        <div class="cal-events">\n          <div\n            #event\n            *ngFor="let dayEvent of view?.events; trackBy:trackByDayEvent"\n            class="cal-event-container"\n            [class.cal-draggable]="dayEvent.event.draggable"\n            [class.cal-starts-within-day]="!dayEvent.startsBeforeDay"\n            [class.cal-ends-within-day]="!dayEvent.endsAfterDay"\n            [ngClass]="dayEvent.event.cssClass"\n            mwlResizable\n            [resizeEdges]="{top: dayEvent.event?.resizable?.beforeStart, bottom: dayEvent.event?.resizable?.afterEnd}"\n            [resizeSnapGrid]="{top: eventSnapSize, bottom: eventSnapSize}"\n            [validateResize]="validateResize"\n            (resizeStart)="resizeStarted(dayEvent, $event, dayViewContainer)"\n            (resizing)="resizing(dayEvent, $event)"\n            (resizeEnd)="resizeEnded(dayEvent)"\n            mwlDraggable\n            [dragAxis]="{x: false, y: dayEvent.event.draggable && currentResizes.size === 0}"\n            [dragSnapGrid]="{y: eventSnapSize}"\n            [validateDrag]="validateDrag"\n            (dragPointerDown)="dragStart(event, dayViewContainer)"\n            (dragEnd)="eventDragged(dayEvent, $event.y)"\n            [style.marginTop.px]="dayEvent.top"\n            [style.height.px]="dayEvent.height"\n            [style.marginLeft.px]="dayEvent.left + 70"\n            [style.width.px]="dayEvent.width - 1">\n            <mwl-calendar-day-view-event\n              [dayEvent]="dayEvent"\n              [tooltipPlacement]="tooltipPlacement"\n              [tooltipTemplate]="tooltipTemplate"\n              [tooltipAppendToBody]="tooltipAppendToBody"\n              [customTemplate]="eventTemplate"\n              [eventTitleTemplate]="eventTitleTemplate"\n              (eventClicked)="eventClicked.emit({event: dayEvent.event})">\n            </mwl-calendar-day-view-event>\n          </div>\n        </div>\n        <div class="cal-hour" *ngFor="let hour of hours; trackBy:trackByHour" [style.minWidth.px]="view?.width + 70">\n          <mwl-calendar-day-view-hour-segment\n            *ngFor="let segment of hour.segments; trackBy:trackByHourSegment"\n            [style.height.px]="hourSegmentHeight"\n            [segment]="segment"\n            [segmentHeight]="hourSegmentHeight"\n            [locale]="locale"\n            [customTemplate]="hourSegmentTemplate"\n            (click)="hourSegmentClicked.emit({date: segment.date})"\n            [class.cal-drag-over]="segment.dragOver"\n            mwlDroppable\n            (dragEnter)="segment.dragOver = true"\n            (dragLeave)="segment.dragOver = false"\n            (drop)="segment.dragOver = false; eventDropped($event, segment)">\n          </mwl-calendar-day-view-hour-segment>\n        </div>\n      </div>\n    </div>\n  '}]}],e.ctorParameters=function(){return[{type:a.ChangeDetectorRef},{type:$},{type:undefined,decorators:[{type:a.Inject,args:[a.LOCALE_ID]}]}]},e.propDecorators={viewDate:[{type:a.Input}],events:[{type:a.Input}],hourSegments:[{type:a.Input}],hourSegmentHeight:[{type:a.Input}],dayStartHour:[{type:a.Input}],dayStartMinute:[{type:a.Input}],dayEndHour:[{type:a.Input}],dayEndMinute:[{type:a.Input}],eventWidth:[{type:a.Input}],refresh:[{type:a.Input}],locale:[{type:a.Input}],eventSnapSize:[{type:a.Input}],tooltipPlacement:[{type:a.Input}],tooltipTemplate:[{type:a.Input}],tooltipAppendToBody:[{type:a.Input}],hourSegmentTemplate:[{type:a.Input}],allDayEventTemplate:[{type:a.Input}],eventTemplate:[{type:a.Input}],eventTitleTemplate:[{type:a.Input}],eventClicked:[{type:a.Output}],hourSegmentClicked:[{type:a.Output}],eventTimesChanged:[{type:a.Output}],beforeViewRender:[{type:a.Output}]},e}(),se=function(){function e(){this.eventClicked=new a.EventEmitter}return e.decorators=[{type:a.Component,args:[{selector:"mwl-calendar-all-day-event",template:'\n    <ng-template\n      #defaultTemplate\n      let-event="event"\n      let-eventClicked="eventClicked">\n      <div\n        class="cal-all-day-event"\n        [style.backgroundColor]="event.color?.secondary"\n        [style.borderColor]="event.color?.primary">\n        <mwl-calendar-event-actions [event]="event"></mwl-calendar-event-actions>\n        &ngsp;\n        <mwl-calendar-event-title\n          [event]="event"\n          [customTemplate]="eventTitleTemplate"\n          view="day"\n          (mwlClick)="eventClicked.emit()">\n        </mwl-calendar-event-title>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]="customTemplate || defaultTemplate"\n      [ngTemplateOutletContext]="{\n        event: event,\n        eventClicked: eventClicked\n      }">\n    </ng-template>\n  '}]}],e.propDecorators={event:[{type:a.Input}],customTemplate:[{type:a.Input}],eventTitleTemplate:[{type:a.Input}],eventClicked:[{type:a.Output}]},e}(),de=function(){function e(){}return e.decorators=[{type:a.Component,args:[{selector:"mwl-calendar-day-view-hour-segment",template:'\n    <ng-template\n      #defaultTemplate\n      let-segment="segment"\n      let-locale="locale">\n      <div\n        class="cal-hour-segment"\n        [style.height.px]="segmentHeight"\n        [class.cal-hour-start]="segment.isStart"\n        [class.cal-after-hour-start]="!segment.isStart"\n        [ngClass]="segment.cssClass">\n        <div class="cal-time">\n          {{ segment.date | calendarDate:\'dayViewHour\':locale }}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]="customTemplate || defaultTemplate"\n      [ngTemplateOutletContext]="{\n        segment: segment,\n        locale: locale\n      }">\n    </ng-template>\n  '}]}],e.propDecorators={segment:[{type:a.Input}],segmentHeight:[{type:a.Input}],locale:[{type:a.Input}],customTemplate:[{type:a.Input}]},e}(),pe=function(){function e(){this.eventClicked=new a.EventEmitter}return e.decorators=[{type:a.Component,args:[{selector:"mwl-calendar-day-view-event",template:'\n    <ng-template\n      #defaultTemplate\n      let-dayEvent="dayEvent"\n      let-tooltipPlacement="tooltipPlacement"\n      let-eventClicked="eventClicked"\n      let-tooltipTemplate="tooltipTemplate"\n      let-tooltipAppendToBody="tooltipAppendToBody">\n      <div\n        class="cal-event"\n        [style.backgroundColor]="dayEvent.event.color?.secondary"\n        [style.borderColor]="dayEvent.event.color?.primary"\n        [mwlCalendarTooltip]="dayEvent.event.title | calendarEventTitle:\'dayTooltip\':dayEvent.event"\n        [tooltipPlacement]="tooltipPlacement"\n        [tooltipEvent]="dayEvent.event"\n        [tooltipTemplate]="tooltipTemplate"\n        [tooltipAppendToBody]="tooltipAppendToBody">\n        <mwl-calendar-event-actions [event]="dayEvent.event"></mwl-calendar-event-actions>\n        &ngsp;\n        <mwl-calendar-event-title\n          [event]="dayEvent.event"\n          [customTemplate]="eventTitleTemplate"\n          view="day"\n          (mwlClick)="eventClicked.emit()">\n        </mwl-calendar-event-title>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]="customTemplate || defaultTemplate"\n      [ngTemplateOutletContext]="{\n        dayEvent: dayEvent,\n        tooltipPlacement: tooltipPlacement,\n        eventClicked: eventClicked,\n        tooltipTemplate: tooltipTemplate,\n        tooltipAppendToBody: tooltipAppendToBody\n      }">\n    </ng-template>\n  '}]}],e.propDecorators={dayEvent:[{type:a.Input}],tooltipPlacement:[{type:a.Input}],tooltipAppendToBody:[{type:a.Input}],customTemplate:[{type:a.Input}],eventTitleTemplate:[{type:a.Input}],tooltipTemplate:[{type:a.Input}],eventClicked:[{type:a.Output}]},e}(),ce=function(){function e(){}return e.decorators=[{type:a.NgModule,args:[{imports:[o.CommonModule,I.ResizableModule,m.DragAndDropModule,U],declarations:[le,se,de,pe],exports:[I.ResizableModule,m.DragAndDropModule,le,se,de,pe]}]}],e}(),ue=function(){function t(){}return t.forRoot=function(e){return void 0===e&&(e={}),{ngModule:t,providers:[m.DraggableHelper,e.eventTitleFormatter||L,e.dateFormatter||W,e.utils||$]}},t.decorators=[{type:a.NgModule,args:[{imports:[U,ee,re,ce],exports:[U,ee,re,ce]}]}],t}();e.DAYS_OF_WEEK=t.DAYS_OF_WEEK,e.CalendarModule=ue,e.CalendarCommonModule=U,e.CalendarEventTitleFormatter=L,e.MOMENT=N,e.CalendarMomentDateFormatter=G,e.CalendarNativeDateFormatter=K,e.CalendarAngularDateFormatter=_,e.CalendarDateFormatter=W,e.CalendarUtils=$,e.CalendarMonthViewComponent=J,e.CalendarMonthModule=ee,e.CalendarWeekViewComponent=ae,e.CalendarWeekModule=re,e.CalendarDayViewComponent=le,e.CalendarDayModule=ce,e.ɵh=q,e.ɵa=M,e.ɵb=R,e.ɵi=j,e.ɵf=F,e.ɵe=z,e.ɵg=A,e.ɵd=V,e.ɵc=P,e.ɵj=Y,e.ɵp=se,e.ɵr=pe,e.ɵq=de,e.ɵk=X,e.ɵm=Q,e.ɵl=Z,e.ɵo=ie,e.ɵn=oe,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=angular-calendar.umd.min.js.map