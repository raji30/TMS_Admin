{"version":3,"names":[],"mappings":"","sources":["test.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar index_1 = require(\"./index\");\nvar instanceOf_1 = require(\"./instanceOf\");\nvar uriBuilder_1 = require(\"./uriBuilder\");\nfunction hr() {\n    console.log('====================');\n}\nfunction deepEq(a, b) {\n    if (instanceOf_1.is(a, Object) || typeof a === 'object') {\n        var result = true;\n        for (var key in a) {\n            if (key[0] === '_' || instanceOf_1.is(a[key], Function))\n                continue;\n            result = result && deepEq(a[key], b[key]);\n            if (!result)\n                return result;\n        }\n        return result;\n    }\n    else if (instanceOf_1.is(a, Array)) {\n        var result = true;\n        for (var i = 0; i < a.length; i++) {\n            result = result && deepEq(a[i], b[i]);\n            if (!result)\n                return result;\n        }\n        return result;\n    }\n    else {\n        return a === b;\n    }\n}\nhr();\nconsole.info('URI Query Parse Test');\nvar queryDataSet = [\n    ['search=helloworld&class=commom', { search: 'helloworld', class: 'commom' }],\n    [\n        'search=helloworld&class=commom&class=typescript',\n        { search: 'helloworld', class: ['commom', 'typescript'] }\n    ],\n    [\n        'search=helloworld&class=commom&class=typescript&class=111',\n        { search: 'helloworld', class: ['commom', 'typescript', 111] }\n    ]\n];\nfor (var _i = 0, queryDataSet_1 = queryDataSet; _i < queryDataSet_1.length; _i++) {\n    var data = queryDataSet_1[_i];\n    console.log(data[0]);\n    var queryModel = index_1.UriQueryBuilder.parse(data[0]);\n    console.assert(deepEq(queryModel.model, data[1]));\n    console.assert(deepEq(queryModel.toString(), data[0]));\n}\nhr();\nconsole.info('URI Query Update Test');\nvar queryUpdateDataSet = [\n    [\n        'https://www.youtube.com/watch?v=TlzfSfc_ymI',\n        { v: 'test' },\n        'https://www.youtube.com/watch?v=test'\n    ],\n    [\n        'https://www.youtube.com/watch?v=TlzfymI',\n        { v: 'test', a: [1, 2, 3, 4] },\n        'https://www.youtube.com/watch?v=test&a=1&a=2&a=3&a=4'\n    ]\n];\nfor (var _a = 0, queryUpdateDataSet_1 = queryUpdateDataSet; _a < queryUpdateDataSet_1.length; _a++) {\n    var data = queryUpdateDataSet_1[_a];\n    console.log(data[0]);\n    var queryUpdated = uriBuilder_1.UriBuilder.updateQuery(data[0], data[1]);\n    console.assert(deepEq(queryUpdated, data[2]));\n}\nhr();\nconsole.info('URI Set Path Test');\nvar setPathDataSet = [\n    [\n        'https://www.youtube.com/watch?v=TlzfSfc_ymI',\n        'test/a/b/c/',\n        'https://www.youtube.com/test/a/b/c/?v=TlzfSfc_ymI'\n    ],\n    [\n        'https://www.youtube.com/watch?v=TlzfymI',\n        '/test',\n        'https://www.youtube.com/test?v=TlzfymI'\n    ]\n];\nfor (var _b = 0, setPathDataSet_1 = setPathDataSet; _b < setPathDataSet_1.length; _b++) {\n    var data = setPathDataSet_1[_b];\n    console.log(data[0]);\n    var builder = uriBuilder_1.UriBuilder.parse(data[0]);\n    builder.setPath(data[1]);\n    console.assert(deepEq(builder.toString(), data[2]));\n}\nhr();\nconsole.info('URI Parse Test');\nvar uriDataSet = [\n    [\n        'https://www.youtube.com/watch',\n        {\n            schema: 'https',\n            host: 'www.youtube.com',\n            port: 80,\n            pathSegments: ['watch']\n        }\n    ],\n    [\n        './a/b/c/watch',\n        {\n            schema: uriBuilder_1.UriBuilder.relative,\n            host: '.',\n            port: undefined,\n            pathSegments: ['a', 'b', 'c', 'watch']\n        }\n    ],\n    [\n        'https://www.youtube.com/watch?v=TlzfSfc_ymI&%E4%B8%AD%E6%96%87=%E4%B8%AD%E6%96%87',\n        {\n            schema: 'https',\n            host: 'www.youtube.com',\n            port: 80,\n            pathSegments: ['watch'],\n            query: { v: 'TlzfSfc_ymI', 中文: '中文' }\n        }\n    ],\n    [\n        'https://example.com:8080/a/b/c/d?key=2',\n        {\n            schema: 'https',\n            host: 'example.com',\n            port: 8080,\n            pathSegments: ['a', 'b', 'c', 'd'],\n            query: { key: 2 }\n        }\n    ],\n    [\n        'https://example.com:8080/a/b/c/d?key=2#hash',\n        {\n            schema: 'https',\n            host: 'example.com',\n            port: 8080,\n            pathSegments: ['a', 'b', 'c', 'd'],\n            query: { key: 2 },\n            fragment: 'hash'\n        }\n    ],\n    [\n        'https://example.com/a/#b/c/d?key=2',\n        {\n            schema: 'https',\n            host: 'example.com',\n            port: 80,\n            pathSegments: ['a', ''],\n            fragment: 'b/c/d?key=2'\n        }\n    ],\n    [\n        'https://test@example.com/a/#b/c/d?key=2',\n        {\n            schema: 'https',\n            authority: { user: 'test' },\n            host: 'example.com',\n            port: 80,\n            pathSegments: ['a', ''],\n            fragment: 'b/c/d?key=2'\n        }\n    ],\n    [\n        'https://test:1234@example.com/',\n        {\n            schema: 'https',\n            authority: { user: 'test', password: '1234' },\n            host: 'example.com',\n            port: 80,\n            pathSegments: ['']\n        }\n    ]\n];\nfor (var _c = 0, uriDataSet_1 = uriDataSet; _c < uriDataSet_1.length; _c++) {\n    var data = uriDataSet_1[_c];\n    var uriModel = uriBuilder_1.UriBuilder.parse(data[0]);\n    console.log(uriModel);\n    console.assert(deepEq(uriModel, data[1]));\n    console.assert(deepEq(uriModel.toString(), data[0]));\n}\nhr();\nconsole.info('Empty URI Builder Test');\nvar emptyBuilder = new uriBuilder_1.UriBuilder();\nemptyBuilder.schema = 'http';\nemptyBuilder.host = 'example';\nemptyBuilder.setPath('/home/index');\nemptyBuilder.fragment = 'top';\nemptyBuilder.setAuthority('guest');\nemptyBuilder.query.action = 'back';\nconsole.assert(emptyBuilder.toString() === 'http://guest@example/home/index?action=back#top');\nemptyBuilder.toString();\nhr();\nconsole.info('Delete Query Param Test');\ndelete emptyBuilder.query.action;\nconsole.assert(emptyBuilder.toString() === 'http://guest@example/home/index#top');\nconsole.log(emptyBuilder.toString());\nhr();\nconsole.info('Relative Test');\nvar relativeBuilder = uriBuilder_1.UriBuilder.parse('./home/exam?id=0');\nrelativeBuilder.query.id = 1;\nconsole.assert(relativeBuilder.toString() === './home/exam?id=1');\nconsole.log(relativeBuilder.toString());\n"],"file":"test.js"}