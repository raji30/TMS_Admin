{"version":3,"file":"ng2-input-autocomplete.umd.js.map","sources":["ng://ng2-input-autocomplete/lib/autocomplete.component.ts","ng://ng2-input-autocomplete/lib/autocomplete.module.ts"],"sourcesContent":["/*\n  MIT LICENSE @liuy97\n*/\nimport {\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  AfterViewInit,\n  Output,\n  SimpleChange,\n  ViewContainerRef,\n  HostBinding\n} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n@Component({\n  // tslint:disable-next-line\n  selector: 'ng2-input-autocomplete',\n  template: `\n  <div [ngClass]=\"classList\">\n    <input type=\"text\"\n      placeholder=\"{{placeholder}}\"\n      (blur)=\"showAutoComplete = false;\"\n      (focus)=\"showAutoComplete = true;\"\n      [value]=\"value\"\n      (keyup)=\"enterText($event)\">\n    <ul *ngIf=\"showAutoComplete && candidates && candidates.length > 0\">\n      <li *ngFor=\"let candidate of candidates; let idx = index\"\n        [ngClass]=\"{ active: (idx === selectedIndex) }\"\n        (keyup)=\"onKeyUpEvent($event, idx)\"\n        (mouseover)=\"selectedIndex = idx;\"\n        (mousedown)=\"onSelect(idx)\">\n        {{candidatesLabels[idx]}}\n      </li>\n    </ul>\n  </div>`,\n  styles: [\n    `.autocomplete ul {\n       position: absolute;\n       left: 0;\n       width: 100%;\n       border-left: 1px solid #888;\n       border-right: 1px solid #888;\n       border-bottom: 1px solid #888;\n       list-style: none;\n       padding-left: 0px;\n       margin-top: 2px;\n       background-color: #fff;\n       z-index: 100;\n     }\n     .autocomplete li {\n       text-align: left;\n       list-style: none;\n       width: 100%;\n       padding: 0.4em 0 0.4em 0;\n     }\n     .autocomplete li.active {\n       width: 100%;\n       background-color: #4bf;\n     }\n\n     .autocomplete .highlight {\n       background-color: #e2e2e2;\n     }\n     .autocomplete li.active .highlight {\n       background: #666;\n       color: #fff;\n     }`\n  ]\n})\nexport class AutocompleteComponent implements OnInit, OnChanges {\n  classList = 'autocomplete';\n  @Input() items: any[];\n  @Input() config: any;\n  @Output() selectEvent: EventEmitter<any> = new EventEmitter<any>();\n  @Output() inputChangedEvent: EventEmitter<any> = new EventEmitter<any>();\n  inputElement: HTMLInputElement;\n  value: string;\n  candidates: any[];\n  candidatesLabels: any[];\n  selectedIndex: number;\n  showAutoComplete: boolean;\n  placeholder: string;\n  maxLimit = 0;\n  private sourceField: any;\n  private thisElement: HTMLElement;\n\n  constructor(elementRef: ElementRef) {\n    this.thisElement = elementRef.nativeElement;\n    this.selectedIndex = 0;\n    this.showAutoComplete = false;\n    this.value = '';\n  }\n\n  ngOnInit() {\n    if (this.config && this.config.class) {\n      this.classList += ' ' + this.config.class;\n    }\n    if (this.config && this.config.max > 0) {\n      this.maxLimit = this.config.max;\n    }\n    this.placeholder = 'autocomplete';\n    this.inputElement = this.thisElement.querySelector(\n      'input'\n    ) as HTMLInputElement;\n\n    if (!this.isNull(this.config)) {\n      if (!this.isNull(this.config.placeholder)) {\n        this.placeholder = this.config.placeholder;\n      }\n      if (!this.isNull(this.config.sourceField)) {\n        this.sourceField = this.config.sourceField;\n      }\n    }\n    this.filterItems(this.value);\n    this.inputElement.focus();\n  }\n\n  ngOnChanges() {\n    this.filterItems(this.value);\n  }\n\n  enterText(event: any) {\n    const total = this.candidates.length;\n    switch (event.keyCode) {\n      case 27:\n        this.showAutoComplete = false;\n        break;\n      case 38:\n        this.selectedIndex = (total + this.selectedIndex - 1) % total;\n        break;\n      case 40:\n        this.selectedIndex = (total + this.selectedIndex + 1) % total;\n        break;\n      case 13:\n        if (this.candidates.length > 0) {\n          this.onSelect(this.selectedIndex);\n        }\n        event.preventDefault();\n        break;\n      default:\n        this.value = event.target.value;\n        this.inputChangedEvent.emit(this.value);\n        break;\n    }\n  }\n\n  onSelect(idx: number) {\n    this.showAutoComplete = false;\n    this.value = this.candidatesLabels[idx];\n    this.selectEvent.emit(this.candidates[idx]);\n  }\n\n  onKeyUpEvent(event: KeyboardEvent, idx: number): void {\n    if (event.keyCode === 13) {\n      this.onSelect(idx);\n    }\n }\n\n  filterItems(search: string) {\n    const field = this.sourceField;\n    const filterItem = this.filterItem;\n    if (this.items) {\n      this.candidates = this.items.filter(item => {\n        return filterItem(item, field, search);\n      });\n      if (this.maxLimit > 0) {\n        this.candidates = this.candidates.slice(0, this.maxLimit);\n      }\n      this.buildLabels();\n    }\n  }\n\n  private getFieldValue(object: any, path: any) {\n    if (typeof object === 'string') {\n      return object;\n    }\n    if (path instanceof Array) {\n      let result: any = object;\n      path.forEach((element: any) => {\n        if (\n          result !== null &&\n          result !== undefined &&\n          result[element] !== null &&\n          result[element] !== undefined\n        ) {\n          result = result[element];\n        } else {\n          result = '';\n        }\n      });\n      return result;\n    } else {\n      return object[path] || '';\n    }\n  }\n\n  private isNull(object: any) {\n    return object === null || object === undefined;\n  }\n\n  private buildLabels() {\n    const field = this.sourceField;\n    const getFieldValue = this.getFieldValue;\n    this.candidatesLabels = this.candidates.map((e: any) =>\n      getFieldValue(e, field)\n    );\n  }\n\n  private filterItem(item: any, path: any, search: string) {\n    if (search === null || search === undefined || search.length === 0) {\n      return true;\n    }\n    let result: any;\n    if (typeof item === 'string') {\n      result = item;\n    } else if (path instanceof Array) {\n      result = item;\n      path.forEach((element: any) => {\n        if (\n          result !== null &&\n          result !== undefined &&\n          result[element] !== null &&\n          result[element] !== undefined\n        ) {\n          result = result[element];\n        } else {\n          result = '';\n        }\n      });\n    } else {\n      result = item[path] || '';\n    }\n    return result.toLowerCase().indexOf(search.toLowerCase()) >= 0;\n  }\n}\n\n@Directive({\n  // tslint:disable-next-line\n  selector: '[input-autocomplete]'\n})\nexport class AutocompleteDirective implements OnInit, OnDestroy, OnChanges, AfterViewInit {\n  @Input() config: any;\n  @Input() items: any;\n  @Input() ngModel: string;\n  @Input() control: FormControl;\n  @Output() ngModelChange = new EventEmitter();\n  @Output() inputChangedEvent = new EventEmitter();\n  @Output() selectEvent = new EventEmitter();\n\n  private componentRef: ComponentRef<AutocompleteComponent>;\n  private thisElement: HTMLElement;\n  private autocompleteElement: HTMLElement;\n  private inputElement: HTMLInputElement;\n  private tabIndex: number;\n  private reset = false;\n\n  constructor(\n    private resolver: ComponentFactoryResolver,\n    public viewContainerRef: ViewContainerRef\n  ) {\n    this.thisElement = this.viewContainerRef.element.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.thisElement.tagName.toLowerCase() === 'form') {\n      return;\n    }\n    this.createDiv();\n  }\n\n  ngOnDestroy() {\n    if (this.componentRef) {\n      this.componentRef.instance.selectEvent.unsubscribe();\n      this.componentRef.instance.inputChangedEvent.unsubscribe();\n    }\n    document.removeEventListener('click', this.hideAutocomplete);\n  }\n\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n    if (changes['items'] && this.componentRef) {\n      const component = this.componentRef.instance;\n      component.items = changes['items'].currentValue;\n      component.filterItems(component.value);\n    }\n  }\n\n  ngAfterViewInit() {\n    const input = this.getInputElement();\n    if (this.control) {\n      this.control.valueChanges.subscribe(() => {\n        this.reset = true;\n      });\n    }\n    if (input.form) {\n      input.form.addEventListener('reset', () => {\n        this.reset = true;\n      });\n    }\n  }\n\n  @HostListener('click', ['$event.target'])\n  @HostListener('focus', ['$event.target'])\n  showAutocomplete(event: any) {\n    this.hideAutocomplete();\n    if (event === this.thisElement) {\n      this.createAutocomplete();\n    }\n  }\n\n  getInputElement() {\n    let input = this.thisElement as HTMLInputElement;\n\n    if (this.thisElement.tagName !== 'INPUT' && this.autocompleteElement) {\n      input = this.thisElement.querySelector(\n        'input'\n      ) as HTMLInputElement;\n    }\n\n    return input;\n  }\n\n  hideAutocomplete = (event?: any): void => {\n    if (!this.componentRef) {\n      return;\n    }\n    if (event && event.target && this.thisElement && event.target === this.thisElement.parentElement) {\n      return;\n    }\n    if (\n      !event ||\n      (event.target !== this.thisElement && event.type === 'click')\n    ) {\n      this.componentRef.destroy();\n      this.componentRef = undefined;\n    }\n    if (this.inputElement['tabIndex'] < 0) {\n      this.inputElement['tabIndex'] = this.tabIndex;\n    }\n  }\n\n  onInputChanged = (val: string) => {\n    this.inputElement.value = val;\n    if (val !== this.ngModel) {\n      this.ngModel = val;\n      this.ngModelChange.emit(val);\n    }\n    const component = this.componentRef.instance;\n    component.filterItems(val);\n    this.inputChangedEvent.emit(val);\n  }\n\n  onSelect = (item: any) => {\n    const component = this.componentRef.instance;\n    const val = component.value;\n    if (val !== this.ngModel) {\n      this.ngModel = val;\n      this.ngModelChange.emit(val);\n    }\n    this.selectEvent.emit(item);\n    if (this.inputElement) {\n      this.inputElement.value = '' + val;\n    }\n    this.hideAutocomplete();\n  }\n\n  private createDiv() {\n    const element = document.createElement('div');\n    element.style.display = 'inline-block';\n    element.style.position = 'relative';\n    this.thisElement.parentElement.insertBefore(\n      element,\n      this.thisElement.nextSibling\n    );\n    element.appendChild(this.thisElement);\n    document.addEventListener('click', this.hideAutocomplete);\n  }\n\n  private createAutocomplete() {\n    const factory = this.resolver.resolveComponentFactory(\n      AutocompleteComponent\n    );\n    this.componentRef = this.viewContainerRef.createComponent(factory);\n    const component = this.componentRef.instance;\n    component.config = this.config;\n    component.items = this.items;\n    component.selectEvent.subscribe(this.onSelect);\n    component.inputChangedEvent.subscribe(this.onInputChanged);\n    this.autocompleteElement = this.componentRef.location.nativeElement;\n    this.autocompleteElement.style.display = 'none';\n    this.inputElement = this.getInputElement();\n    if (this.thisElement.tagName !== 'INPUT' && this.autocompleteElement) {\n      this.inputElement.parentElement.insertBefore(\n        this.autocompleteElement,\n        this.inputElement.nextSibling\n      );\n    }\n\n    if (this.reset) {\n      this.ngModel = '';\n      this.reset = false;\n    }\n\n    this.inputElement.value = this.ngModel ? this.ngModel : '';\n    component.value = this.inputElement.value;\n    this.tabIndex = this.inputElement['tabIndex'];\n    this.inputElement['tabIndex'] = -100;\n    if (this.componentRef) {\n      const rect = this.thisElement.getBoundingClientRect();\n      const style = this.autocompleteElement.style;\n      style.width = rect.width + 'px';\n      style.position = 'absolute';\n      style.zIndex = '1';\n      style.top = '0';\n      style.left = '0';\n      style.display = 'inline-block';\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { AutocompleteComponent, AutocompleteDirective } from './autocomplete.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule],\n  declarations: [AutocompleteComponent, AutocompleteDirective],\n  exports: [AutocompleteComponent, AutocompleteDirective],\n  entryComponents: [AutocompleteComponent]\n})\nexport class AutocompleteModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: AutocompleteModule\n    };\n  }\n}\n\n"],"names":["EventEmitter","Component","ElementRef","Input","Output","Directive","ComponentFactoryResolver","ViewContainerRef","HostListener","NgModule","CommonModule","FormsModule"],"mappings":"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"}
