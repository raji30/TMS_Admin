{"version":3,"file":"index.js","sourceRoot":"","sources":["../.ng_build/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAuB,wBAAwB,EAAE,cAAc,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAClH,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC/C,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAE,qBAAqB,EAAE,MAAM,sCAAsC,CAAC;AAC7E,OAAO,EAAE,sBAAsB,EAAE,MAAM,uCAAuC,CAAC;AAC/E,OAAO,EAAE,aAAa,EAAE,mBAAmB,EAAE,MAAM,6BAA6B,CAAC;AACjF,OAAO,EAAE,gBAAgB,EAAE,MAAM,8BAA8B,CAAC;AAEhE,OAAO,EAAE,eAAe,EAAE,MAAM,+BAA+B,CAAC;AAChE,OAAO,EAAE,aAAa,EAAiB,mBAAmB,EAAE,MAAM,6BAA6B,CAAC;AAEhG,OAAO,EAAE,gBAAgB,EAAE,MAAM,8BAA8B,CAAC;;;;;;;;;AAUhE,MAAM,+BAA+B,QAAkC,EAAE,cAA8B,EAAE,QAAkB,EAAE,OAA4B;IACrJ,MAAM,CAAC,IAAI,aAAa,CAAC,QAAQ,EAAE,cAAc,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;CACzE;;;;IAsBU,4BAAO,GAAd,UAAe,MAA2B;QACtC,MAAM,CAAC;YACH,QAAQ,EAAE,oBAAoB;YAC9B,SAAS,EAAE;gBACP,EAAC,OAAO,EAAE,mBAAmB,EAAE,QAAQ,EAAE,MAAM,EAAC;gBAChD;oBACI,OAAO,EAAE,aAAa;oBACtB,UAAU,EAAE,oBAAoB;oBAChC,IAAI,EAAE,CAAC,wBAAwB,EAAE,cAAc,EAAE,QAAQ,EAAE,mBAAmB,CAAC;iBAClF;aACJ;SACJ,CAAC;KACL;IAEM,6BAAQ,GAAf;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,oBAAoB;YAC9B,SAAS,EAAE;gBACP;oBACI,OAAO,EAAE,aAAa;oBACtB,UAAU,EAAE,oBAAoB;oBAChC,IAAI,EAAE,CAAC,wBAAwB,EAAE,cAAc,EAAE,QAAQ,EAAE,mBAAmB,CAAC;iBAClF;aACJ;SACJ,CAAC;KACL;;gBA7CJ,QAAQ,SAAC;oBACN,OAAO,EAAE;wBACL,YAAY;wBACZ,WAAW;qBACd;oBACD,YAAY,EAAE;wBACV,qBAAqB;wBACrB,sBAAsB;wBACtB,gBAAgB;qBACnB;oBACD,SAAS,EAAE;wBACP,aAAa;qBAChB;oBACD,eAAe,EAAE;wBACb,qBAAqB;wBACrB,sBAAsB;wBACtB,gBAAgB;qBACnB;iBACJ;;;;+BA3CD;;SA4Ca,oBAAoB","sourcesContent":["import { NgModule, ModuleWithProviders, ComponentFactoryResolver, ApplicationRef, Injector } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { DialogHolderComponent } from './components/dialog-holder.component';\r\nimport { DialogWrapperComponent } from './components/dialog-wrapper.component';\r\nimport { DialogService, DialogServiceConfig } from './components/dialog.service';\r\nimport { BuiltInComponent } from './components/built-in.dialog';\r\n\r\nexport { DialogComponent } from './components/dialog.component';\r\nexport { DialogService, DialogOptions, DialogServiceConfig } from './components/dialog.service';\r\nexport { BuiltInOptions } from './components/built-in.options';\r\nexport { BuiltInComponent } from './components/built-in.dialog';\r\n\r\n/**\r\n * Dialog service factory. Creates dialog service with options\r\n * @param { ComponentFactoryResolver } resolver\r\n * @param { ApplicationRef } applicationRef\r\n * @param { Injector } injector\r\n * @param { DialogServiceConfig } options\r\n * @return { DialogService }\r\n */\r\nexport function dialogServiceFactory(resolver: ComponentFactoryResolver, applicationRef: ApplicationRef, injector: Injector, options: DialogServiceConfig) {\r\n    return new DialogService(resolver, applicationRef, injector, options);\r\n}\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule\r\n    ],\r\n    declarations: [\r\n        DialogHolderComponent,\r\n        DialogWrapperComponent,\r\n        BuiltInComponent\r\n    ],\r\n    providers: [\r\n        DialogService\r\n    ],\r\n    entryComponents: [\r\n        DialogHolderComponent,\r\n        DialogWrapperComponent,\r\n        BuiltInComponent\r\n    ]\r\n})\r\nexport class BootstrapModalModule {\r\n    static forRoot(config: DialogServiceConfig): ModuleWithProviders {\r\n        return {\r\n            ngModule: BootstrapModalModule,\r\n            providers: [\r\n                {provide: DialogServiceConfig, useValue: config},\r\n                {\r\n                    provide: DialogService,\r\n                    useFactory: dialogServiceFactory,\r\n                    deps: [ComponentFactoryResolver, ApplicationRef, Injector, DialogServiceConfig]\r\n                }\r\n            ]\r\n        };\r\n    }\r\n\r\n    static forChild(): ModuleWithProviders {\r\n        return {\r\n            ngModule: BootstrapModalModule,\r\n            providers: [\r\n                {\r\n                    provide: DialogService,\r\n                    useFactory: dialogServiceFactory,\r\n                    deps: [ComponentFactoryResolver, ApplicationRef, Injector, DialogServiceConfig]\r\n                }\r\n            ]\r\n        };\r\n    }\r\n}\r\n\r\n"]}