{"version":3,"file":"directive.js","sourceRoot":"","sources":["../../src/directive.ts"],"names":[],"mappings":"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","sourcesContent":["import { Directive, EventEmitter, Output, ElementRef, Input, OnInit, OnDestroy, NgZone } from \"@angular/core\";\r\nimport \"brace\";\r\nimport \"brace/theme/monokai\";\r\n\r\n\r\ndeclare var ace: any;\r\n\r\n@Directive({\r\n    selector: '[ace-editor]'\r\n})\r\nexport class AceEditorDirective implements OnInit, OnDestroy {\r\n    @Output() textChanged = new EventEmitter();\r\n    @Output() textChange = new EventEmitter();\r\n    _options: any = {};\r\n    _readOnly: boolean = false;\r\n    _theme: string = \"monokai\";\r\n    _mode: any = \"html\";\r\n    _autoUpdateContent: boolean = true;\r\n    _durationBeforeCallback: number = 0;\r\n    _text: string = \"\";\r\n    editor: any;\r\n    oldText: any;\r\n    timeoutSaving: any;\r\n\r\n    constructor(elementRef: ElementRef, private zone: NgZone) {\r\n        let el = elementRef.nativeElement;\r\n        this.zone.runOutsideAngular(() => {\r\n            this.editor = ace[\"edit\"](el);\r\n        });\r\n        this.editor.$blockScrolling = Infinity;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n        this.initEvents();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.editor.destroy();\r\n    }\r\n\r\n    init() {\r\n        this.editor.setOptions(this._options || {});\r\n        this.editor.setTheme(`ace/theme/${this._theme}`);\r\n        this.setMode(this._mode);\r\n        this.editor.setReadOnly(this._readOnly);\r\n    }\r\n\r\n    initEvents() {\r\n        this.editor.on('change', () => this.updateText());\r\n        this.editor.on('paste', () => this.updateText());\r\n    }\r\n\r\n    updateText() {\r\n        let newVal = this.editor.getValue();\r\n        if (newVal === this.oldText) {\r\n            return;\r\n        }\r\n        if (!this._durationBeforeCallback) {\r\n            this._text = newVal;\r\n            this.zone.run(() => {\r\n                this.textChange.emit(newVal);\r\n                this.textChanged.emit(newVal);\r\n            });\r\n        } else {\r\n            if (this.timeoutSaving != null) {\r\n                clearTimeout(this.timeoutSaving);\r\n            }\r\n\r\n            this.timeoutSaving = setTimeout(() => {\r\n                this._text = newVal;\r\n                this.zone.run(() => {\r\n                    this.textChange.emit(newVal);\r\n                    this.textChanged.emit(newVal);\r\n                });\r\n                this.timeoutSaving = null;\r\n            }, this._durationBeforeCallback);\r\n        }\r\n        this.oldText = newVal;\r\n    }\r\n\r\n    @Input() set options(options: any) {\r\n        this._options = options;\r\n        this.editor.setOptions(options || {});\r\n    }\r\n\r\n    @Input() set readOnly(readOnly: any) {\r\n        this._readOnly = readOnly;\r\n        this.editor.setReadOnly(readOnly);\r\n    }\r\n\r\n    @Input() set theme(theme: any) {\r\n        this._theme = theme;\r\n        this.editor.setTheme(`ace/theme/${theme}`);\r\n    }\r\n\r\n    @Input() set mode(mode: any) {\r\n        this.setMode(mode);\r\n    }\r\n\r\n    setMode(mode: any) {\r\n        this._mode = mode;\r\n        if (typeof this._mode === 'object') {\r\n            this.editor.getSession().setMode(this._mode);\r\n        } else {\r\n            this.editor.getSession().setMode(`ace/mode/${this._mode}`);\r\n        }\r\n    }\r\n\r\n    @Input()\r\n    get text() {\r\n        return this._text;\r\n    }\r\n\r\n    set text(text: string) {\r\n        this.setText(text);\r\n    }\r\n\r\n    setText(text: any) {\r\n        if (this._text !== text) {\r\n            if (text === null || text === undefined) {\r\n                text = \"\";\r\n            }\r\n\r\n            if (this._autoUpdateContent === true) {\r\n                this._text = text;\r\n                this.editor.setValue(text);\r\n                this.editor.clearSelection();\r\n            }\r\n        }\r\n    }\r\n\r\n    @Input() set autoUpdateContent(status: any) {\r\n        this._autoUpdateContent = status;\r\n    }\r\n\r\n    @Input() set durationBeforeCallback(num: number) {\r\n        this.setDurationBeforeCallback(num);\r\n    }\r\n\r\n    setDurationBeforeCallback(num: number) {\r\n        this._durationBeforeCallback = num;\r\n    }\r\n\r\n    get aceEditor() {\r\n        return this.editor;\r\n    }\r\n}\r\n"]}