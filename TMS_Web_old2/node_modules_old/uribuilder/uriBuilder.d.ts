import { IUriQueryModel } from './uriQueryBuilder';
import { IUriAuthority } from './uriAuthority';
export interface IUriModel {
    schema: string;
    authority?: IUriAuthority;
    host: string;
    port: number;
    pathSegments: string[];
    query: IUriQueryModel;
    fragment: string;
}
export declare class UriBuilder implements IUriModel {
    static relative: string;
    schema: string;
    private _authority;
    readonly authority: IUriAuthority;
    host: string;
    private _port?;
    port: number;
    pathSegments: string[];
    query: IUriQueryModel;
    fragment: string;
    static isUriFormat(str: string): boolean;
    static updateQuery(uri: string, model: IUriQueryModel): string;
    static parse(uri: string): UriBuilder;
    setPath(path: string): void;
    setAuthority(user: string, password?: string): void;
    isRelative(): boolean;
    toString(): string;
}
