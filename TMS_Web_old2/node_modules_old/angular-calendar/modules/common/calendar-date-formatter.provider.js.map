{"version":3,"file":"calendar-date-formatter.provider.js","sourceRoot":"","sources":["../../../src/modules/common/calendar-date-formatter.provider.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,4BAA4B,EAAE,MAAM,4CAA4C,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;AA0B1F;;;;;;;;;;;;;;;;;;;;;;;;AAAA;IAA2C,yCAA4B;;;;gCA1BvE;EA0B2C,4BAA4B,EAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;AAA1E,iCAA0E","sourcesContent":["import { CalendarAngularDateFormatter } from './calendar-angular-date-formatter.provider';\n\n/**\n * This class is responsible for all formatting of dates. There are 3 implementations available, the `CalendarAngularDateFormatter` (default) which uses the angular date pipe to format dates, the `CalendarNativeDateFormatter` which will use the <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\" target=\"_blank\">Intl</a> API to format dates, or there is the `CalendarMomentDateFormatter` which uses <a href=\"http://momentjs.com/\" target=\"_blank\">moment</a>.\n *\n * If you wish, you may override any of the defaults via angulars DI. For example:\n *\n * ```typescript\n * import { CalendarDateFormatter, DateFormatterParams } from 'angular-calendar';\n * import { DatePipe } from '@angular/common';\n *\n * class CustomDateFormatter extends CalendarDateFormatter {\n *\n *   public monthViewColumnHeader({date, locale}: DateFormatterParams): string {\n *     return new DatePipe(locale).transform(date, 'EEE', locale); // use short week days\n *   }\n *\n * }\n *\n * // in your component that uses the calendar\n * providers: [{\n *   provide: CalendarDateFormatter,\n *   useClass: CustomDateFormatter\n * }]\n * ```\n */\nexport class CalendarDateFormatter extends CalendarAngularDateFormatter {}\n"]}