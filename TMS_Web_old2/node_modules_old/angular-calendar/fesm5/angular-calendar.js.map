{"version":3,"file":"angular-calendar.js.map","sources":["ng://angular-calendar/modules/common/util.ts","ng://angular-calendar/modules/common/calendar-event-actions.component.ts","ng://angular-calendar/modules/common/calendar-event-title.component.ts","ng://angular-calendar/modules/common/calendar-tooltip.directive.ts","ng://angular-calendar/modules/common/calendar-previous-view.directive.ts","ng://angular-calendar/modules/common/calendar-next-view.directive.ts","ng://angular-calendar/modules/common/calendar-today.directive.ts","ng://angular-calendar/modules/common/calendar-angular-date-formatter.provider.ts","ng://angular-calendar/modules/common/calendar-date-formatter.provider.ts","ng://angular-calendar/modules/common/calendar-date.pipe.ts","ng://angular-calendar/modules/common/calendar-event-title-formatter.provider.ts","ng://angular-calendar/modules/common/calendar-event-title.pipe.ts","ng://angular-calendar/modules/common/click.directive.ts","ng://angular-calendar/modules/common/calendar-utils.provider.ts","ng://angular-calendar/modules/common/calendar-moment-date-formatter.provider.ts","ng://angular-calendar/modules/common/calendar-native-date-formatter.provider.ts","ng://angular-calendar/modules/common/calendar-common.module.ts","ng://angular-calendar/modules/month/calendar-month-view.component.ts","ng://angular-calendar/modules/month/calendar-month-view-header.component.ts","ng://angular-calendar/modules/month/calendar-month-cell.component.ts","ng://angular-calendar/modules/month/calendar-open-day-events.component.ts","ng://angular-calendar/modules/month/calendar-month.module.ts","ng://angular-calendar/modules/common/calendar-drag-helper.provider.ts","ng://angular-calendar/modules/common/calendar-resize-helper.provider.ts","ng://angular-calendar/modules/week/calendar-week-view.component.ts","ng://angular-calendar/modules/week/calendar-week-view-header.component.ts","ng://angular-calendar/modules/week/calendar-week-view-event.component.ts","ng://angular-calendar/modules/week/calendar-week.module.ts","ng://angular-calendar/modules/day/calendar-day-view.component.ts","ng://angular-calendar/modules/day/calendar-all-day-event.component.ts","ng://angular-calendar/modules/day/calendar-day-view-hour-segment.component.ts","ng://angular-calendar/modules/day/calendar-day-view-event.component.ts","ng://angular-calendar/modules/day/calendar-day.module.ts","ng://angular-calendar/modules/calendar.module.ts"],"sourcesContent":["import {\n  CalendarEvent,\n  validateEvents as validateEventsWithoutLog,\n  WeekDay\n} from 'calendar-utils';\n\nexport const validateEvents = (events: CalendarEvent[]) => {\n  const warn = (...args) => console.warn('angular-calendar', ...args);\n  return validateEventsWithoutLog(events, warn);\n};\n\nexport function isInside(outer: ClientRect, inner: ClientRect): boolean {\n  return (\n    outer.left <= inner.left &&\n    inner.left <= outer.right &&\n    outer.left <= inner.right &&\n    inner.right <= outer.right &&\n    outer.top <= inner.top &&\n    inner.top <= outer.bottom &&\n    outer.top <= inner.bottom &&\n    inner.bottom <= outer.bottom\n  );\n}\n\nexport const trackByEventId = (index: number, event: CalendarEvent) =>\n  event.id ? event.id : event;\n\nexport const trackByWeekDayHeaderDate = (index: number, day: WeekDay) =>\n  day.date.toISOString();\n\nexport const trackByIndex = (index: number) => index;\n","import { Component, Input } from '@angular/core';\nimport { CalendarEvent } from 'calendar-utils';\nimport { trackByIndex } from './util';\n\n@Component({\n  selector: 'mwl-calendar-event-actions',\n  template: `\n    <span *ngIf=\"event.actions\" class=\"cal-event-actions\">\n      <a\n        class=\"cal-event-action\"\n        href=\"javascript:;\"\n        *ngFor=\"let action of event.actions; trackBy:trackByIndex\"\n        (mwlClick)=\"action.onClick({event: event})\"\n        [ngClass]=\"action.cssClass\"\n        [innerHtml]=\"action.label\">\n      </a>\n    </span>\n  `\n})\nexport class CalendarEventActionsComponent {\n  @Input() event: CalendarEvent;\n  trackByIndex = trackByIndex;\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\nimport { CalendarEvent } from 'calendar-utils';\n\n@Component({\n  selector: 'mwl-calendar-event-title',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-event=\"event\"\n      let-view=\"view\">\n      <a\n        class=\"cal-event-title\"\n        href=\"javascript:;\"\n        [innerHTML]=\"event.title | calendarEventTitle:view:event\">\n      </a>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        event: event,\n        view: view\n      }\">\n    </ng-template>\n  `\n})\nexport class CalendarEventTitleComponent {\n  @Input() event: CalendarEvent;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() view: string;\n}\n","import {\n  Directive,\n  Component,\n  HostListener,\n  OnDestroy,\n  Input,\n  ComponentRef,\n  Injector,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  ElementRef,\n  ComponentFactory,\n  Inject,\n  Renderer2,\n  TemplateRef\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Positioning } from 'positioning';\nimport { CalendarEvent } from 'calendar-utils';\n\n@Component({\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-contents=\"contents\"\n      let-placement=\"placement\"\n      let-event=\"event\">\n      <div class=\"cal-tooltip\" [ngClass]=\"'cal-tooltip-' + placement\">\n        <div class=\"cal-tooltip-arrow\"></div>\n        <div class=\"cal-tooltip-inner\" [innerHtml]=\"contents\"></div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        contents: contents,\n        placement: placement,\n        event: event\n      }\">\n    </ng-template>\n  `\n})\nexport class CalendarTooltipWindowComponent {\n  @Input() contents: string;\n\n  @Input() placement: string;\n\n  @Input() event: CalendarEvent;\n\n  @Input() customTemplate: TemplateRef<any>;\n}\n\n@Directive({\n  selector: '[mwlCalendarTooltip]'\n})\nexport class CalendarTooltipDirective implements OnDestroy {\n  @Input('mwlCalendarTooltip') contents: string; // tslint:disable-line no-input-rename\n\n  @Input('tooltipPlacement') placement: string = 'top'; // tslint:disable-line no-input-rename\n\n  @Input('tooltipTemplate') customTemplate: TemplateRef<any>; // tslint:disable-line no-input-rename\n\n  @Input('tooltipEvent') event: CalendarEvent; // tslint:disable-line no-input-rename\n\n  @Input('tooltipAppendToBody') appendToBody: boolean; // tslint:disable-line no-input-rename\n\n  private tooltipFactory: ComponentFactory<CalendarTooltipWindowComponent>;\n  private tooltipRef: ComponentRef<CalendarTooltipWindowComponent>;\n  private positioning: Positioning = new Positioning();\n\n  constructor(\n    private elementRef: ElementRef,\n    private injector: Injector,\n    private renderer: Renderer2,\n    componentFactoryResolver: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n    @Inject(DOCUMENT) private document //tslint:disable-line\n  ) {\n    this.tooltipFactory = componentFactoryResolver.resolveComponentFactory(\n      CalendarTooltipWindowComponent\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.hide();\n  }\n\n  @HostListener('mouseenter')\n  onMouseOver(): void {\n    this.show();\n  }\n\n  @HostListener('mouseleave')\n  onMouseOut(): void {\n    this.hide();\n  }\n\n  private show(): void {\n    if (!this.tooltipRef && this.contents) {\n      this.tooltipRef = this.viewContainerRef.createComponent(\n        this.tooltipFactory,\n        0,\n        this.injector,\n        []\n      );\n      this.tooltipRef.instance.contents = this.contents;\n      this.tooltipRef.instance.placement = this.placement;\n      this.tooltipRef.instance.customTemplate = this.customTemplate;\n      this.tooltipRef.instance.event = this.event;\n      if (this.appendToBody) {\n        this.document.body.appendChild(this.tooltipRef.location.nativeElement);\n      }\n      requestAnimationFrame(() => {\n        this.positionTooltip();\n      });\n    }\n  }\n\n  private hide(): void {\n    if (this.tooltipRef) {\n      this.viewContainerRef.remove(\n        this.viewContainerRef.indexOf(this.tooltipRef.hostView)\n      );\n      this.tooltipRef = null;\n    }\n  }\n\n  private positionTooltip(): void {\n    if (this.tooltipRef) {\n      const targetPosition: ClientRect = this.positioning.positionElements(\n        this.elementRef.nativeElement,\n        this.tooltipRef.location.nativeElement.children[0],\n        this.placement,\n        this.appendToBody\n      );\n\n      const elm: HTMLElement = this.tooltipRef.location.nativeElement\n        .children[0];\n\n      this.renderer.setStyle(elm, 'top', `${targetPosition.top}px`);\n      this.renderer.setStyle(elm, 'left', `${targetPosition.left}px`);\n    }\n  }\n}\n","import {\n  Directive,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport subDays from 'date-fns/sub_days/index';\nimport subWeeks from 'date-fns/sub_weeks/index';\nimport subMonths from 'date-fns/sub_months/index';\n\n/**\n * Change the view date to the previous view. For example:\n *\n * ```typescript\n * <button\n *  mwlCalendarPreviousView\n *  [(viewDate)]=\"viewDate\"\n *  [view]=\"view\">\n *  Previous\n * </button>\n * ```\n */\n@Directive({\n  selector: '[mwlCalendarPreviousView]'\n})\nexport class CalendarPreviousViewDirective {\n  /**\n   * The current view\n   */\n  @Input() view: string;\n\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * Called when the view date is changed\n   */\n  @Output() viewDateChange: EventEmitter<Date> = new EventEmitter();\n\n  /**\n   * @hidden\n   */\n  @HostListener('click')\n  onClick(): void {\n    const subFn: any = {\n      day: subDays,\n      week: subWeeks,\n      month: subMonths\n    }[this.view];\n\n    this.viewDateChange.emit(subFn(this.viewDate, 1));\n  }\n}\n","import {\n  Directive,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport addDays from 'date-fns/add_days/index';\nimport addWeeks from 'date-fns/add_weeks/index';\nimport addMonths from 'date-fns/add_months/index';\n\n/**\n * Change the view date to the next view. For example:\n *\n * ```typescript\n * <button\n *  mwlCalendarNextView\n *  [(viewDate)]=\"viewDate\"\n *  [view]=\"view\">\n *  Next\n * </button>\n * ```\n */\n@Directive({\n  selector: '[mwlCalendarNextView]'\n})\nexport class CalendarNextViewDirective {\n  /**\n   * The current view\n   */\n  @Input() view: string;\n\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * Called when the view date is changed\n   */\n  @Output() viewDateChange: EventEmitter<Date> = new EventEmitter();\n\n  /**\n   * @hidden\n   */\n  @HostListener('click')\n  onClick(): void {\n    const addFn: any = {\n      day: addDays,\n      week: addWeeks,\n      month: addMonths\n    }[this.view];\n\n    this.viewDateChange.emit(addFn(this.viewDate, 1));\n  }\n}\n","import {\n  Directive,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport startOfToday from 'date-fns/start_of_today/index';\n\n/**\n * Change the view date to the current day. For example:\n *\n * ```typescript\n * <button\n *  mwlCalendarToday\n *  [(viewDate)]=\"viewDate\">\n *  Today\n * </button>\n * ```\n */\n@Directive({\n  selector: '[mwlCalendarToday]'\n})\nexport class CalendarTodayDirective {\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * Called when the view date is changed\n   */\n  @Output() viewDateChange: EventEmitter<Date> = new EventEmitter();\n\n  /**\n   * @hidden\n   */\n  @HostListener('click')\n  onClick(): void {\n    this.viewDateChange.emit(startOfToday());\n  }\n}\n","import {\n  CalendarDateFormatterInterface,\n  DateFormatterParams\n} from './calendar-date-formatter.interface';\nimport getISOWeek from 'date-fns/get_iso_week/index';\nimport { DatePipe } from '@angular/common';\n\n/**\n * This will use the angular date pipe to do all date formatting. It is the default date formatter used by the calendar.\n */\nexport class CalendarAngularDateFormatter\n  implements CalendarDateFormatterInterface {\n  /**\n   * The month view header week day labels\n   */\n  public monthViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return new DatePipe(locale).transform(date, 'EEEE', null, locale);\n  }\n\n  /**\n   * The month view cell day number\n   */\n  public monthViewDayNumber({ date, locale }: DateFormatterParams): string {\n    return new DatePipe(locale).transform(date, 'd', null, locale);\n  }\n\n  /**\n   * The month view title\n   */\n  public monthViewTitle({ date, locale }: DateFormatterParams): string {\n    return new DatePipe(locale).transform(date, 'MMMM y', null, locale);\n  }\n\n  /**\n   * The week view header week day labels\n   */\n  public weekViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return new DatePipe(locale).transform(date, 'EEEE', null, locale);\n  }\n\n  /**\n   * The week view sub header day and month labels\n   */\n  public weekViewColumnSubHeader({\n    date,\n    locale\n  }: DateFormatterParams): string {\n    return new DatePipe(locale).transform(date, 'MMM d', null, locale);\n  }\n\n  /**\n   * The week view title\n   */\n  public weekViewTitle({ date, locale }: DateFormatterParams): string {\n    const year: string = new DatePipe(locale).transform(\n      date,\n      'y',\n      null,\n      locale\n    );\n    const weekNumber: number = getISOWeek(date);\n    return `Week ${weekNumber} of ${year}`;\n  }\n\n  /**\n   * The time formatting down the left hand side of the day view\n   */\n  public dayViewHour({ date, locale }: DateFormatterParams): string {\n    return new DatePipe(locale).transform(date, 'h a', null, locale);\n  }\n\n  /**\n   * The day view title\n   */\n  public dayViewTitle({ date, locale }: DateFormatterParams): string {\n    return new DatePipe(locale).transform(\n      date,\n      'EEEE, MMMM d, y',\n      null,\n      locale\n    );\n  }\n}\n","import { CalendarAngularDateFormatter } from './calendar-angular-date-formatter.provider';\n\n/**\n * This class is responsible for all formatting of dates. There are 3 implementations available, the `CalendarAngularDateFormatter` (default) which uses the angular date pipe to format dates, the `CalendarNativeDateFormatter` which will use the <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\" target=\"_blank\">Intl</a> API to format dates, or there is the `CalendarMomentDateFormatter` which uses <a href=\"http://momentjs.com/\" target=\"_blank\">moment</a>.\n *\n * If you wish, you may override any of the defaults via angulars DI. For example:\n *\n * ```typescript\n * import { CalendarDateFormatter, DateFormatterParams } from 'angular-calendar';\n * import { DatePipe } from '@angular/common';\n *\n * class CustomDateFormatter extends CalendarDateFormatter {\n *\n *   public monthViewColumnHeader({date, locale}: DateFormatterParams): string {\n *     return new DatePipe(locale).transform(date, 'EEE', locale); // use short week days\n *   }\n *\n * }\n *\n * // in your component that uses the calendar\n * providers: [{\n *   provide: CalendarDateFormatter,\n *   useClass: CustomDateFormatter\n * }]\n * ```\n */\nexport class CalendarDateFormatter extends CalendarAngularDateFormatter {}\n","import { Pipe, PipeTransform, LOCALE_ID, Inject } from '@angular/core';\nimport { CalendarDateFormatter } from './calendar-date-formatter.provider';\n\n/**\n * This pipe is primarily for rendering the current view title. Example usage:\n * ```typescript\n * // where `viewDate` is a `Date` and view is `'month' | 'week' | 'day'`\n * {{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}\n * ```\n */\n@Pipe({\n  name: 'calendarDate'\n})\nexport class CalendarDatePipe implements PipeTransform {\n  constructor(\n    private dateFormatter: CalendarDateFormatter,\n    @Inject(LOCALE_ID) private locale: string\n  ) {}\n\n  transform(date: Date, method: string, locale: string = this.locale): string {\n    return this.dateFormatter[method]({ date, locale });\n  }\n}\n","import { CalendarEvent } from 'calendar-utils';\n\n/**\n * This class is responsible for displaying all event titles within the calendar. You may override any of its methods via angulars DI to suit your requirements. For example:\n *\n * ```typescript\n * import { CalendarEventTitleFormatter, CalendarEvent } from 'angular-calendar';\n *\n * class CustomEventTitleFormatter extends CalendarEventTitleFormatter {\n *\n *   month(event: CalendarEvent): string {\n *     return `Custom prefix: ${event.title}`;\n *   }\n *\n * }\n *\n * // in your component\n * providers: [{\n *  provide: CalendarEventTitleFormatter,\n *  useClass: CustomEventTitleFormatter\n * }]\n * ```\n */\nexport class CalendarEventTitleFormatter {\n  /**\n   * The month view event title.\n   */\n  month(event: CalendarEvent): string {\n    return event.title;\n  }\n\n  /**\n   * The month view event tooltip. Return a falsey value from this to disable the tooltip.\n   */\n  monthTooltip(event: CalendarEvent): string {\n    return event.title;\n  }\n\n  /**\n   * The week view event title.\n   */\n  week(event: CalendarEvent): string {\n    return event.title;\n  }\n\n  /**\n   * The week view event tooltip. Return a falsey value from this to disable the tooltip.\n   */\n  weekTooltip(event: CalendarEvent): string {\n    return event.title;\n  }\n\n  /**\n   * The day view event title.\n   */\n  day(event: CalendarEvent): string {\n    return event.title;\n  }\n\n  /**\n   * The day view event tooltip. Return a falsey value from this to disable the tooltip.\n   */\n  dayTooltip(event: CalendarEvent): string {\n    return event.title;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { CalendarEvent } from 'calendar-utils';\nimport { CalendarEventTitleFormatter } from './calendar-event-title-formatter.provider';\n\n@Pipe({\n  name: 'calendarEventTitle'\n})\nexport class CalendarEventTitlePipe implements PipeTransform {\n  constructor(private calendarEventTitle: CalendarEventTitleFormatter) {}\n\n  transform(title: string, titleType: string, event: CalendarEvent): string {\n    return this.calendarEventTitle[titleType](event);\n  }\n}\n","import {\n  Directive,\n  Renderer2,\n  ElementRef,\n  OnInit,\n  OnDestroy,\n  Output,\n  EventEmitter\n} from '@angular/core';\n\n@Directive({\n  selector: '[mwlClick]'\n})\nexport class ClickDirective implements OnInit, OnDestroy {\n  @Output('mwlClick') click: EventEmitter<MouseEvent> = new EventEmitter(); // tslint:disable-line\n\n  private removeListener: () => void;\n\n  constructor(private renderer: Renderer2, private elm: ElementRef) {}\n\n  ngOnInit(): void {\n    const eventName: string =\n      typeof window !== 'undefined' && typeof window['Hammer'] !== 'undefined'\n        ? 'tap'\n        : 'click';\n    this.removeListener = this.renderer.listen(\n      this.elm.nativeElement,\n      eventName,\n      event => {\n        this.click.next(event);\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.removeListener();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  getMonthView,\n  GetMonthViewArgs,\n  MonthView,\n  getWeekViewHeader,\n  GetWeekViewHeaderArgs,\n  WeekDay,\n  getWeekView,\n  GetWeekViewArgs,\n  getDayView,\n  GetDayViewArgs,\n  DayView,\n  getDayViewHourGrid,\n  GetDayViewHourGridArgs,\n  DayViewHour,\n  WeekView\n} from 'calendar-utils';\n\n@Injectable()\nexport class CalendarUtils {\n  getMonthView(args: GetMonthViewArgs): MonthView {\n    return getMonthView(args);\n  }\n\n  getWeekViewHeader(args: GetWeekViewHeaderArgs): WeekDay[] {\n    return getWeekViewHeader(args);\n  }\n\n  getWeekView(args: GetWeekViewArgs): WeekView {\n    return getWeekView(args);\n  }\n\n  getDayView(args: GetDayViewArgs): DayView {\n    return getDayView(args);\n  }\n\n  getDayViewHourGrid(args: GetDayViewHourGridArgs): DayViewHour[] {\n    return getDayViewHourGrid(args);\n  }\n}\n","import { InjectionToken, Inject } from '@angular/core';\nimport {\n  CalendarDateFormatterInterface,\n  DateFormatterParams\n} from './calendar-date-formatter.interface';\n\nexport const MOMENT: InjectionToken<string> = new InjectionToken('Moment');\n\n/**\n * This will use <a href=\"http://momentjs.com/\" target=\"_blank\">moment</a> to do all date formatting. To use this class:\n *\n * ```typescript\n * import { CalendarDateFormatter, CalendarMomentDateFormatter, MOMENT } from 'angular-calendar';\n * import moment from 'moment';\n *\n * // in your component\n * provide: [{\n *   provide: MOMENT, useValue: moment\n * }, {\n *   provide: CalendarDateFormatter, useClass: CalendarMomentDateFormatter\n * }]\n *\n * ```\n */\nexport class CalendarMomentDateFormatter\n  implements CalendarDateFormatterInterface {\n  /**\n   * @hidden\n   */\n  constructor(@Inject(MOMENT) private moment: any) {}\n\n  /**\n   * The month view header week day labels\n   */\n  public monthViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('dddd');\n  }\n\n  /**\n   * The month view cell day number\n   */\n  public monthViewDayNumber({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('D');\n  }\n\n  /**\n   * The month view title\n   */\n  public monthViewTitle({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('MMMM YYYY');\n  }\n\n  /**\n   * The week view header week day labels\n   */\n  public weekViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('dddd');\n  }\n\n  /**\n   * The week view sub header day and month labels\n   */\n  public weekViewColumnSubHeader({\n    date,\n    locale\n  }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('D MMM');\n  }\n\n  /**\n   * The week view title\n   */\n  public weekViewTitle({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('[Week] W [of] YYYY');\n  }\n\n  /**\n   * The time formatting down the left hand side of the day view\n   */\n  public dayViewHour({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('ha');\n  }\n\n  /**\n   * The day view title\n   */\n  public dayViewTitle({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('dddd, D MMMM, YYYY');\n  }\n}\n","import {\n  CalendarDateFormatterInterface,\n  DateFormatterParams\n} from './calendar-date-formatter.interface';\nimport getISOWeek from 'date-fns/get_iso_week/index';\n\n/**\n * This will use <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\" target=\"_blank\">Intl</a> API to do all date formatting.\n *\n * You will need to include a <a href=\"https://github.com/andyearnshaw/Intl.js/\">polyfill</a> for older browsers.\n */\nexport class CalendarNativeDateFormatter\n  implements CalendarDateFormatterInterface {\n  /**\n   * The month view header week day labels\n   */\n  public monthViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { weekday: 'long' }).format(date);\n  }\n\n  /**\n   * The month view cell day number\n   */\n  public monthViewDayNumber({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { day: 'numeric' }).format(date);\n  }\n\n  /**\n   * The month view title\n   */\n  public monthViewTitle({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'long'\n    }).format(date);\n  }\n\n  /**\n   * The week view header week day labels\n   */\n  public weekViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { weekday: 'long' }).format(date);\n  }\n\n  /**\n   * The week view sub header day and month labels\n   */\n  public weekViewColumnSubHeader({\n    date,\n    locale\n  }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, {\n      day: 'numeric',\n      month: 'short'\n    }).format(date);\n  }\n\n  /**\n   * The week view title\n   */\n  public weekViewTitle({ date, locale }: DateFormatterParams): string {\n    const year: string = new Intl.DateTimeFormat(locale, {\n      year: 'numeric'\n    }).format(date);\n    const weekNumber: number = getISOWeek(date);\n    return `Week ${weekNumber} of ${year}`;\n  }\n\n  /**\n   * The time formatting down the left hand side of the day view\n   */\n  public dayViewHour({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { hour: 'numeric' }).format(date);\n  }\n\n  /**\n   * The day view title\n   */\n  public dayViewTitle({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric',\n      weekday: 'long'\n    }).format(date);\n  }\n}\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DraggableHelper } from 'angular-draggable-droppable';\nimport { CalendarEventActionsComponent } from './calendar-event-actions.component';\nimport { CalendarEventTitleComponent } from './calendar-event-title.component';\nimport {\n  CalendarTooltipDirective,\n  CalendarTooltipWindowComponent\n} from './calendar-tooltip.directive';\nimport { CalendarPreviousViewDirective } from './calendar-previous-view.directive';\nimport { CalendarNextViewDirective } from './calendar-next-view.directive';\nimport { CalendarTodayDirective } from './calendar-today.directive';\nimport { CalendarDatePipe } from './calendar-date.pipe';\nimport { CalendarEventTitlePipe } from './calendar-event-title.pipe';\nimport { ClickDirective } from './click.directive';\nimport { CalendarEventTitleFormatter } from './calendar-event-title-formatter.provider';\nimport { CalendarDateFormatter } from './calendar-date-formatter.provider';\nimport { CalendarUtils } from './calendar-utils.provider';\n\nexport interface CalendarModuleConfig {\n  eventTitleFormatter?: Provider;\n  dateFormatter?: Provider;\n  utils?: Provider;\n}\n\nexport * from './calendar-event-title-formatter.provider';\nexport * from './calendar-moment-date-formatter.provider';\nexport * from './calendar-native-date-formatter.provider';\nexport * from './calendar-angular-date-formatter.provider';\nexport * from './calendar-date-formatter.provider';\nexport * from './calendar-utils.provider';\nexport * from './calendar-date-formatter.interface';\nexport * from './calendar-event-times-changed-event.interface';\n\nexport {\n  CalendarEvent,\n  EventAction as CalendarEventAction,\n  DAYS_OF_WEEK,\n  ViewPeriod as CalendarViewPeriod\n} from 'calendar-utils';\n\n/**\n * Import this module to if you're just using a singular view and want to save on bundle size. Example usage:\n *\n * ```typescript\n * import { CalendarCommonModule } from 'angular-calendar/modules/common';\n * import { CalendarMonthModule } from 'angular-calendar/modules/month';\n *\n * @NgModule({\n *   imports: [\n *     CalendarCommonModule.forRoot(),\n *     CalendarMonthModule\n *   ]\n * })\n * class MyModule {}\n * ```\n *\n */\n@NgModule({\n  declarations: [\n    CalendarEventActionsComponent,\n    CalendarEventTitleComponent,\n    CalendarTooltipWindowComponent,\n    CalendarTooltipDirective,\n    CalendarPreviousViewDirective,\n    CalendarNextViewDirective,\n    CalendarTodayDirective,\n    CalendarDatePipe,\n    CalendarEventTitlePipe,\n    ClickDirective\n  ],\n  imports: [CommonModule],\n  exports: [\n    CalendarEventActionsComponent,\n    CalendarEventTitleComponent,\n    CalendarTooltipWindowComponent,\n    CalendarTooltipDirective,\n    CalendarPreviousViewDirective,\n    CalendarNextViewDirective,\n    CalendarTodayDirective,\n    CalendarDatePipe,\n    CalendarEventTitlePipe,\n    ClickDirective\n  ],\n  entryComponents: [CalendarTooltipWindowComponent]\n})\nexport class CalendarCommonModule {\n  static forRoot(config: CalendarModuleConfig = {}): ModuleWithProviders {\n    return {\n      ngModule: CalendarCommonModule,\n      providers: [\n        DraggableHelper,\n        config.eventTitleFormatter || CalendarEventTitleFormatter,\n        config.dateFormatter || CalendarDateFormatter,\n        config.utils || CalendarUtils\n      ]\n    };\n  }\n}\n","import {\n  Component,\n  OnChanges,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n  OnInit,\n  OnDestroy,\n  LOCALE_ID,\n  Inject,\n  TemplateRef\n} from '@angular/core';\nimport {\n  CalendarEvent,\n  WeekDay,\n  MonthView,\n  MonthViewDay,\n  ViewPeriod\n} from 'calendar-utils';\nimport { Subject, Subscription } from 'rxjs';\nimport isSameDay from 'date-fns/is_same_day/index';\nimport setDate from 'date-fns/set_date/index';\nimport setMonth from 'date-fns/set_month/index';\nimport setYear from 'date-fns/set_year/index';\nimport getDate from 'date-fns/get_date/index';\nimport getMonth from 'date-fns/get_month/index';\nimport getYear from 'date-fns/get_year/index';\nimport differenceInSeconds from 'date-fns/difference_in_seconds/index';\nimport addSeconds from 'date-fns/add_seconds/index';\nimport { CalendarEventTimesChangedEvent } from '../common/calendar-event-times-changed-event.interface';\nimport { CalendarUtils } from '../common/calendar-utils.provider';\nimport { validateEvents, trackByIndex } from '../common/util';\n\nexport interface CalendarMonthViewBeforeRenderEvent {\n  header: WeekDay[];\n  body: MonthViewDay[];\n  period: ViewPeriod;\n}\n\nexport interface CalendarMonthViewEventTimesChangedEvent\n  extends CalendarEventTimesChangedEvent {\n  day: MonthViewDay;\n}\n\n/**\n * Shows all events on a given month. Example usage:\n *\n * ```typescript\n * <mwl-calendar-month-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\">\n * </mwl-calendar-month-view>\n * ```\n */\n@Component({\n  selector: 'mwl-calendar-month-view',\n  template: `\n    <div class=\"cal-month-view\">\n      <mwl-calendar-month-view-header\n        [days]=\"columnHeaders\"\n        [locale]=\"locale\"\n        [customTemplate]=\"headerTemplate\">\n      </mwl-calendar-month-view-header>\n      <div class=\"cal-days\">\n        <div *ngFor=\"let rowIndex of view.rowOffsets; trackByIndex\">\n          <div class=\"cal-cell-row\">\n            <mwl-calendar-month-cell\n              *ngFor=\"let day of (view.days | slice : rowIndex : rowIndex + (view.totalDaysVisibleInWeek)); trackBy:trackByDate\"\n              [class.cal-drag-over]=\"day.dragOver\"\n              [ngClass]=\"day?.cssClass\"\n              [day]=\"day\"\n              [openDay]=\"openDay\"\n              [locale]=\"locale\"\n              [tooltipPlacement]=\"tooltipPlacement\"\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [customTemplate]=\"cellTemplate\"\n              (click)=\"handleDayClick($event, day)\"\n              (highlightDay)=\"toggleDayHighlight($event.event, true)\"\n              (unhighlightDay)=\"toggleDayHighlight($event.event, false)\"\n              mwlDroppable\n              (dragEnter)=\"day.dragOver = true\"\n              (dragLeave)=\"day.dragOver = false\"\n              (drop)=\"day.dragOver = false; eventDropped(day, $event.dropData.event)\"\n              (eventClicked)=\"eventClicked.emit({event: $event.event})\">\n            </mwl-calendar-month-cell>\n          </div>\n          <mwl-calendar-open-day-events\n            [isOpen]=\"openRowIndex === rowIndex\"\n            [events]=\"openDay?.events\"\n            [customTemplate]=\"openDayEventsTemplate\"\n            [eventTitleTemplate]=\"eventTitleTemplate\"\n            (eventClicked)=\"eventClicked.emit({event: $event.event})\">\n          </mwl-calendar-open-day-events>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class CalendarMonthViewComponent\n  implements OnChanges, OnInit, OnDestroy {\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * An array of events to display on view.\n   * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\n   */\n  @Input() events: CalendarEvent[] = [];\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n   */\n  @Input() excludeDays: number[] = [];\n\n  /**\n   * Whether the events list for the day of the `viewDate` option is visible or not\n   */\n  @Input() activeDayIsOpen: boolean = false;\n\n  /**\n   * An observable that when emitted on will re-render the current view\n   */\n  @Input() refresh: Subject<any>;\n\n  /**\n   * The locale used to format dates\n   */\n  @Input() locale: string;\n\n  /**\n   * The placement of the event tooltip\n   */\n  @Input() tooltipPlacement: string = 'top';\n\n  /**\n   * A custom template to use for the event tooltips\n   */\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  /**\n   * Whether to append tooltips to the body or next to the trigger element\n   */\n  @Input() tooltipAppendToBody: boolean = true;\n\n  /**\n   * The start number of the week\n   */\n  @Input() weekStartsOn: number;\n\n  /**\n   * A custom template to use to replace the header\n   */\n  @Input() headerTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use to replace the day cell\n   */\n  @Input() cellTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for the slide down box of events for the active day\n   */\n  @Input() openDayEventsTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event titles\n   */\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that indicate which days are weekends\n   */\n  @Input() weekendDays: number[];\n\n  /**\n   * An output that will be called before the view is rendered for the current month.\n   * If you add the `cssClass` property to a day in the body it will add that class to the cell element in the template\n   */\n  @Output()\n  beforeViewRender = new EventEmitter<CalendarMonthViewBeforeRenderEvent>();\n\n  /**\n   * Called when the day cell is clicked\n   */\n  @Output()\n  dayClicked = new EventEmitter<{\n    day: MonthViewDay;\n  }>();\n\n  /**\n   * Called when the event title is clicked\n   */\n  @Output()\n  eventClicked = new EventEmitter<{\n    event: CalendarEvent;\n  }>();\n\n  /**\n   * Called when an event is dragged and dropped\n   */\n  @Output()\n  eventTimesChanged = new EventEmitter<\n    CalendarMonthViewEventTimesChangedEvent\n  >();\n\n  /**\n   * @hidden\n   */\n  columnHeaders: WeekDay[];\n\n  /**\n   * @hidden\n   */\n  view: MonthView;\n\n  /**\n   * @hidden\n   */\n  openRowIndex: number;\n\n  /**\n   * @hidden\n   */\n  openDay: MonthViewDay;\n\n  /**\n   * @hidden\n   */\n  refreshSubscription: Subscription;\n\n  /**\n   * @hidden\n   */\n  trackByIndex = trackByIndex;\n\n  /**\n   * @hidden\n   */\n  trackByDate = (index: number, day: MonthViewDay) => day.date.toISOString();\n\n  /**\n   * @hidden\n   */\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private utils: CalendarUtils,\n    @Inject(LOCALE_ID) locale: string\n  ) {\n    this.locale = locale;\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    if (this.refresh) {\n      this.refreshSubscription = this.refresh.subscribe(() => {\n        this.refreshAll();\n        this.cdr.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnChanges(changes: any): void {\n    if (changes.viewDate || changes.excludeDays || changes.weekendDays) {\n      this.refreshHeader();\n    }\n\n    if (changes.events) {\n      validateEvents(this.events);\n    }\n\n    if (\n      changes.viewDate ||\n      changes.events ||\n      changes.excludeDays ||\n      changes.weekendDays\n    ) {\n      this.refreshBody();\n    }\n\n    if (\n      changes.activeDayIsOpen ||\n      changes.viewDate ||\n      changes.events ||\n      changes.excludeDays\n    ) {\n      this.checkActiveDayIsOpen();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  toggleDayHighlight(event: CalendarEvent, isHighlighted: boolean): void {\n    this.view.days.forEach(day => {\n      if (isHighlighted && day.events.indexOf(event) > -1) {\n        day.backgroundColor =\n          (event.color && event.color.secondary) || '#D1E8FF';\n      } else {\n        delete day.backgroundColor;\n      }\n    });\n  }\n\n  /**\n   * @hidden\n   */\n  eventDropped(day: MonthViewDay, event: CalendarEvent): void {\n    const year: number = getYear(day.date);\n    const month: number = getMonth(day.date);\n    const date: number = getDate(day.date);\n    const newStart: Date = setDate(\n      setMonth(setYear(event.start, year), month),\n      date\n    );\n    let newEnd: Date;\n    if (event.end) {\n      const secondsDiff: number = differenceInSeconds(newStart, event.start);\n      newEnd = addSeconds(event.end, secondsDiff);\n    }\n    this.eventTimesChanged.emit({ event, newStart, newEnd, day });\n  }\n\n  /**\n   * @hidden\n   */\n  handleDayClick(clickEvent: any, day: MonthViewDay) {\n    // when using hammerjs, stopPropagation doesn't work. See https://github.com/mattlewis92/angular-calendar/issues/318\n    if (!clickEvent.target.classList.contains('cal-event')) {\n      this.dayClicked.emit({ day });\n    }\n  }\n\n  private refreshHeader(): void {\n    this.columnHeaders = this.utils.getWeekViewHeader({\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      weekendDays: this.weekendDays\n    });\n    this.emitBeforeViewRender();\n  }\n\n  private refreshBody(): void {\n    this.view = this.utils.getMonthView({\n      events: this.events,\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      weekendDays: this.weekendDays\n    });\n    this.emitBeforeViewRender();\n  }\n\n  private checkActiveDayIsOpen(): void {\n    if (this.activeDayIsOpen === true) {\n      this.openDay = this.view.days.find(day =>\n        isSameDay(day.date, this.viewDate)\n      );\n      const index: number = this.view.days.indexOf(this.openDay);\n      this.openRowIndex =\n        Math.floor(index / this.view.totalDaysVisibleInWeek) *\n        this.view.totalDaysVisibleInWeek;\n    } else {\n      this.openRowIndex = null;\n      this.openDay = null;\n    }\n  }\n\n  private refreshAll(): void {\n    this.columnHeaders = null;\n    this.view = null;\n    this.refreshHeader();\n    this.refreshBody();\n    this.checkActiveDayIsOpen();\n  }\n\n  private emitBeforeViewRender(): void {\n    if (this.columnHeaders && this.view) {\n      this.beforeViewRender.emit({\n        header: this.columnHeaders,\n        body: this.view.days,\n        period: this.view.period\n      });\n    }\n  }\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\nimport { WeekDay } from 'calendar-utils';\nimport { trackByWeekDayHeaderDate } from '../common/util';\n\n@Component({\n  selector: 'mwl-calendar-month-view-header',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-days=\"days\"\n      let-locale=\"locale\">\n      <div class=\"cal-cell-row cal-header\">\n        <div\n          class=\"cal-cell\"\n          *ngFor=\"let day of days; trackBy:trackByWeekDayHeaderDate\"\n          [class.cal-past]=\"day.isPast\"\n          [class.cal-today]=\"day.isToday\"\n          [class.cal-future]=\"day.isFuture\"\n          [class.cal-weekend]=\"day.isWeekend\"\n          [ngClass]=\"day.cssClass\">\n          {{ day.date | calendarDate:'monthViewColumnHeader':locale }}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{days: days, locale: locale}\">\n    </ng-template>\n  `\n})\nexport class CalendarMonthViewHeaderComponent {\n  @Input() days: WeekDay[];\n\n  @Input() locale: string;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport { MonthViewDay, CalendarEvent } from 'calendar-utils';\nimport { trackByEventId } from '../common/util';\n\n@Component({\n  selector: 'mwl-calendar-month-cell',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-day=\"day\"\n      let-openDay=\"openDay\"\n      let-locale=\"locale\"\n      let-tooltipPlacement=\"tooltipPlacement\"\n      let-highlightDay=\"highlightDay\"\n      let-unhighlightDay=\"unhighlightDay\"\n      let-eventClicked=\"eventClicked\"\n      let-tooltipTemplate=\"tooltipTemplate\"\n      let-tooltipAppendToBody=\"tooltipAppendToBody\">\n      <div class=\"cal-cell-top\">\n        <span class=\"cal-day-badge\" *ngIf=\"day.badgeTotal > 0\">{{ day.badgeTotal }}</span>\n        <span class=\"cal-day-number\">{{ day.date | calendarDate:'monthViewDayNumber':locale }}</span>\n      </div>\n      <div class=\"cal-events\" *ngIf=\"day.events.length > 0\">\n        <div\n          class=\"cal-event\"\n          *ngFor=\"let event of day.events; trackBy:trackByEventId\"\n          [style.backgroundColor]=\"event.color?.primary\"\n          [ngClass]=\"event?.cssClass\"\n          (mouseenter)=\"highlightDay.emit({event: event})\"\n          (mouseleave)=\"unhighlightDay.emit({event: event})\"\n          [mwlCalendarTooltip]=\"event.title | calendarEventTitle:'monthTooltip':event\"\n          [tooltipPlacement]=\"tooltipPlacement\"\n          [tooltipEvent]=\"event\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipAppendToBody]=\"tooltipAppendToBody\"\n          mwlDraggable\n          [dropData]=\"{event: event}\"\n          [dragAxis]=\"{x: event.draggable, y: event.draggable}\"\n          (mwlClick)=\"eventClicked.emit({ event: event })\">\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        day: day,\n        openDay: openDay,\n        locale: locale,\n        tooltipPlacement: tooltipPlacement,\n        highlightDay: highlightDay,\n        unhighlightDay: unhighlightDay,\n        eventClicked: eventClicked,\n        tooltipTemplate: tooltipTemplate,\n        tooltipAppendToBody: tooltipAppendToBody\n      }\">\n    </ng-template>\n  `,\n  host: {\n    class: 'cal-cell cal-day-cell',\n    '[class.cal-past]': 'day.isPast',\n    '[class.cal-today]': 'day.isToday',\n    '[class.cal-future]': 'day.isFuture',\n    '[class.cal-weekend]': 'day.isWeekend',\n    '[class.cal-in-month]': 'day.inMonth',\n    '[class.cal-out-month]': '!day.inMonth',\n    '[class.cal-has-events]': 'day.events.length > 0',\n    '[class.cal-open]': 'day === openDay',\n    '[style.backgroundColor]': 'day.backgroundColor'\n  }\n})\nexport class CalendarMonthCellComponent {\n  @Input() day: MonthViewDay;\n\n  @Input() openDay: MonthViewDay;\n\n  @Input() locale: string;\n\n  @Input() tooltipPlacement: string;\n\n  @Input() tooltipAppendToBody: boolean;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  @Output() highlightDay: EventEmitter<any> = new EventEmitter();\n\n  @Output() unhighlightDay: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  eventClicked: EventEmitter<{ event: CalendarEvent }> = new EventEmitter<{\n    event: CalendarEvent;\n  }>();\n\n  trackByEventId = trackByEventId;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport { trigger, style, transition, animate } from '@angular/animations';\nimport { CalendarEvent } from 'calendar-utils';\nimport { trackByEventId } from '../common/util';\n\n@Component({\n  selector: 'mwl-calendar-open-day-events',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-events=\"events\"\n      let-eventClicked=\"eventClicked\">\n      <div\n        *ngFor=\"let event of events; trackBy:trackByEventId\"\n        [ngClass]=\"event?.cssClass\"\n        mwlDraggable\n        [dropData]=\"{event: event}\"\n        [dragAxis]=\"{x: event.draggable, y: event.draggable}\">\n        <span\n          class=\"cal-event\"\n          [style.backgroundColor]=\"event.color?.primary\">\n        </span>\n        &ngsp;\n        <mwl-calendar-event-title\n          [event]=\"event\"\n          [customTemplate]=\"eventTitleTemplate\"\n          view=\"month\"\n          (mwlClick)=\"eventClicked.emit({event: event})\">\n        </mwl-calendar-event-title>\n        &ngsp;\n        <mwl-calendar-event-actions [event]=\"event\"></mwl-calendar-event-actions>\n      </div>\n    </ng-template>\n    <div class=\"cal-open-day-events\" [@collapse] *ngIf=\"isOpen\">\n      <ng-template\n        [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n        [ngTemplateOutletContext]=\"{\n          events: events,\n          eventClicked: eventClicked\n        }\">\n      </ng-template>\n    </div>\n  `,\n  animations: [\n    trigger('collapse', [\n      transition('void => *', [\n        style({ height: 0, overflow: 'hidden' }),\n        animate('150ms', style({ height: '*' }))\n      ]),\n      transition('* => void', [\n        style({ height: '*', overflow: 'hidden' }),\n        animate('150ms', style({ height: 0 }))\n      ])\n    ])\n  ]\n})\nexport class CalendarOpenDayEventsComponent {\n  @Input() isOpen: boolean = false;\n\n  @Input() events: CalendarEvent[];\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  @Output()\n  eventClicked: EventEmitter<{ event: CalendarEvent }> = new EventEmitter<{\n    event: CalendarEvent;\n  }>();\n\n  trackByEventId = trackByEventId;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DragAndDropModule } from 'angular-draggable-droppable';\nimport { CalendarMonthViewComponent } from './calendar-month-view.component';\nimport { CalendarMonthViewHeaderComponent } from './calendar-month-view-header.component';\nimport { CalendarMonthCellComponent } from './calendar-month-cell.component';\nimport { CalendarOpenDayEventsComponent } from './calendar-open-day-events.component';\nimport { CalendarCommonModule } from '../common/calendar-common.module';\n\nexport {\n  CalendarMonthViewComponent,\n  CalendarMonthViewBeforeRenderEvent,\n  CalendarMonthViewEventTimesChangedEvent\n} from './calendar-month-view.component';\nexport { MonthViewDay as CalendarMonthViewDay } from 'calendar-utils';\n\n@NgModule({\n  imports: [CommonModule, DragAndDropModule, CalendarCommonModule],\n  declarations: [\n    CalendarMonthViewComponent,\n    CalendarMonthCellComponent,\n    CalendarOpenDayEventsComponent,\n    CalendarMonthViewHeaderComponent\n  ],\n  exports: [\n    DragAndDropModule,\n    CalendarMonthViewComponent,\n    CalendarMonthCellComponent,\n    CalendarOpenDayEventsComponent,\n    CalendarMonthViewHeaderComponent\n  ]\n})\nexport class CalendarMonthModule {}\n","import { isInside } from './util';\n\nexport class CalendarDragHelper {\n  startPosition: ClientRect;\n\n  constructor(\n    private dragContainerElement: HTMLElement,\n    draggableElement: HTMLElement\n  ) {\n    this.startPosition = draggableElement.getBoundingClientRect();\n  }\n\n  validateDrag({ x, y }: { x: number; y: number }): boolean {\n    const newRect: ClientRect = Object.assign({}, this.startPosition, {\n      left: this.startPosition.left + x,\n      right: this.startPosition.right + x,\n      top: this.startPosition.top + y,\n      bottom: this.startPosition.bottom + y\n    });\n\n    return isInside(this.dragContainerElement.getBoundingClientRect(), newRect);\n  }\n}\n","import { isInside } from './util';\n\nexport class CalendarResizeHelper {\n  constructor(\n    private resizeContainerElement: HTMLElement,\n    private minWidth?: number\n  ) {}\n\n  validateResize({ rectangle }: { rectangle: ClientRect }): boolean {\n    if (this.minWidth && rectangle.width < this.minWidth) {\n      return false;\n    }\n\n    return isInside(\n      this.resizeContainerElement.getBoundingClientRect(),\n      rectangle\n    );\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n  OnChanges,\n  OnInit,\n  OnDestroy,\n  LOCALE_ID,\n  Inject,\n  TemplateRef\n} from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  WeekDay,\n  CalendarEvent,\n  WeekViewEvent,\n  WeekView,\n  ViewPeriod\n} from 'calendar-utils';\nimport { ResizeEvent } from 'angular-resizable-element';\nimport addDays from 'date-fns/add_days/index';\nimport { CalendarDragHelper } from '../common/calendar-drag-helper.provider';\nimport { CalendarResizeHelper } from '../common/calendar-resize-helper.provider';\nimport { CalendarEventTimesChangedEvent } from '../common/calendar-event-times-changed-event.interface';\nimport { CalendarUtils } from '../common/calendar-utils.provider';\nimport { validateEvents, trackByIndex } from '../common/util';\n\nexport interface WeekViewEventResize {\n  originalOffset: number;\n  originalSpan: number;\n  edge: string;\n}\n\nexport interface CalendarWeekViewBeforeRenderEvent {\n  header: WeekDay[];\n  period: ViewPeriod;\n}\n\n/**\n * Shows all events on a given week. Example usage:\n *\n * ```typescript\n * <mwl-calendar-week-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\">\n * </mwl-calendar-week-view>\n * ```\n */\n@Component({\n  selector: 'mwl-calendar-week-view',\n  template: `\n    <div class=\"cal-week-view\" #weekViewContainer>\n      <mwl-calendar-week-view-header\n        [days]=\"days\"\n        [locale]=\"locale\"\n        [customTemplate]=\"headerTemplate\"\n        (dayHeaderClicked)=\"dayHeaderClicked.emit($event)\"\n        (eventDropped)=\"eventTimesChanged.emit($event)\">\n      </mwl-calendar-week-view-header>\n      <div *ngFor=\"let eventRow of view.eventRows; trackBy:trackByIndex\" #eventRowContainer class=\"cal-events-row\">\n        <div\n          *ngFor=\"let weekEvent of eventRow.row; trackBy:trackByEventId\"\n          #event\n          class=\"cal-event-container\"\n          [class.cal-draggable]=\"weekEvent.event.draggable\"\n          [class.cal-starts-within-week]=\"!weekEvent.startsBeforeWeek\"\n          [class.cal-ends-within-week]=\"!weekEvent.endsAfterWeek\"\n          [ngClass]=\"weekEvent.event?.cssClass\"\n          [style.width]=\"((100 / days.length) * weekEvent.span) + '%'\"\n          [style.marginLeft]=\"((100 / days.length) * weekEvent.offset) + '%'\"\n          mwlResizable\n          [resizeEdges]=\"{left: weekEvent.event?.resizable?.beforeStart, right: weekEvent.event?.resizable?.afterEnd}\"\n          [resizeSnapGrid]=\"{left: dayColumnWidth, right: dayColumnWidth}\"\n          [validateResize]=\"validateResize\"\n          (resizeStart)=\"resizeStarted(weekViewContainer, weekEvent, $event)\"\n          (resizing)=\"resizing(weekEvent, $event, dayColumnWidth)\"\n          (resizeEnd)=\"resizeEnded(weekEvent)\"\n          mwlDraggable\n          [dragAxis]=\"{x: weekEvent.event.draggable && currentResizes.size === 0, y: false}\"\n          [dragSnapGrid]=\"{x: dayColumnWidth}\"\n          [validateDrag]=\"validateDrag\"\n          (dragPointerDown)=\"dragStart(weekViewContainer, event)\"\n          (dragEnd)=\"eventDragged(weekEvent, $event.x, dayColumnWidth)\">\n          <mwl-calendar-week-view-event\n            [weekEvent]=\"weekEvent\"\n            [tooltipPlacement]=\"tooltipPlacement\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipAppendToBody]=\"tooltipAppendToBody\"\n            [customTemplate]=\"eventTemplate\"\n            [eventTitleTemplate]=\"eventTitleTemplate\"\n            (eventClicked)=\"eventClicked.emit({event: weekEvent.event})\">\n          </mwl-calendar-week-view-event>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class CalendarWeekViewComponent implements OnChanges, OnInit, OnDestroy {\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * An array of events to display on view\n   * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\n   */\n  @Input() events: CalendarEvent[] = [];\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n   */\n  @Input() excludeDays: number[] = [];\n\n  /**\n   * An observable that when emitted on will re-render the current view\n   */\n  @Input() refresh: Subject<any>;\n\n  /**\n   * The locale used to format dates\n   */\n  @Input() locale: string;\n\n  /**\n   * The placement of the event tooltip\n   */\n  @Input() tooltipPlacement: string = 'bottom';\n\n  /**\n   * A custom template to use for the event tooltips\n   */\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  /**\n   * Whether to append tooltips to the body or next to the trigger element\n   */\n  @Input() tooltipAppendToBody: boolean = true;\n\n  /**\n   * The start number of the week\n   */\n  @Input() weekStartsOn: number;\n\n  /**\n   * A custom template to use to replace the header\n   */\n  @Input() headerTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for week view events\n   */\n  @Input() eventTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event titles\n   */\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  /**\n   * The precision to display events.\n   * `days` will round event start and end dates to the nearest day and `minutes` will not do this rounding\n   */\n  @Input() precision: 'days' | 'minutes' = 'days';\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that indicate which days are weekends\n   */\n  @Input() weekendDays: number[];\n\n  /**\n   * Called when a header week day is clicked. Adding a `cssClass` property on `$event.day` will add that class to the header element\n   */\n  @Output()\n  dayHeaderClicked: EventEmitter<{ day: WeekDay }> = new EventEmitter<{\n    day: WeekDay;\n  }>();\n\n  /**\n   * Called when the event title is clicked\n   */\n  @Output()\n  eventClicked: EventEmitter<{ event: CalendarEvent }> = new EventEmitter<{\n    event: CalendarEvent;\n  }>();\n\n  /**\n   * Called when an event is resized or dragged and dropped\n   */\n  @Output()\n  eventTimesChanged: EventEmitter<\n    CalendarEventTimesChangedEvent\n  > = new EventEmitter<CalendarEventTimesChangedEvent>();\n\n  /**\n   * An output that will be called before the view is rendered for the current week.\n   * If you add the `cssClass` property to a day in the header it will add that class to the cell element in the template\n   */\n  @Output()\n  beforeViewRender = new EventEmitter<CalendarWeekViewBeforeRenderEvent>();\n\n  /**\n   * @hidden\n   */\n  days: WeekDay[];\n\n  /**\n   * @hidden\n   */\n  view: WeekView;\n\n  /**\n   * @hidden\n   */\n  refreshSubscription: Subscription;\n\n  /**\n   * @hidden\n   */\n  currentResizes: Map<WeekViewEvent, WeekViewEventResize> = new Map();\n\n  /**\n   * @hidden\n   */\n  validateDrag: (args: any) => boolean;\n\n  /**\n   * @hidden\n   */\n  validateResize: (args: any) => boolean;\n\n  /**\n   * @hidden\n   */\n  dayColumnWidth: number;\n\n  /**\n   * @hidden\n   */\n  trackByIndex = trackByIndex;\n\n  /**\n   * @hidden\n   */\n  trackByEventId = (index: number, weekEvent: WeekViewEvent) =>\n    weekEvent.event.id ? weekEvent.event.id : weekEvent;\n\n  /**\n   * @hidden\n   */\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private utils: CalendarUtils,\n    @Inject(LOCALE_ID) locale: string\n  ) {\n    this.locale = locale;\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    if (this.refresh) {\n      this.refreshSubscription = this.refresh.subscribe(() => {\n        this.refreshAll();\n        this.cdr.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnChanges(changes: any): void {\n    if (changes.viewDate || changes.excludeDays || changes.weekendDays) {\n      this.refreshHeader();\n    }\n\n    if (changes.events) {\n      validateEvents(this.events);\n    }\n\n    if (changes.events || changes.viewDate || changes.excludeDays) {\n      this.refreshBody();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  resizeStarted(\n    weekViewContainer: HTMLElement,\n    weekEvent: WeekViewEvent,\n    resizeEvent: ResizeEvent\n  ): void {\n    this.currentResizes.set(weekEvent, {\n      originalOffset: weekEvent.offset,\n      originalSpan: weekEvent.span,\n      edge: typeof resizeEvent.edges.left !== 'undefined' ? 'left' : 'right'\n    });\n    this.dayColumnWidth = this.getDayColumnWidth(weekViewContainer);\n    const resizeHelper: CalendarResizeHelper = new CalendarResizeHelper(\n      weekViewContainer,\n      this.dayColumnWidth\n    );\n    this.validateResize = ({ rectangle }) =>\n      resizeHelper.validateResize({ rectangle });\n    this.cdr.markForCheck();\n  }\n\n  /**\n   * @hidden\n   */\n  resizing(\n    weekEvent: WeekViewEvent,\n    resizeEvent: ResizeEvent,\n    dayWidth: number\n  ): void {\n    const currentResize: WeekViewEventResize = this.currentResizes.get(\n      weekEvent\n    );\n\n    if (resizeEvent.edges.left) {\n      const diff: number = Math.round(+resizeEvent.edges.left / dayWidth);\n      weekEvent.offset = currentResize.originalOffset + diff;\n      weekEvent.span = currentResize.originalSpan - diff;\n    } else if (resizeEvent.edges.right) {\n      const diff: number = Math.round(+resizeEvent.edges.right / dayWidth);\n      weekEvent.span = currentResize.originalSpan + diff;\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  resizeEnded(weekEvent: WeekViewEvent): void {\n    const currentResize: WeekViewEventResize = this.currentResizes.get(\n      weekEvent\n    );\n\n    let daysDiff: number;\n    if (currentResize.edge === 'left') {\n      daysDiff = weekEvent.offset - currentResize.originalOffset;\n    } else {\n      daysDiff = weekEvent.span - currentResize.originalSpan;\n    }\n\n    weekEvent.offset = currentResize.originalOffset;\n    weekEvent.span = currentResize.originalSpan;\n\n    let newStart: Date = weekEvent.event.start;\n    let newEnd: Date = weekEvent.event.end;\n    if (currentResize.edge === 'left') {\n      newStart = addDays(newStart, daysDiff);\n    } else if (newEnd) {\n      newEnd = addDays(newEnd, daysDiff);\n    }\n\n    this.eventTimesChanged.emit({ newStart, newEnd, event: weekEvent.event });\n    this.currentResizes.delete(weekEvent);\n  }\n\n  /**\n   * @hidden\n   */\n  eventDragged(\n    weekEvent: WeekViewEvent,\n    draggedByPx: number,\n    dayWidth: number\n  ): void {\n    const daysDragged: number = draggedByPx / dayWidth;\n    const newStart: Date = addDays(weekEvent.event.start, daysDragged);\n    let newEnd: Date;\n    if (weekEvent.event.end) {\n      newEnd = addDays(weekEvent.event.end, daysDragged);\n    }\n\n    this.eventTimesChanged.emit({ newStart, newEnd, event: weekEvent.event });\n  }\n\n  /**\n   * @hidden\n   */\n  getDayColumnWidth(eventRowContainer: HTMLElement): number {\n    return Math.floor(eventRowContainer.offsetWidth / this.days.length);\n  }\n\n  /**\n   * @hidden\n   */\n  dragStart(weekViewContainer: HTMLElement, event: HTMLElement): void {\n    this.dayColumnWidth = this.getDayColumnWidth(weekViewContainer);\n    const dragHelper: CalendarDragHelper = new CalendarDragHelper(\n      weekViewContainer,\n      event\n    );\n    this.validateDrag = ({ x, y }) =>\n      this.currentResizes.size === 0 && dragHelper.validateDrag({ x, y });\n    this.cdr.markForCheck();\n  }\n\n  private refreshHeader(): void {\n    this.days = this.utils.getWeekViewHeader({\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      weekendDays: this.weekendDays\n    });\n    this.emitBeforeViewRender();\n  }\n\n  private refreshBody(): void {\n    this.view = this.utils.getWeekView({\n      events: this.events,\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      precision: this.precision,\n      absolutePositionedEvents: true\n    });\n    this.emitBeforeViewRender();\n  }\n\n  private refreshAll(): void {\n    this.refreshHeader();\n    this.refreshBody();\n  }\n\n  private emitBeforeViewRender(): void {\n    if (this.days && this.view) {\n      this.beforeViewRender.emit({\n        header: this.days,\n        period: this.view.period\n      });\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport { CalendarEvent, WeekDay } from 'calendar-utils';\nimport { trackByWeekDayHeaderDate } from '../common/util';\n\n@Component({\n  selector: 'mwl-calendar-week-view-header',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-days=\"days\"\n      let-locale=\"locale\"\n      let-dayHeaderClicked=\"dayHeaderClicked\"\n      let-eventDropped=\"eventDropped\">\n      <div class=\"cal-day-headers\">\n        <div\n          class=\"cal-header\"\n          *ngFor=\"let day of days; trackBy:trackByWeekDayHeaderDate\"\n          [class.cal-past]=\"day.isPast\"\n          [class.cal-today]=\"day.isToday\"\n          [class.cal-future]=\"day.isFuture\"\n          [class.cal-weekend]=\"day.isWeekend\"\n          [class.cal-drag-over]=\"day.dragOver\"\n          [ngClass]=\"day.cssClass\"\n          (mwlClick)=\"dayHeaderClicked.emit({day: day})\"\n          mwlDroppable\n          (dragEnter)=\"day.dragOver = true\"\n          (dragLeave)=\"day.dragOver = false\"\n          (drop)=\"day.dragOver = false; eventDropped.emit({event: $event.dropData.event, newStart: day.date})\">\n          <b>{{ day.date | calendarDate:'weekViewColumnHeader':locale }}</b><br>\n          <span>{{ day.date | calendarDate:'weekViewColumnSubHeader':locale }}</span>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{days: days, locale: locale, dayHeaderClicked: dayHeaderClicked, eventDropped: eventDropped}\">\n    </ng-template>\n  `\n})\nexport class CalendarWeekViewHeaderComponent {\n  @Input() days: WeekDay[];\n\n  @Input() locale: string;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Output()\n  dayHeaderClicked: EventEmitter<{ day: WeekDay }> = new EventEmitter<{\n    day: WeekDay;\n  }>();\n\n  @Output()\n  eventDropped: EventEmitter<{\n    event: CalendarEvent;\n    newStart: Date;\n  }> = new EventEmitter<{ event: CalendarEvent; newStart: Date }>();\n\n  trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport { WeekViewEvent } from 'calendar-utils';\n\n@Component({\n  selector: 'mwl-calendar-week-view-event',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-weekEvent=\"weekEvent\"\n      let-tooltipPlacement=\"tooltipPlacement\"\n      let-eventClicked=\"eventClicked\"\n      let-tooltipTemplate=\"tooltipTemplate\"\n      let-tooltipAppendToBody=\"tooltipAppendToBody\">\n      <div\n        class=\"cal-event\"\n        [style.backgroundColor]=\"weekEvent.event.color?.secondary\"\n        [style.borderColor]=\"weekEvent.event.color?.primary\"\n        [mwlCalendarTooltip]=\"weekEvent.event.title | calendarEventTitle:'weekTooltip':weekEvent.event\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipEvent]=\"weekEvent.event\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipAppendToBody]=\"tooltipAppendToBody\">\n        <mwl-calendar-event-actions [event]=\"weekEvent.event\"></mwl-calendar-event-actions>\n        &ngsp;\n        <mwl-calendar-event-title\n          [event]=\"weekEvent.event\"\n          [customTemplate]=\"eventTitleTemplate\"\n          view=\"week\"\n          (mwlClick)=\"eventClicked.emit()\">\n        </mwl-calendar-event-title>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        weekEvent: weekEvent,\n        tooltipPlacement: tooltipPlacement,\n        eventClicked: eventClicked,\n        tooltipTemplate: tooltipTemplate,\n        tooltipAppendToBody: tooltipAppendToBody\n      }\">\n    </ng-template>\n  `\n})\nexport class CalendarWeekViewEventComponent {\n  @Input() weekEvent: WeekViewEvent;\n\n  @Input() tooltipPlacement: string;\n\n  @Input() tooltipAppendToBody: boolean;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  @Output() eventClicked: EventEmitter<any> = new EventEmitter();\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ResizableModule } from 'angular-resizable-element';\nimport { DragAndDropModule } from 'angular-draggable-droppable';\nimport { CalendarWeekViewComponent } from './calendar-week-view.component';\nimport { CalendarWeekViewHeaderComponent } from './calendar-week-view-header.component';\nimport { CalendarWeekViewEventComponent } from './calendar-week-view-event.component';\nimport { CalendarCommonModule } from '../common/calendar-common.module';\n\nexport {\n  CalendarWeekViewComponent,\n  CalendarWeekViewBeforeRenderEvent\n} from './calendar-week-view.component';\nexport {\n  WeekViewEvent as CalendarWeekViewEvent,\n  WeekViewEventRow as CalendarWeekViewEventRow,\n  GetWeekViewArgs as CalendarGetWeekViewArgs\n} from 'calendar-utils';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ResizableModule,\n    DragAndDropModule,\n    CalendarCommonModule\n  ],\n  declarations: [\n    CalendarWeekViewComponent,\n    CalendarWeekViewHeaderComponent,\n    CalendarWeekViewEventComponent\n  ],\n  exports: [\n    ResizableModule,\n    DragAndDropModule,\n    CalendarWeekViewComponent,\n    CalendarWeekViewHeaderComponent,\n    CalendarWeekViewEventComponent\n  ]\n})\nexport class CalendarWeekModule {}\n","import {\n  Component,\n  Input,\n  OnChanges,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n  LOCALE_ID,\n  Inject,\n  OnInit,\n  OnDestroy,\n  TemplateRef\n} from '@angular/core';\nimport {\n  CalendarEvent,\n  DayView,\n  DayViewHour,\n  DayViewHourSegment,\n  DayViewEvent,\n  ViewPeriod\n} from 'calendar-utils';\nimport { Subject, Subscription } from 'rxjs';\nimport { ResizeEvent } from 'angular-resizable-element';\nimport addMinutes from 'date-fns/add_minutes/index';\nimport { CalendarDragHelper } from '../common/calendar-drag-helper.provider';\nimport { CalendarResizeHelper } from '../common/calendar-resize-helper.provider';\nimport { CalendarEventTimesChangedEvent } from '../common/calendar-event-times-changed-event.interface';\nimport { CalendarUtils } from '../common/calendar-utils.provider';\nimport { validateEvents, trackByEventId } from '../common/util';\n\nexport interface CalendarDayViewBeforeRenderEvent {\n  body: {\n    hourGrid: DayViewHour[];\n  };\n  period: ViewPeriod;\n}\n\n/**\n * @hidden\n */\nconst MINUTES_IN_HOUR: number = 60;\n\n/**\n * @hidden\n */\nexport interface DayViewEventResize {\n  originalTop: number;\n  originalHeight: number;\n  edge: string;\n}\n\n/**\n * Shows all events on a given day. Example usage:\n *\n * ```typescript\n * <mwl-calendar-day-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\">\n * </mwl-calendar-day-view>\n * ```\n */\n@Component({\n  selector: 'mwl-calendar-day-view',\n  template: `\n    <div class=\"cal-day-view\" #dayViewContainer>\n      <mwl-calendar-all-day-event\n        *ngFor=\"let event of view.allDayEvents; trackBy:trackByEventId\"\n        [event]=\"event\"\n        [customTemplate]=\"allDayEventTemplate\"\n        [eventTitleTemplate]=\"eventTitleTemplate\"\n        (eventClicked)=\"eventClicked.emit({event: event})\">\n      </mwl-calendar-all-day-event>\n      <div class=\"cal-hour-rows\">\n        <div class=\"cal-events\">\n          <div\n            #event\n            *ngFor=\"let dayEvent of view?.events; trackBy:trackByDayEvent\"\n            class=\"cal-event-container\"\n            [class.cal-draggable]=\"dayEvent.event.draggable\"\n            [class.cal-starts-within-day]=\"!dayEvent.startsBeforeDay\"\n            [class.cal-ends-within-day]=\"!dayEvent.endsAfterDay\"\n            [ngClass]=\"dayEvent.event.cssClass\"\n            mwlResizable\n            [resizeEdges]=\"{top: dayEvent.event?.resizable?.beforeStart, bottom: dayEvent.event?.resizable?.afterEnd}\"\n            [resizeSnapGrid]=\"{top: eventSnapSize, bottom: eventSnapSize}\"\n            [validateResize]=\"validateResize\"\n            (resizeStart)=\"resizeStarted(dayEvent, $event, dayViewContainer)\"\n            (resizing)=\"resizing(dayEvent, $event)\"\n            (resizeEnd)=\"resizeEnded(dayEvent)\"\n            mwlDraggable\n            [dragAxis]=\"{x: false, y: dayEvent.event.draggable && currentResizes.size === 0}\"\n            [dragSnapGrid]=\"{y: eventSnapSize}\"\n            [validateDrag]=\"validateDrag\"\n            (dragPointerDown)=\"dragStart(event, dayViewContainer)\"\n            (dragEnd)=\"eventDragged(dayEvent, $event.y)\"\n            [style.marginTop.px]=\"dayEvent.top\"\n            [style.height.px]=\"dayEvent.height\"\n            [style.marginLeft.px]=\"dayEvent.left + 70\"\n            [style.width.px]=\"dayEvent.width - 1\">\n            <mwl-calendar-day-view-event\n              [dayEvent]=\"dayEvent\"\n              [tooltipPlacement]=\"tooltipPlacement\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\n              [customTemplate]=\"eventTemplate\"\n              [eventTitleTemplate]=\"eventTitleTemplate\"\n              (eventClicked)=\"eventClicked.emit({event: dayEvent.event})\">\n            </mwl-calendar-day-view-event>\n          </div>\n        </div>\n        <div class=\"cal-hour\" *ngFor=\"let hour of hours; trackBy:trackByHour\" [style.minWidth.px]=\"view?.width + 70\">\n          <mwl-calendar-day-view-hour-segment\n            *ngFor=\"let segment of hour.segments; trackBy:trackByHourSegment\"\n            [style.height.px]=\"hourSegmentHeight\"\n            [segment]=\"segment\"\n            [segmentHeight]=\"hourSegmentHeight\"\n            [locale]=\"locale\"\n            [customTemplate]=\"hourSegmentTemplate\"\n            (click)=\"hourSegmentClicked.emit({date: segment.date})\"\n            [class.cal-drag-over]=\"segment.dragOver\"\n            mwlDroppable\n            (dragEnter)=\"segment.dragOver = true\"\n            (dragLeave)=\"segment.dragOver = false\"\n            (drop)=\"segment.dragOver = false; eventDropped($event, segment)\">\n          </mwl-calendar-day-view-hour-segment>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class CalendarDayViewComponent implements OnChanges, OnInit, OnDestroy {\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * An array of events to display on view\n   * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\n   */\n  @Input() events: CalendarEvent[] = [];\n\n  /**\n   * The number of segments in an hour. Must be <= 6\n   */\n  @Input() hourSegments: number = 2;\n\n  /**\n   * The height in pixels of each hour segment\n   */\n  @Input() hourSegmentHeight: number = 30;\n\n  /**\n   * The day start hours in 24 hour time. Must be 0-23\n   */\n  @Input() dayStartHour: number = 0;\n\n  /**\n   * The day start minutes. Must be 0-59\n   */\n  @Input() dayStartMinute: number = 0;\n\n  /**\n   * The day end hours in 24 hour time. Must be 0-23\n   */\n  @Input() dayEndHour: number = 23;\n\n  /**\n   * The day end minutes. Must be 0-59\n   */\n  @Input() dayEndMinute: number = 59;\n\n  /**\n   * The width in pixels of each event on the view\n   */\n  @Input() eventWidth: number = 150;\n\n  /**\n   * An observable that when emitted on will re-render the current view\n   */\n  @Input() refresh: Subject<any>;\n\n  /**\n   * The locale used to format dates\n   */\n  @Input() locale: string;\n\n  /**\n   * The grid size to snap resizing and dragging of events to\n   */\n  @Input() eventSnapSize: number = this.hourSegmentHeight;\n\n  /**\n   * The placement of the event tooltip\n   */\n  @Input() tooltipPlacement: string = 'top';\n\n  /**\n   * A custom template to use for the event tooltips\n   */\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  /**\n   * Whether to append tooltips to the body or next to the trigger element\n   */\n  @Input() tooltipAppendToBody: boolean = true;\n\n  /**\n   * A custom template to use to replace the hour segment\n   */\n  @Input() hourSegmentTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for all day events\n   */\n  @Input() allDayEventTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for day view events\n   */\n  @Input() eventTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event titles\n   */\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  /**\n   * Called when an event title is clicked\n   */\n  @Output()\n  eventClicked = new EventEmitter<{\n    event: CalendarEvent;\n  }>();\n\n  /**\n   * Called when an hour segment is clicked\n   */\n  @Output()\n  hourSegmentClicked = new EventEmitter<{\n    date: Date;\n  }>();\n\n  /**\n   * Called when an event is resized or dragged and dropped\n   */\n  @Output()\n  eventTimesChanged = new EventEmitter<CalendarEventTimesChangedEvent>();\n\n  /**\n   * An output that will be called before the view is rendered for the current day.\n   * If you add the `cssClass` property to an hour grid segment it will add that class to the hour segment in the template\n   */\n  @Output()\n  beforeViewRender = new EventEmitter<CalendarDayViewBeforeRenderEvent>();\n\n  /**\n   * @hidden\n   */\n  hours: DayViewHour[] = [];\n\n  /**\n   * @hidden\n   */\n  view: DayView;\n\n  /**\n   * @hidden\n   */\n  width: number = 0;\n\n  /**\n   * @hidden\n   */\n  refreshSubscription: Subscription;\n\n  /**\n   * @hidden\n   */\n  currentResizes: Map<DayViewEvent, DayViewEventResize> = new Map();\n\n  /**\n   * @hidden\n   */\n  validateDrag: (args: any) => boolean;\n\n  /**\n   * @hidden\n   */\n  validateResize: (args: any) => boolean;\n\n  /**\n   * @hidden\n   */\n  trackByEventId = trackByEventId;\n\n  /**\n   * @hidden\n   */\n  trackByDayEvent = (index: number, dayEvent: DayViewEvent) =>\n    dayEvent.event.id ? dayEvent.event.id : dayEvent.event;\n\n  /**\n   * @hidden\n   */\n  trackByHour = (index: number, hour: DayViewHour) =>\n    hour.segments[0].date.toISOString();\n\n  /**\n   * @hidden\n   */\n  trackByHourSegment = (index: number, segment: DayViewHourSegment) =>\n    segment.date.toISOString();\n\n  /**\n   * @hidden\n   */\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private utils: CalendarUtils,\n    @Inject(LOCALE_ID) locale: string\n  ) {\n    this.locale = locale;\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    if (this.refresh) {\n      this.refreshSubscription = this.refresh.subscribe(() => {\n        this.refreshAll();\n        this.cdr.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnChanges(changes: any): void {\n    if (\n      changes.viewDate ||\n      changes.dayStartHour ||\n      changes.dayStartMinute ||\n      changes.dayEndHour ||\n      changes.dayEndMinute ||\n      changes.hourSegments\n    ) {\n      this.refreshHourGrid();\n    }\n\n    if (changes.events) {\n      validateEvents(this.events);\n    }\n\n    if (\n      changes.viewDate ||\n      changes.events ||\n      changes.dayStartHour ||\n      changes.dayStartMinute ||\n      changes.dayEndHour ||\n      changes.dayEndMinute ||\n      changes.eventWidth\n    ) {\n      this.refreshView();\n    }\n  }\n\n  eventDropped(\n    dropEvent: { dropData?: { event?: CalendarEvent } },\n    segment: DayViewHourSegment\n  ): void {\n    if (dropEvent.dropData && dropEvent.dropData.event) {\n      this.eventTimesChanged.emit({\n        event: dropEvent.dropData.event,\n        newStart: segment.date\n      });\n    }\n  }\n\n  resizeStarted(\n    event: DayViewEvent,\n    resizeEvent: ResizeEvent,\n    dayViewContainer: HTMLElement\n  ): void {\n    this.currentResizes.set(event, {\n      originalTop: event.top,\n      originalHeight: event.height,\n      edge: typeof resizeEvent.edges.top !== 'undefined' ? 'top' : 'bottom'\n    });\n    const resizeHelper: CalendarResizeHelper = new CalendarResizeHelper(\n      dayViewContainer\n    );\n    this.validateResize = ({ rectangle }) =>\n      resizeHelper.validateResize({ rectangle });\n    this.cdr.markForCheck();\n  }\n\n  resizing(event: DayViewEvent, resizeEvent: ResizeEvent): void {\n    const currentResize: DayViewEventResize = this.currentResizes.get(event);\n    if (resizeEvent.edges.top) {\n      event.top = currentResize.originalTop + +resizeEvent.edges.top;\n      event.height = currentResize.originalHeight - +resizeEvent.edges.top;\n    } else if (resizeEvent.edges.bottom) {\n      event.height = currentResize.originalHeight + +resizeEvent.edges.bottom;\n    }\n  }\n\n  resizeEnded(dayEvent: DayViewEvent): void {\n    const currentResize: DayViewEventResize = this.currentResizes.get(dayEvent);\n\n    let pixelsMoved: number;\n    if (currentResize.edge === 'top') {\n      pixelsMoved = dayEvent.top - currentResize.originalTop;\n    } else {\n      pixelsMoved = dayEvent.height - currentResize.originalHeight;\n    }\n\n    dayEvent.top = currentResize.originalTop;\n    dayEvent.height = currentResize.originalHeight;\n\n    const pixelAmountInMinutes: number =\n      MINUTES_IN_HOUR / (this.hourSegments * this.hourSegmentHeight);\n    const minutesMoved: number = pixelsMoved * pixelAmountInMinutes;\n    let newStart: Date = dayEvent.event.start;\n    let newEnd: Date = dayEvent.event.end;\n    if (currentResize.edge === 'top') {\n      newStart = addMinutes(newStart, minutesMoved);\n    } else if (newEnd) {\n      newEnd = addMinutes(newEnd, minutesMoved);\n    }\n\n    this.eventTimesChanged.emit({ newStart, newEnd, event: dayEvent.event });\n    this.currentResizes.delete(dayEvent);\n  }\n\n  dragStart(event: HTMLElement, dayViewContainer: HTMLElement): void {\n    const dragHelper: CalendarDragHelper = new CalendarDragHelper(\n      dayViewContainer,\n      event\n    );\n    this.validateDrag = ({ x, y }) =>\n      this.currentResizes.size === 0 && dragHelper.validateDrag({ x, y });\n    this.cdr.markForCheck();\n  }\n\n  eventDragged(dayEvent: DayViewEvent, draggedInPixels: number): void {\n    const pixelAmountInMinutes: number =\n      MINUTES_IN_HOUR / (this.hourSegments * this.hourSegmentHeight);\n    const minutesMoved: number = draggedInPixels * pixelAmountInMinutes;\n    const newStart: Date = addMinutes(dayEvent.event.start, minutesMoved);\n    let newEnd: Date;\n    if (dayEvent.event.end) {\n      newEnd = addMinutes(dayEvent.event.end, minutesMoved);\n    }\n    this.eventTimesChanged.emit({ newStart, newEnd, event: dayEvent.event });\n  }\n\n  private refreshHourGrid(): void {\n    this.hours = this.utils.getDayViewHourGrid({\n      viewDate: this.viewDate,\n      hourSegments: this.hourSegments,\n      dayStart: {\n        hour: this.dayStartHour,\n        minute: this.dayStartMinute\n      },\n      dayEnd: {\n        hour: this.dayEndHour,\n        minute: this.dayEndMinute\n      }\n    });\n    this.emitBeforeViewRender();\n  }\n\n  private refreshView(): void {\n    this.view = this.utils.getDayView({\n      events: this.events,\n      viewDate: this.viewDate,\n      hourSegments: this.hourSegments,\n      dayStart: {\n        hour: this.dayStartHour,\n        minute: this.dayStartMinute\n      },\n      dayEnd: {\n        hour: this.dayEndHour,\n        minute: this.dayEndMinute\n      },\n      eventWidth: this.eventWidth,\n      segmentHeight: this.hourSegmentHeight\n    });\n    this.emitBeforeViewRender();\n  }\n\n  private refreshAll(): void {\n    this.refreshHourGrid();\n    this.refreshView();\n  }\n\n  private emitBeforeViewRender(): void {\n    if (this.hours && this.view) {\n      this.beforeViewRender.emit({\n        body: {\n          hourGrid: this.hours\n        },\n        period: this.view.period\n      });\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport { CalendarEvent } from 'calendar-utils';\n\n@Component({\n  selector: 'mwl-calendar-all-day-event',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-event=\"event\"\n      let-eventClicked=\"eventClicked\">\n      <div\n        class=\"cal-all-day-event\"\n        [style.backgroundColor]=\"event.color?.secondary\"\n        [style.borderColor]=\"event.color?.primary\">\n        <mwl-calendar-event-actions [event]=\"event\"></mwl-calendar-event-actions>\n        &ngsp;\n        <mwl-calendar-event-title\n          [event]=\"event\"\n          [customTemplate]=\"eventTitleTemplate\"\n          view=\"day\"\n          (mwlClick)=\"eventClicked.emit()\">\n        </mwl-calendar-event-title>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        event: event,\n        eventClicked: eventClicked\n      }\">\n    </ng-template>\n  `\n})\nexport class CalendarAllDayEventComponent {\n  @Input() event: CalendarEvent;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  @Output() eventClicked: EventEmitter<any> = new EventEmitter();\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\nimport { DayViewHourSegment } from 'calendar-utils';\n\n@Component({\n  selector: 'mwl-calendar-day-view-hour-segment',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-segment=\"segment\"\n      let-locale=\"locale\">\n      <div\n        class=\"cal-hour-segment\"\n        [style.height.px]=\"segmentHeight\"\n        [class.cal-hour-start]=\"segment.isStart\"\n        [class.cal-after-hour-start]=\"!segment.isStart\"\n        [ngClass]=\"segment.cssClass\">\n        <div class=\"cal-time\">\n          {{ segment.date | calendarDate:'dayViewHour':locale }}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        segment: segment,\n        locale: locale\n      }\">\n    </ng-template>\n  `\n})\nexport class CalendarDayViewHourSegmentComponent {\n  @Input() segment: DayViewHourSegment;\n\n  @Input() segmentHeight: number;\n\n  @Input() locale: string;\n\n  @Input() customTemplate: TemplateRef<any>;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport { DayViewEvent } from 'calendar-utils';\n\n@Component({\n  selector: 'mwl-calendar-day-view-event',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-dayEvent=\"dayEvent\"\n      let-tooltipPlacement=\"tooltipPlacement\"\n      let-eventClicked=\"eventClicked\"\n      let-tooltipTemplate=\"tooltipTemplate\"\n      let-tooltipAppendToBody=\"tooltipAppendToBody\">\n      <div\n        class=\"cal-event\"\n        [style.backgroundColor]=\"dayEvent.event.color?.secondary\"\n        [style.borderColor]=\"dayEvent.event.color?.primary\"\n        [mwlCalendarTooltip]=\"dayEvent.event.title | calendarEventTitle:'dayTooltip':dayEvent.event\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipEvent]=\"dayEvent.event\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipAppendToBody]=\"tooltipAppendToBody\">\n        <mwl-calendar-event-actions [event]=\"dayEvent.event\"></mwl-calendar-event-actions>\n        &ngsp;\n        <mwl-calendar-event-title\n          [event]=\"dayEvent.event\"\n          [customTemplate]=\"eventTitleTemplate\"\n          view=\"day\"\n          (mwlClick)=\"eventClicked.emit()\">\n        </mwl-calendar-event-title>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        dayEvent: dayEvent,\n        tooltipPlacement: tooltipPlacement,\n        eventClicked: eventClicked,\n        tooltipTemplate: tooltipTemplate,\n        tooltipAppendToBody: tooltipAppendToBody\n      }\">\n    </ng-template>\n  `\n})\nexport class CalendarDayViewEventComponent {\n  @Input() dayEvent: DayViewEvent;\n\n  @Input() tooltipPlacement: string;\n\n  @Input() tooltipAppendToBody: boolean;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  @Output() eventClicked: EventEmitter<any> = new EventEmitter();\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ResizableModule } from 'angular-resizable-element';\nimport { DragAndDropModule } from 'angular-draggable-droppable';\nimport { CalendarDayViewComponent } from './calendar-day-view.component';\nimport { CalendarAllDayEventComponent } from './calendar-all-day-event.component';\nimport { CalendarDayViewHourSegmentComponent } from './calendar-day-view-hour-segment.component';\nimport { CalendarDayViewEventComponent } from './calendar-day-view-event.component';\nimport { CalendarCommonModule } from '../common/calendar-common.module';\n\nexport {\n  CalendarDayViewComponent,\n  CalendarDayViewBeforeRenderEvent\n} from './calendar-day-view.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ResizableModule,\n    DragAndDropModule,\n    CalendarCommonModule\n  ],\n  declarations: [\n    CalendarDayViewComponent,\n    CalendarAllDayEventComponent,\n    CalendarDayViewHourSegmentComponent,\n    CalendarDayViewEventComponent\n  ],\n  exports: [\n    ResizableModule,\n    DragAndDropModule,\n    CalendarDayViewComponent,\n    CalendarAllDayEventComponent,\n    CalendarDayViewHourSegmentComponent,\n    CalendarDayViewEventComponent\n  ]\n})\nexport class CalendarDayModule {}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { DraggableHelper } from 'angular-draggable-droppable';\nimport {\n  CalendarCommonModule,\n  CalendarModuleConfig,\n  CalendarEventTitleFormatter,\n  CalendarDateFormatter,\n  CalendarUtils\n} from './common/calendar-common.module';\nimport { CalendarMonthModule } from './month/calendar-month.module';\nimport { CalendarWeekModule } from './week/calendar-week.module';\nimport { CalendarDayModule } from './day/calendar-day.module';\n\nexport * from './common/calendar-common.module';\nexport * from './month/calendar-month.module';\nexport * from './week/calendar-week.module';\nexport * from './day/calendar-day.module';\n\n/**\n * The main module of this library. Example usage:\n *\n * ```typescript\n * import { CalenderModule } from 'angular-calendar';\n *\n * @NgModule({\n *   imports: [\n *     CalenderModule.forRoot()\n *   ]\n * })\n * class MyModule {}\n * ```\n *\n */\n@NgModule({\n  imports: [\n    CalendarCommonModule,\n    CalendarMonthModule,\n    CalendarWeekModule,\n    CalendarDayModule\n  ],\n  exports: [\n    CalendarCommonModule,\n    CalendarMonthModule,\n    CalendarWeekModule,\n    CalendarDayModule\n  ]\n})\nexport class CalendarModule {\n  static forRoot(config: CalendarModuleConfig = {}): ModuleWithProviders {\n    return {\n      ngModule: CalendarModule,\n      providers: [\n        DraggableHelper,\n        config.eventTitleFormatter || CalendarEventTitleFormatter,\n        config.dateFormatter || CalendarDateFormatter,\n        config.utils || CalendarUtils\n      ]\n    };\n  }\n}\n"],"names":["validateEvents","validateEventsWithoutLog","tslib_1.__extends"],"mappings":"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"}
