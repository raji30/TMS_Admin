{"version":3,"sources":["./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/containers/default-layout/default-layout.component.html","./src/app/views/_customer/add-customer/addcustomer/addcustomer.component.html","./src/app/views/_customer/list-customer/listcustomer/listcustomer.component.html","./src/app/views/_master/_baserate/baseratelist/baseratelist.component.html","./src/app/views/_master/_broker/brokerlist/brokerlist/brokerlist.component.html","./src/app/views/_master/_carrier/carrierlist/carrierlist.component.html","./src/app/views/_master/_city/listcity/listcity.component.html","./src/app/views/_master/_company/companylist/companylist.component.html","./src/app/views/_master/_driver/listdriver/listdriver.component.html","./src/app/views/_master/_item/itemlist/itemlist.component.html","./src/app/views/_master/_ratesheet/ratesheetlist/ratesheetlist.component.html","./src/app/views/_master/_user/userlist/userlist.component.html","./src/app/views/_master/_vendor/vendorlist/vendorlist/vendorlist.component.html","./src/app/views/_master/userpermissions/userpermissions.component.html","./src/app/views/child/_address/customer/customer.component.html","./src/app/views/child/_broker/broker.component.html","./src/app/views/child/_company/company/company.component.html","./src/app/views/child/address/address.component.html","./src/app/views/child/billingrates/billingrates.component.html","./src/app/views/child/container/container.component.html","./src/app/views/child/containersize/containersize.component.html","./src/app/views/child/orderinfo/orderinfo.component.html","./src/app/views/container-status/container-status.component.html","./src/app/views/dispatch/dispatch.component.html","./src/app/views/dispatchAssignment/dispatchAssignment.component.html","./src/app/views/dispatchupdate/dispatchupdate.component.html","./src/app/views/dispathdelivery/dispathdelivery.component.html","./src/app/views/dointake/dointake.component.html","./src/app/views/file-upload/file-upload.component.html","./src/app/views/fileupload/fileupload.component.html","./src/app/views/invoice/invoice/invoice.component.html","./src/app/views/login/login.component.html","./src/app/views/navigation/navigation.component.html","./src/app/views/orderlist/orderlist.component.html","./src/app/views/pdfviewcomponent/pdfviewcomponent.component.html","./src/app/views/scheduler-update/scheduler-update.component.html","./src/app/views/schedulerlist/schedulerlist.component.html","./src/app/views/tab/tab.component.html","./src/app/views/test/test.component.html","./node_modules/tslib/tslib.es6.js","./src/$_lazy_route_resource lazy namespace object","./src/app/_constants/appsettings.ts","./src/app/_filter/filter.pipe.ts","./src/app/_models/DeliveryOrderHeader.ts","./src/app/_models/User.ts","./src/app/_models/address.ts","./src/app/_models/broker.ts","./src/app/_models/city.ts","./src/app/_models/company.ts","./src/app/_models/customer.ts","./src/app/_models/dispatch.ts","./src/app/_models/driver.ts","./src/app/_models/grd-filter.pipe.ts","./src/app/_models/grdPipe.ts","./src/app/_models/invoice.ts","./src/app/_models/invoicedetails.ts","./src/app/_models/invoicemodel.ts","./src/app/_models/item.ts","./src/app/_models/order_details.ts","./src/app/_models/ratesheet.ts","./src/app/_models/tms_routes.ts","./src/app/_models/vendor.ts","./src/app/_nav.ts","./src/app/_services/accountingoptions.service.ts","./src/app/_services/address.service.ts","./src/app/_services/authentication.service.ts","./src/app/_services/broker.service.ts","./src/app/_services/carrier.service.ts","./src/app/_services/city.service.ts","./src/app/_services/company.service.ts","./src/app/_services/customer.service.ts","./src/app/_services/deliveryOrder.service.ts","./src/app/_services/dispatchAssignment.service.ts","./src/app/_services/dispatchDelivery.service.ts","./src/app/_services/driver.service.ts","./src/app/_services/file-uploader.service.ts","./src/app/_services/filedownload.service.ts","./src/app/_services/fileupload.service.ts","./src/app/_services/invoice.service.ts","./src/app/_services/item.service.ts","./src/app/_services/master.service.ts","./src/app/_services/rate.service.ts","./src/app/_services/routes.service.ts","./src/app/_services/scheduler.service.ts","./src/app/_services/user.service.ts","./src/app/_services/userpermission.service.ts","./src/app/_services/vendor.service.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/common/block-copy-paste.ts","./src/app/common/master.ts","./src/app/containers/default-layout/default-layout.component.ts","./src/app/containers/default-layout/index.ts","./src/app/containers/index.ts","./src/app/views/_customer/add-customer/addcustomer/addcustomer.component.scss","./src/app/views/_customer/add-customer/addcustomer/addcustomer.component.ts","./src/app/views/_customer/list-customer/listcustomer/listcustomer.component.scss","./src/app/views/_customer/list-customer/listcustomer/listcustomer.component.ts","./src/app/views/_master/_baserate/baseratelist/baseratelist.component.scss","./src/app/views/_master/_baserate/baseratelist/baseratelist.component.ts","./src/app/views/_master/_broker/brokerlist/brokerlist/brokerlist.component.scss","./src/app/views/_master/_broker/brokerlist/brokerlist/brokerlist.component.ts","./src/app/views/_master/_carrier/carrierlist/carrierlist.component.scss","./src/app/views/_master/_carrier/carrierlist/carrierlist.component.ts","./src/app/views/_master/_city/listcity/listcity.component.scss","./src/app/views/_master/_city/listcity/listcity.component.ts","./src/app/views/_master/_company/companylist/companylist.component.scss","./src/app/views/_master/_company/companylist/companylist.component.ts","./src/app/views/_master/_driver/listdriver/listdriver.component.scss","./src/app/views/_master/_driver/listdriver/listdriver.component.ts","./src/app/views/_master/_item/itemlist/itemlist.component.scss","./src/app/views/_master/_item/itemlist/itemlist.component.ts","./src/app/views/_master/_ratesheet/ratesheetlist/ratesheetlist.component.scss","./src/app/views/_master/_ratesheet/ratesheetlist/ratesheetlist.component.ts","./src/app/views/_master/_user/userlist/userlist.component.scss","./src/app/views/_master/_user/userlist/userlist.component.ts","./src/app/views/_master/_vendor/vendorlist/vendorlist/vendorlist.component.scss","./src/app/views/_master/_vendor/vendorlist/vendorlist/vendorlist.component.ts","./src/app/views/_master/userpermissions/userpermissions.component.scss","./src/app/views/_master/userpermissions/userpermissions.component.ts","./src/app/views/child/_address/customer/customer.component.scss","./src/app/views/child/_address/customer/customer.component.ts","./src/app/views/child/_broker/broker.component.scss","./src/app/views/child/_broker/broker.component.ts","./src/app/views/child/_company/company/company.component.scss","./src/app/views/child/_company/company/company.component.ts","./src/app/views/child/address/address.component.scss","./src/app/views/child/address/address.component.ts","./src/app/views/child/billingrates/billingrates.component.scss","./src/app/views/child/billingrates/billingrates.component.ts","./src/app/views/child/container/container.component.scss","./src/app/views/child/container/container.component.ts","./src/app/views/child/containersize/containersize.component.scss","./src/app/views/child/containersize/containersize.component.ts","./src/app/views/child/orderinfo/orderinfo.component.scss","./src/app/views/child/orderinfo/orderinfo.component.ts","./src/app/views/container-status/container-status.component.scss","./src/app/views/container-status/container-status.component.ts","./src/app/views/dispatch/dispatch.component.scss","./src/app/views/dispatch/dispatch.component.ts","./src/app/views/dispatchAssignment/dispatchAssignment.component.scss","./src/app/views/dispatchAssignment/dispatchAssignment.component.ts","./src/app/views/dispatchupdate/dispatchupdate.component.scss","./src/app/views/dispatchupdate/dispatchupdate.component.ts","./src/app/views/dispathdelivery/dispathdelivery.component.scss","./src/app/views/dispathdelivery/dispathdelivery.component.ts","./src/app/views/dointake/dointake.component.scss","./src/app/views/dointake/dointake.component.ts","./src/app/views/file-upload/file-upload.component.scss","./src/app/views/file-upload/file-upload.component.ts","./src/app/views/fileupload/fileupload.component.scss","./src/app/views/fileupload/fileupload.component.ts","./src/app/views/invoice/invoice/invoice.component.scss","./src/app/views/invoice/invoice/invoice.component.ts","./src/app/views/login/login.component.scss","./src/app/views/login/login.component.ts","./src/app/views/navigation/navigation.component.scss","./src/app/views/navigation/navigation.component.ts","./src/app/views/orderlist/orderlist.component.scss","./src/app/views/orderlist/orderlist.component.ts","./src/app/views/pdfviewcomponent/pdf.service.ts","./src/app/views/pdfviewcomponent/pdfviewcomponent.component.scss","./src/app/views/pdfviewcomponent/pdfviewcomponent.component.ts","./src/app/views/scheduler-update/scheduler-update.component.scss","./src/app/views/scheduler-update/scheduler-update.component.ts","./src/app/views/schedulerlist/schedulerlist.component.scss","./src/app/views/schedulerlist/schedulerlist.component.ts","./src/app/views/tab/tab.component.ts","./src/app/views/test/test.component.scss","./src/app/views/test/test.component.ts","./src/environments/environment.ts","./src/main.ts","zlib (ignored)","fs (ignored)","http (ignored)","https (ignored)"],"names":[],"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","file":"main-es2015.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","export default \"<app-header [fixed]=\\\"true\\\"\\r\\n  [navbarBrandFull]=\\\"{src: 'assets/img/brand/lorry24px.png', alt: 'CoreUI Logo'}\\\"\\r\\n  [navbarBrandMinimized]=\\\"{src: 'assets/img/brand/large-tiles-icon16px.png', width: 40, height: 40, alt: 'CoreUI Logo'}\\\"\\r\\n  [sidebarToggler]=\\\"false\\\" [mobileSidebarToggler]=\\\"false\\\" [asideMenuToggler]=\\\"true\\\">\\r\\n\\r\\n  <ul class=\\\"nav navbar-nav d-md-down-none mr-auto\\\">\\r\\n    <li class=\\\"nav-item px-3\\\">\\r\\n      <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\" (click)=\\\"changeColor('Dashboard')\\\">\\r\\n        <!-- <i class=\\\"fa fa-dashboard\\\"></i>  -->\\r\\n        <!-- <img src=\\\"assets/img/brand/large-tiles-icon16px.png\\\" /> -->\\r\\n        <strong [ngStyle]=\\\"{'color':lblDashboardColor}\\\" > <i class=\\\"fa fa-tachometer\\\" aria-hidden=\\\"true\\\"></i> Dashboard</strong></a>\\r\\n    </li>\\r\\n     <!--   -->\\r\\n    <li class=\\\"nav-item px-3\\\" *ngIf=\\\"Show_Orders\\\">\\r\\n      <a class=\\\"nav-link\\\" routerLink=\\\"/doIntake\\\" (click)=\\\"changeColor('Orders')\\\"> \\r\\n        <!-- <img src=\\\"assets/img/brand/standard-notes-icon16px.png\\\" /> -->\\r\\n        &nbsp;  <strong [ngStyle]=\\\"{'color':lblOrdersColor}\\\" ><i class=\\\"fa fa-window-restore\\\" aria-hidden=\\\"true\\\"></i> Orders</strong></a>\\r\\n      <!-- <i class=\\\"fa fa-plus-circle\\\" aria-hidden=\\\"true\\\"></i> -->\\r\\n    </li>\\r\\n\\r\\n    <!-- <li class=\\\"nav-item px-3\\\">\\r\\n      <a class=\\\"nav-link\\\" style=\\\"color: darkblue;\\\" routerLink=\\\"/Containers\\\"> <img src=\\\"assets/img/brand/schedule-icon16px.png\\\" />\\r\\n        &nbsp; Containers</a>    \\r\\n    </li> -->\\r\\n\\r\\n    <li class=\\\"nav-item px-3\\\" *ngIf=\\\"Show_Scheduler\\\">\\r\\n      <a class=\\\"nav-link\\\" routerLink=\\\"/Scheduler\\\" (click)=\\\"changeColor('Scheduler')\\\"> \\r\\n        <!-- <img src=\\\"assets/img/brand/schedule-icon16px.png\\\" /> -->\\r\\n        <!-- <img src=\\\"assets/img/brand/overtime24px.png\\\" style=\\\"color: cornflowerblue;\\\" /> -->\\r\\n        &nbsp;  <strong [ngStyle]=\\\"{'color':lblSchedulersColor}\\\" ><i class=\\\"fa fa-clock-o\\\" aria-hidden=\\\"true\\\"></i> Scheduler</strong></a>\\r\\n        <!-- <i class=\\\"cil-caret-bottom\\\" style=\\\"color: cornflowerblue;\\\"></i> -->\\r\\n      <!-- <i class=\\\"fa fa-plus-circle\\\" aria-hidden=\\\"true\\\"></i> -->\\r\\n    </li>\\r\\n\\r\\n    <li class=\\\"nav-item px-3\\\"  *ngIf=\\\"Show_Dispatch\\\" >\\r\\n      <a class=\\\"nav-link\\\" routerLink=\\\"/DispatchDelivery\\\" (click)=\\\"changeColor('Dispatch')\\\">\\r\\n        <!-- <img src=\\\"assets/img/brand/system-box-icon16px.png\\\" />  -->\\r\\n         <strong [ngStyle]=\\\"{'color':lblDispatchColor}\\\" ><i class=\\\"fa fa-taxi\\\" aria-hidden=\\\"true\\\"></i> Dispatch</strong>\\r\\n      </a>\\r\\n      <!-- <div class=\\\"dropdown show\\\">\\r\\n       \\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuLink\\\">\\r\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/DispatchAssignment\\\"> Dispatch Assignment</a>\\r\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/DispatchDelivery\\\">Dispatch Delivery</a>\\r\\n        </div>\\r\\n      </div> -->\\r\\n    </li>\\r\\n    <li class=\\\"nav-item px-3\\\" *ngIf=\\\"Show_Invoice\\\" >\\r\\n      <a class=\\\"nav-link\\\" routerLink=\\\"/GetOrderstoGenerateInvoice\\\" (click)=\\\"changeColor('Invoice')\\\"> \\r\\n        <!-- <img src=\\\"assets/img/brand/Cash-icon.png\\\" /> -->\\r\\n        &nbsp; <strong  [ngStyle]=\\\"{'color':lblInvoiceColor}\\\" ><i class=\\\"fa fa-barcode\\\" aria-hidden=\\\"true\\\"></i> Invoice</strong></a>\\r\\n      <!-- <i class=\\\"fa fa-plus-circle\\\" aria-hidden=\\\"true\\\"></i> -->\\r\\n      <!-- <div class=\\\"dropdown show\\\">\\r\\n        <a class=\\\"nav-item\\\" style=\\\"color: darkblue;\\\" role=\\\"button\\\" id=\\\"dropdownMenuLink\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\r\\n          aria-expanded=\\\"false\\\">\\r\\n          <img src=\\\"assets/img/brand/invoice-icon16px.png\\\" /> Invoice\\r\\n        </a>\\r\\n\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuLink\\\">\\r\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/GetOrderstoGenerateInvoice\\\">Create Invoice</a>\\r\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/GetInvoiceList\\\">Invoice List</a>\\r\\n        </div>\\r\\n      </div> -->\\r\\n    </li>\\r\\n    <li class=\\\"nav-item px-3\\\" *ngIf=\\\"Show_Admin\\\">\\r\\n      <div class=\\\"dropdown show\\\">\\r\\n        <a class=\\\"nav-link\\\" role=\\\"button\\\" id=\\\"dropdownMenuLink\\\"  data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\r\\n          aria-expanded=\\\"false\\\">\\r\\n          <!-- <img src=\\\"assets/img/brand/setting-icon16px.png\\\" />  -->          \\r\\n          <strong [ngStyle]=\\\"{'color':lblAdminColor}\\\"><i class=\\\"fa fa-cogs\\\" aria-hidden=\\\"true\\\"></i> Admin</strong>  \\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuLink\\\">\\r\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/Customers\\\" (click)=\\\"changeColor('Admin')\\\"> <img src=\\\"assets/img/brand/star16px.png\\\" hspace=\\\"5\\\" />\\r\\n            Customer</a>\\r\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/Company\\\" (click)=\\\"changeColor('Admin')\\\"> <img src=\\\"assets/img/brand/star16px.png\\\" hspace=\\\"5\\\" />\\r\\n            Company</a>\\r\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/Drivers\\\" (click)=\\\"changeColor('Admin')\\\"> <img src=\\\"assets/img/brand/star16px.png\\\" hspace=\\\"5\\\" />\\r\\n            Driver</a>\\r\\n          <!-- <a class=\\\"dropdown-item\\\" routerLink=\\\"/Vendors\\\"> <img src=\\\"assets/img/brand/star16px.png\\\" hspace=\\\"5\\\" />\\r\\n            Vendor</a>\\r\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/Customers\\\"> <img src=\\\"assets/img/brand/star16px.png\\\" hspace=\\\"5\\\" />\\r\\n            Warehouse</a>\\r\\n\\r\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/Customers\\\"> <img src=\\\"assets/img/brand/star16px.png\\\" hspace=\\\"5\\\" />\\r\\n            Terminal</a>\\r\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/Customers\\\"> <img src=\\\"assets/img/brand/star16px.png\\\" hspace=\\\"5\\\" />\\r\\n            Company</a> -->\\r\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/Carriers\\\" (click)=\\\"changeColor('Admin')\\\"> <img src=\\\"assets/img/brand/star16px.png\\\" hspace=\\\"5\\\" />\\r\\n            Carrier</a>\\r\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/Brokers\\\" (click)=\\\"changeColor('Admin')\\\"><img src=\\\"assets/img/brand/star16px.png\\\" hspace=\\\"5\\\" />\\r\\n            Broker</a>\\r\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/Users\\\" (click)=\\\"changeColor('Admin')\\\"> <img src=\\\"assets/img/brand/star16px.png\\\" hspace=\\\"5\\\" />\\r\\n            User</a>\\r\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/Items\\\" (click)=\\\"changeColor('Admin')\\\"><img src=\\\"assets/img/brand/star16px.png\\\" hspace=\\\"5\\\" />\\r\\n            Item</a>\\r\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/City\\\" (click)=\\\"changeColor('Admin')\\\"><img src=\\\"assets/img/brand/star16px.png\\\" hspace=\\\"5\\\" />\\r\\n            City</a>\\r\\n\\r\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/RateSheet\\\" (click)=\\\"changeColor('Admin')\\\"><img src=\\\"assets/img/brand/star16px.png\\\" hspace=\\\"5\\\" /> Rate\\r\\n            Sheet</a>\\r\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/BaseRate\\\" (click)=\\\"changeColor('Admin')\\\"><img src=\\\"assets/img/brand/star16px.png\\\" hspace=\\\"5\\\" /> Base\\r\\n            Rate\\r\\n          </a>\\r\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/UserPermissions\\\" (click)=\\\"changeColor('Admin')\\\"><img src=\\\"assets/img/brand/star16px.png\\\" hspace=\\\"5\\\" /> Roles & Permissions\\r\\n          </a>\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </li>\\r\\n  </ul>\\r\\n  <ul class=\\\"nav navbar-nav ml-auto\\\">\\r\\n    <li class=\\\"nav-item dropdown\\\" dropdown placement=\\\"bottom left\\\">\\r\\n      <!-- <a class=\\\"nav-link\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" (click)=\\\"logout()\\\">           \\r\\n        <img src=\\\"assets/img/brand/cross-icon16px.png\\\" >\\r\\n        <h6>Logout</h6>      \\r\\n      </a> -->\\r\\n\\r\\n      <strong class=\\\"font-bold\\\" > Hi {{currentUser.firstname}}!&nbsp;&nbsp;&nbsp;</strong>\\r\\n      <!-- <h5 class=\\\"badge bg-warning\\\">Hi {{currentUser.firstname}}! </h5> -->\\r\\n      \\r\\n      <!-- <div class=\\\"container\\\"> \\r\\n          <img src=\\\"assets/img/brand/customer.png\\\" hspace=\\\"5\\\" />\\r\\n          <strong> Hi {{currentUser.firstname}}</strong> \\r\\n          <p> \\r\\n             logout\\r\\n               \\r\\n          </p> \\r\\n      </div>  -->\\r\\n\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"left\\\" title=\\\"logout\\\"\\r\\n        (click)=\\\"logout()\\\">\\r\\n        <img src=\\\"assets/img/brand/delete-1-icon16px.png\\\">\\r\\n        <!-- <p class=\\\"text-danger\\\">Logout</p> -->\\r\\n      </button>\\r\\n    </li>\\r\\n  </ul>\\r\\n</app-header>\\r\\n\\r\\n<div class=\\\"app-body\\\">\\r\\n\\r\\n  <!-- <app-sidebar [fixed]=\\\"true\\\" [display]=\\\"'lg'\\\">\\r\\n      <app-sidebar-nav [navItems]=\\\"navItems\\\" [perfectScrollbar] [disabled]=\\\"sidebarMinimized\\\">    \\r\\n    </app-sidebar-nav>    \\r\\n       <app-sidebar-minimizer></app-sidebar-minimizer>   \\r\\n  </app-sidebar> -->\\r\\n  <!-- <app-sidebar>\\r\\n    <app-navigation></app-navigation>\\r\\n  </app-sidebar> -->\\r\\n  <!-- Main content -->\\r\\n  <main class=\\\"main bg-dark\\\">\\r\\n    <!-- Breadcrumb -->\\r\\n    <!-- <ol class=\\\"breadcrumb\\\">\\r\\n      <app-breadcrumb></app-breadcrumb>\\r\\n    </ol> -->\\r\\n    <div class=\\\"container-fluid \\\">\\r\\n      <router-outlet></router-outlet>\\r\\n    </div><!-- /.container-fluid -->\\r\\n  </main>\\r\\n\\r\\n  <!-- <app-aside [fixed]=\\\"false\\\">\\r\\n    <aside class=\\\"aside-menu\\\">\\r\\n      <div>\\r\\n        <div class=\\\"dropdown-header text-center\\\"><strong>Settings </strong></div>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"#\\\"><i class=\\\"fa fa-user\\\"></i> Profile</a>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"#\\\"><i class=\\\"fa fa-wrench\\\"></i> Setting</a>\\r\\n\\r\\n        <div class=\\\"divider\\\"></div>\\r\\n        <a class=\\\"dropdown-item\\\" href=\\\"#\\\"><i class=\\\"fa fa-shield\\\"></i> Lock account</a>\\r\\n        <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\"><i class=\\\"fa fa-lock\\\"></i> Logout</a>\\r\\n      </div>\\r\\n    </aside>\\r\\n  </app-aside> -->\\r\\n</div>\\r\\n<app-footer>\\r\\n  <span>&copy; 2020 Trikaiser</span>\\r\\n</app-footer>\"","export default \"<div class=\\\"col-md-6\\\">  \\r\\n    <h2 class=\\\"text-center\\\">{{empformlabel}}</h2>  \\r\\n    <form [formGroup]=\\\"addForm\\\" novalidate class=\\\"form\\\">  \\r\\n      <div class=\\\"form-group\\\">  \\r\\n        <label for=\\\"empId\\\">Employee Id:</label>  \\r\\n        <input type=\\\"number\\\" formControlName=\\\"id\\\" placeholder=\\\"Id\\\" name=\\\"empId\\\" class=\\\"form-control\\\" id=\\\"empId\\\">  \\r\\n      </div>  \\r\\n    \\r\\n      <div class=\\\"form-group\\\">  \\r\\n        <label for=\\\"empName\\\">Employee Name:</label>  \\r\\n        <input formControlName=\\\"employee_name\\\" placeholder=\\\"Employee Name\\\" name=\\\"empName\\\" class=\\\"form-control\\\" id=\\\"empName\\\">  \\r\\n        <div class=\\\"alert  alert-danger\\\" *ngIf=\\\"addForm.get('employee_name').hasError('required') && addForm.get('employee_name').touched\\\">  \\r\\n          Employee Name is required  \\r\\n        </div>  \\r\\n      </div>  \\r\\n    \\r\\n      <div class=\\\"form-group\\\">  \\r\\n        <label for=\\\"empSalary\\\">Employee Salary:</label>  \\r\\n        <input formControlName=\\\"employee_salary\\\" placeholder=\\\"Employee Salary\\\" name=\\\"employee_salary\\\" class=\\\"form-control\\\" id=\\\"employee_salary\\\">  \\r\\n        <div class=\\\"alert  alert-danger\\\" *ngIf=\\\"addForm.get('employee_salary').hasError('maxlength') && addForm.get('employee_salary').touched\\\">  \\r\\n          Employee Salary is required and should less than 9 characters.  \\r\\n        </div>  \\r\\n      </div>  \\r\\n    \\r\\n      <div class=\\\"form-group\\\">  \\r\\n        <label for=\\\"empAge\\\">Employee Age:</label>  \\r\\n        <input formControlName=\\\"employee_age\\\" placeholder=\\\"Employee Age\\\" name=\\\"empAge\\\" class=\\\"form-control\\\" id=\\\"empAge\\\">  \\r\\n        <div class=\\\"alert  alert-danger\\\" *ngIf=\\\" addForm.get('employee_age').hasError('maxlength') && addForm.get('employee_age').touched\\\">  \\r\\n          Age is required and should less than 3 characters.  \\r\\n        </div>  \\r\\n      </div>  \\r\\n      <button class=\\\"btn btn-success\\\" [disabled]='addForm.invalid' *ngIf=\\\"btnvisibility\\\" (click)=\\\"onSubmit()\\\">Save</button>  \\r\\n      <button class=\\\"btn btn-success\\\" [disabled]='addForm.invalid' *ngIf=\\\"!btnvisibility\\\" (click)=\\\"onUpdate()\\\">Update</button>  \\r\\n    \\r\\n      <p>Form value: {{ addForm.value | json }}</p>  \\r\\n    </form>  \\r\\n  </div>  \"","export default \"<div id=\\\"accordion\\\">\\r\\n  <br>\\r\\n  <div class=\\\"row\\\">\\r\\n    <!-- <div class=\\\"col-sm-7 col-md-7 col-lg-7  scrollbar\\\" id=\\\"style-10\\\"> -->\\r\\n    <div class=\\\"col-sm-7 col-md-7 col-lg-7 \\\">\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12 col-sm-12 col-md-12\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-3 col-sm-3 col-md-3\\\">\\r\\n              <h5 class=\\\"card-subtitle mb-2\\\">\\r\\n                Customers</h5>\\r\\n            </div>\\r\\n            <div class=\\\"col-7 col-sm-7 col-md-7\\\">\\r\\n              <div class=\\\"container text-right\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm\\\">\\r\\n                  <div class=\\\"img-group-prepend\\\">\\r\\n                    <i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i> &nbsp;\\r\\n                  </div>\\r\\n                  <input [(ngModel)]=\\\"searchText\\\" class=\\\"form-control form-control-sm\\\" style=\\\"border-radius: 1rem;\\\"\\r\\n                    type=\\\"text\\\" placeholder=\\\"Search..\\\">\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-2 col-sm-2 col-md-2\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\" style=\\\"border-radius: 1rem;\\\" (click)=\\\"clear()\\\"\\r\\n                *ngIf=\\\"show_btnCreateCustomer\\\">\\r\\n                <i class=\\\"fa fa-plus-circle\\\" aria-hidden=\\\"true\\\"></i> New\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <table class=\\\"table table-sm\\\">\\r\\n        <tr ngclass=\\\"btn-primary\\\">\\r\\n          <th hidden=\\\"true\\\">custkey</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"pointer\\\" (click)=\\\"sort('CustId')\\\">ID &nbsp;<i class=\\\"fa fa-sort\\\"\\r\\n              aria-hidden=\\\"true\\\"></i></th>\\r\\n          <th scope=\\\"col\\\" class=\\\"pointer\\\" (click)=\\\"sort('CustName')\\\">Name &nbsp; <i class=\\\"fa fa-sort\\\"\\r\\n              aria-hidden=\\\"true\\\"></i></th>\\r\\n          <th scope=\\\"col\\\" class=\\\"pointer\\\" (click)=\\\"sort('CreditLimit')\\\">Credit Limit &nbsp;<i class=\\\"fa fa-sort\\\"\\r\\n              aria-hidden=\\\"true\\\"></i></th>\\r\\n        </tr>\\r\\n        <tr\\r\\n          *ngFor=\\\"let cust of customers | grdFilter: {CustName: searchText,CustId: searchText, CreditLimit: searchText}|paginate:{itemsPerPage:20,currentPage:p,totalItems: count}\\\">\\r\\n          <td hidden=\\\"true\\\">{{cust.CustomerKey}}</td>\\r\\n          <td>{{cust.CustId}}</td>\\r\\n          <td> <a [routerLink]=\\\"\\\" (click)=\\\"loadCustomerToEdit(cust.CustomerKey)\\\">\\r\\n              {{cust.CustName}}</a> </td>\\r\\n          <td>${{cust.CreditLimit|number}}</td>\\r\\n        </tr>\\r\\n      </table>\\r\\n      <div class=\\\"container text-right\\\">\\r\\n        <pagination-controls (pageChange)=\\\"p=$event\\\" autoHide=\\\"true\\\" responsive=\\\"true\\\"> </pagination-controls>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-sm-5 col-md-5 col-lg-5\\\">\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"show_addupdatecustomer\\\">\\r\\n        <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n          <form (ngSubmit)=\\\" f.form.valid && onFormSubmit()\\\" #f=\\\"ngForm\\\">\\r\\n            <div class=\\\"container\\\">\\r\\n              <div class=\\\"row\\\" hidden=\\\"true\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-4\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Customer Key</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"customer.CustomerKey\\\"\\r\\n                    name=\\\"CustomerKey\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"container text-right\\\">\\r\\n                  <button type=\\\"reset\\\" class=\\\"btn btn-outline-info btn-sm\\\" (click)=\\\"cancel()\\\">Cancel</button> &nbsp;&nbsp;\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-info btn-sm\\\">Submit</button>\\r\\n                </div>\\r\\n              </div>\\r\\n             <br>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-8\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">ID</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"customer.CustId\\\" name=\\\"CustId\\\"\\r\\n                      #CustId=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && CustId.invalid }\\\" required\\r\\n                      maxlength=\\\"20\\\">\\r\\n\\r\\n                    <div *ngIf=\\\"f.submitted && CustId.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"CustId.errors.required\\\">Cust Id is required</div>\\r\\n                    </div>\\r\\n\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                    <div class=\\\"form-check\\\">\\r\\n                      <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"ACHrequired\\\"\\r\\n                        [(ngModel)]=\\\"customer.achrequired\\\" name=\\\"achrequired\\\" (change)=\\\"Checkbox_Change($event)\\\">\\r\\n                      <small class=\\\"form-check-label\\\" for=\\\"ACH required\\\">ACH required</small>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">Customer</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"customer.CustName\\\"\\r\\n                      name=\\\"CustName\\\" #CustName=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && CustName.invalid }\\\"\\r\\n                      required>\\r\\n                    <div *ngIf=\\\"f.submitted && CustName.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"CustName.errors.required\\\">Customer is required</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">Credit limit</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"customer.CreditLimit\\\"\\r\\n                      name=\\\"CreditLimit\\\" #CreditLimit=\\\"ngModel\\\"\\r\\n                      [ngClass]=\\\"{ 'is-invalid': f.submitted && CreditLimit.invalid }\\\" required minlength=\\\"3\\\">\\r\\n                    <div *ngIf=\\\"f.submitted && CreditLimit.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"CreditLimit.errors.required\\\">Creditlimit is required</div>\\r\\n                      <div *ngIf=\\\"CreditLimit.errors.minLength\\\">minlength is required</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n                    <div class=\\\"form-group input-group input-group-sm\\\">\\r\\n                      <div class=\\\"input-group-prepend\\\">\\r\\n                        <span class=\\\"input-group-text\\\">Payment Terms</span>\\r\\n                      </div>\\r\\n                      <select id=\\\"drppaymentterms\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"customer.paymentterms\\\"\\r\\n                        name=\\\"paymentterms\\\">\\r\\n                        <option [value]=\\\"-1\\\">Select</option>\\r\\n                        <option [value]=\\\"0\\\">0 days</option>\\r\\n                        <option [value]=\\\"15\\\"> 15 days</option>\\r\\n                        <option [value]=\\\"30\\\">30 days</option>\\r\\n                        <option [value]=\\\"45\\\"> 45 days</option>\\r\\n                        <option [value]=\\\"60\\\">60 days</option>\\r\\n                        <option [value]=\\\"90\\\"> 90 days</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n               \\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"legno\\\"> <b> Address </b> </label>\\r\\n                <div class=\\\"row\\\" hidden=\\\"true\\\">\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">Address Key</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"customer.Address.AddrKey\\\"\\r\\n                      name=\\\"AddrKey\\\">\\r\\n                  </div>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">Line 1</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"customer.Address.Address1\\\"\\r\\n                      name=\\\"Address1\\\" #Address1=\\\"ngModel\\\"\\r\\n                      [ngClass]=\\\"{ 'is-invalid': f.submitted && Address1.invalid }\\\" required>\\r\\n                    <div *ngIf=\\\"f.submitted && Address1.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"Address1.errors.required\\\">Address line is required</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">Line 2</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"customer.Address.Address2\\\"\\r\\n                      name=\\\"Address2\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-5\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">City</span>\\r\\n                    </div>\\r\\n                    <!-- <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"customer.Address.City\\\"\\r\\n        name=\\\"City\\\" #City=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && City.invalid }\\\"\\r\\n        required> -->\\r\\n                    <select id=\\\"drpSource\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"customer.Address.City\\\"\\r\\n                      name=\\\"City\\\" #City=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && City.invalid }\\\">\\r\\n                      <option [value]=\\\"city.citykey\\\" *ngFor=\\\"let city of citylist\\\">{{city.cityname}}\\r\\n                      </option>\\r\\n                    </select>\\r\\n                    <div *ngIf=\\\"f.submitted && City.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"City.errors.required\\\">City is required</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-4\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">State</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"customer.Address.State\\\"\\r\\n                      name=\\\"State\\\" #State=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && State.invalid }\\\"\\r\\n                      required>\\r\\n                    <div *ngIf=\\\"f.submitted && State.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"State.errors.required\\\">State is required</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-3\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">Zip</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"customer.Address.Zip\\\"\\r\\n                      name=\\\"Zip\\\" #Zip=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && Zip.invalid }\\\" required\\r\\n                      (keypress)=\\\"numberOnly($event)\\\" appBlockCopyPaste>\\r\\n                    <div *ngIf=\\\"f.submitted && Zip.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"Zip.errors.required\\\">Zip is required</div>\\r\\n                      <!-- <div *ngIf=\\\"customerForm.controls.creditlimit.errors.pattern\\\">pattern is required</div> -->\\r\\n                      <div *ngIf=\\\"Zip.errors.minLength\\\">minlength is required</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-4\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">Country</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"customer.Address.Country\\\"\\r\\n                      name=\\\"Country\\\" #CustId=\\\"ngModel\\\">\\r\\n\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-8\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">Website</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"customer.Address.Website\\\"\\r\\n                      name=\\\"Website\\\" appBlockCopyPaste>\\r\\n                    <!-- <div *ngIf=\\\"submitted && f.Address['controls'].website.errors\\\" class=\\\"invalid-feedback\\\">                   \\r\\n          <div *ngIf=\\\"customerForm.controls.website.errors.pattern\\\">website is not valid</div>                       \\r\\n        </div> -->\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">Primary Phone</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"customer.Address.Phone\\\"\\r\\n                      name=\\\"Phone\\\" #Phone=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && Phone.invalid }\\\"\\r\\n                      required (keypress)=\\\"numberOnly($event)\\\" appBlockCopyPaste minLength=10 maxLength=10>\\r\\n                    <div *ngIf=\\\"f.submitted && Phone.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"Phone.errors.required\\\">Phone is required</div>\\r\\n                      <div *ngIf=\\\"Phone.errors.minLength\\\">minlength is required</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">Secondary Phone</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"customer.Address.Phone2\\\"\\r\\n                      name=\\\"Phone2\\\" (keypress)=\\\"numberOnly($event)\\\" appBlockCopyPaste>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">Fax</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"customer.Address.Fax\\\"\\r\\n                      name=\\\"Fax\\\" (keypress)=\\\"numberOnly($event)\\\" appBlockCopyPaste>\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">Primary E-mail</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"customer.Address.Email\\\"\\r\\n                      name=\\\"Email\\\" appBlockCopyPaste>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">Secondary E-mail</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"customer.Address.Email2\\\"\\r\\n                      name=\\\"Email2\\\" appBlockCopyPaste>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"show_customerInfo\\\">\\r\\n        <div class=\\\"container text-right\\\">\\r\\n          <span style=\\\"color:chocolate;\\\" (click)=\\\"edit_click()\\\"> <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            <b> edit</b>..</span>\\r\\n        </div>\\r\\n        <div class=\\\"container ml-2\\\">\\r\\n\\r\\n          <h5> {{selectedCustomer.CustName}}</h5>\\r\\n\\r\\n          <span class=\\\"text-muted\\\">ID:- <b>{{selectedCustomer.CustId}}</b> </span>\\r\\n          <hr style=\\\"background-color:lightslategray;\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n              <span class=\\\"text-muted\\\">Credit Limit </span><br>\\r\\n              <span><b> {{selectedCustomer.CreditLimit}} </b></span> </div>\\r\\n            <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n              <span class=\\\"text-muted\\\">ACH Required </span><br>\\r\\n              <span><b> {{selectedCustomer.achrequired}}</b></span>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n              <span class=\\\"text-muted\\\">Payment Term </span><br>\\r\\n              <span><b> {{selectedCustomer.paymentterms}} days</b></span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <br><br>\\r\\n          <span class=\\\"text\\\" style=\\\"color:cornflowerblue;\\\">\\r\\n            <h5> <u>Address</u> </h5>\\r\\n          </span>\\r\\n          <span class=\\\"text-muted\\\">Line 1 :<b> {{selectedCustomer.Address.Address1}}</b> </span><br>\\r\\n          <span class=\\\"text-muted\\\">Line 2 :<b> {{selectedCustomer.Address.Address2}}</b> </span> <br>\\r\\n          <span class=\\\"text-muted\\\">City :<b> {{selectedCustomer.Address.City}} </b></span> <br>\\r\\n          <span class=\\\"text-muted\\\">State :<b> {{selectedCustomer.Address.State}} </b></span> <br>\\r\\n          <span class=\\\"text-muted\\\">Zip :<b> {{selectedCustomer.Address.Zip}} </b></span> <br>\\r\\n          <span class=\\\"text-muted\\\">Country: <b> {{selectedCustomer.Address.Country}} </b></span> <br><br>\\r\\n          <span class=\\\"text-muted\\\">Website <b> {{selectedCustomer.Address.Website}} </b></span> <br><br>\\r\\n          <span class=\\\"text-muted\\\">Email (Primary) </span><br>\\r\\n          <span><b> {{selectedCustomer.Address.Email}} </b></span> <br><br>\\r\\n          <span class=\\\"text-muted\\\">Email (Secondary) </span><br>\\r\\n          <span><b> {{selectedCustomer.Address.Email2}} </b></span> <br><br>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n              <span class=\\\"text-muted\\\">Fax </span><br>\\r\\n              <span><b> {{selectedCustomer.Address.Fax}} </b></span>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n              <span class=\\\"text-muted\\\">Mobile (Primary) </span><br>\\r\\n              <span><b> {{selectedCustomer.Address.Phone}} </b></span>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n              <span class=\\\"text-muted\\\">Mobile (Secondary) </span><br>\\r\\n              <span><b> {{selectedCustomer.Address.Phone2}} </b></span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <br>\\r\\n</div>\"","export default \"<br>\\r\\n<div id=\\\"jumbotron\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-6 col-sm-6 col-md-6\\\">\\r\\n      <h5 class=\\\"card-subtitle mb-2\\\">\\r\\n        Base Rate</h5>\\r\\n    </div>   \\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-6 col-sm-6 col-md-6 \\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-6 col-sm-6 col-md-6 \\\">\\r\\n          <div class=\\\"btn-group\\\">\\r\\n            <button class=\\\"btn btn-secondary btn-sm\\\" type=\\\"button\\\">\\r\\n              <b style=\\\"color: black;\\\">Customer </b> &nbsp; {{CustomerName}}\\r\\n            </button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-secondary dropdown-toggle dropdown-toggle-split\\\"\\r\\n              data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n              <span class=\\\"sr-only\\\">Toggle Dropdown</span>\\r\\n            </button>\\r\\n\\r\\n            <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"drpcompany\\\">\\r\\n              <form class=\\\"px-4 py-2\\\">\\r\\n                <input type=\\\"search\\\" class=\\\"form-control  form-control-sm\\\" placeholder=\\\"search..\\\" autofocus=\\\"autofocus\\\"\\r\\n                  (input)=\\\"onSearchChange($event.target.value)\\\">\\r\\n              </form>\\r\\n              <div class=\\\"menuItems\\\">\\r\\n                <li *ngFor=\\\"let Customer of customersFilter  let ind=index;\\\"\\r\\n                  [class.selected]=\\\"Customer === selectedCustomer\\\" (click)=\\\"onSelect(Customer)\\\">\\r\\n                  <a class=\\\"dropdown-item\\\"> {{Customer.CustName}}</a>\\r\\n                </li>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-6 col-sm-6 col-md-6 \\\">\\r\\n          <div class=\\\"container text-left \\\">\\r\\n            <button class=\\\"btn btn-outline-primary btn-sm\\\" type=\\\"button\\\" (click)=\\\"getRatesforEdit()\\\" *ngIf=\\\"btnEditShow\\\"> <i\\r\\n                class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\r\\n              <b> Edit</b>..</button>\\r\\n            &nbsp; <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\" (click)=\\\"newRate()\\\" *ngIf=\\\"btnAddShow\\\">Add Rate\\r\\n            </button>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <br>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"ratesbycustomer !=0\\\">\\r\\n        <div class=\\\"col-6 col-sm-6 col-md-6 \\\">\\r\\n\\r\\n          <table class=\\\"table table-sm\\\">\\r\\n            <tr ngclass=\\\"btn-primary\\\">\\r\\n              <th scope=\\\"col\\\" class=\\\"pointer\\\" (click)=\\\"sort('cityname')\\\">City &nbsp;<i class=\\\"fa fa-sort\\\"\\r\\n                  aria-hidden=\\\"true\\\"></i>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" class=\\\"pointer\\\" (click)=\\\"sort('unitprice')\\\">Rate &nbsp;<i class=\\\"fa fa-sort\\\"\\r\\n                  aria-hidden=\\\"true\\\"></i>\\r\\n              </th>\\r\\n            </tr>\\r\\n            <tr *ngFor=\\\"let rate of ratesbycustomer| grdFilter: {cityname: searchText,unitprice: searchText} |paginate:{itemsPerPage:20,currentPage:p,totalItems: count}\\r\\n            ;let i=index\\\">\\r\\n              <td> {{rate.cityname}}</td>\\r\\n              <td> ${{rate.unitprice|number: '1.1-2'}}</td>\\r\\n            </tr>\\r\\n          </table>\\r\\n\\r\\n          <div class=\\\"container text-right\\\">\\r\\n            <pagination-controls (pageChange)=\\\"p=$event\\\" autoHide=\\\"true\\\" responsive=\\\"true\\\"> </pagination-controls>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\" *ngIf=\\\"ratesbycustomer==0\\\">\\r\\n            <h5> No records found.</h5>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-6 col-sm-6 col-md-6\\\">     \\r\\n      <div class=\\\"row\\\" *ngIf=\\\"showAddUpdate\\\">\\r\\n        <div class=\\\"table-responsive\\\" style=\\\"overflow-x: auto\\\">        \\r\\n       \\r\\n          <div class=\\\"container text-left\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn alert-dark btn-sm\\\" (click)=\\\"Submit()\\\"> Submit</button>\\r\\n            &nbsp; \\r\\n            <button type=\\\"button\\\" class=\\\"btn alert-dark btn-sm\\\" (click)=\\\"clear()\\\"> Cancel</button>\\r\\n          </div>       \\r\\n          <br>\\r\\n          <div class=\\\"col-10 col-sm-10 col-md-10\\\">  \\r\\n            <h5 style=\\\"color: white;\\\">{{CustomerName}}</h5>  \\r\\n          <table id=\\\"containerAttributes\\\" class=\\\"table table-custom table-sm table-hover table-striped table-warning \\\"\\r\\n            cellspacing=\\\"0\\\" width=\\\"100%\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\" hidden=\\\"true\\\">Flag</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\" hidden=\\\"true\\\">BaseRateKey</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\" hidden=\\\"true\\\">CityKey</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\">City</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\"> Rate</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\">Actions</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let field of ratedetails; let i = index\\\">\\r\\n                <td class=\\\"text-left\\\" style=\\\"color: darkslategrey;\\\" hidden=\\\"true\\\">\\r\\n                  {{field.Flag }}\\r\\n                </td>\\r\\n                <td class=\\\"text-left\\\" style=\\\"color: darkslategrey;\\\" hidden=\\\"true\\\">\\r\\n                  {{field.BaseRateKey }}\\r\\n                </td>\\r\\n                <td class=\\\"text-left\\\" style=\\\"color: darkslategrey;\\\" hidden=\\\"true\\\">\\r\\n                  {{field.citykey }}\\r\\n                </td>\\r\\n\\r\\n                <td class=\\\"text-left\\\" style=\\\"color: darkslategrey;\\\">\\r\\n                  {{field.cityname }}\\r\\n                </td>\\r\\n                <td class=\\\"text-left\\\" style=\\\"color: darkslategrey;\\\">\\r\\n                  ${{ field.unitprice|number: '1.1-2'}}\\r\\n                </td>\\r\\n                <td class=\\\"text-center\\\" style=\\\"color: darkslategrey;\\\">\\r\\n                  <a tooltip=\\\"Upload file\\\" (click)=\\\"editBaseRate(field,i)\\\">\\r\\n                    <i class=\\\"fa fa-pencil\\\"></i>\\r\\n                  </a> &nbsp;&nbsp;\\r\\n                  <!-- <a tooltip=\\\"Remove/Delete Container\\\" (click)=\\\"deleteFieldValue(i)\\\">\\r\\n                    <i class=\\\"fa fa-trash\\\"></i>\\r\\n                  </a>  -->\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <table>\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\" hidden=\\\"true\\\">BaseRateKey</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\" hidden=\\\"true\\\">City</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center text-muted\\\" hidden=\\\"true\\\"> Rate</th>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center text-muted\\\" hidden=\\\"true\\\">Actions</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr>\\r\\n\\r\\n                <td>\\r\\n                  <input class=\\\"form-control form-control-sm \\\" type=\\\"text\\\" [(ngModel)]=\\\"BaseRateKey\\\"\\r\\n                    name=\\\"BaseRateKey\\\" hidden=\\\"true\\\" />\\r\\n                </td>\\r\\n                <td>\\r\\n                  <select id=\\\"cboOrderType\\\" class=\\\"form-control form-control-sm \\\" name=\\\"citykey\\\" [(ngModel)]=\\\"citykey\\\"\\r\\n                  (change)=\\\"drpCityChanged($event.target.value)\\\">\\r\\n                    <option [value]=\\\"city.citykey\\\" *ngFor=\\\"let city of Citylist\\\">{{city.cityname}}</option>\\r\\n                  </select>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <input class=\\\"form-control form-control-sm \\\" type=\\\"number\\\" [(ngModel)]=\\\"UnitPrice\\\" name=\\\"UnitPrice\\\" />\\r\\n                </td>\\r\\n                <td>\\r\\n                  &nbsp; <button type=\\\"button\\\" class=\\\"btn alert-dark btn-sm\\\" style=\\\"border-radius: 1rem;\\\"\\r\\n                    (click)=\\\"addupdateRate()\\\"> {{btnLabel}}</button>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"\\r\\n  <br>\\r\\n<div id=\\\"accordion\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-8 col-sm-8 col-md-8\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-6 col-sm-6 col-md-6\\\">\\r\\n          <h5 class=\\\"card-subtitle mb-2\\\">\\r\\n           Brokers</h5>\\r\\n        </div>\\r\\n        <div class=\\\"col-6 col-sm-6 col-md-6\\\">\\r\\n          <div class=\\\"container text-right\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-11 col-sm-11 col-md-11\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm\\\">\\r\\n                  <div class=\\\"img-group-prepend\\\">\\r\\n                    <img src=\\\"assets/img/brand/search16px.png\\\" /> &nbsp;\\r\\n                  </div>\\r\\n                  <input [(ngModel)]=\\\"searchText\\\" class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" style=\\\"border-radius: 1rem;\\\"\\r\\n                    placeholder=\\\"Search..\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-1 col-sm-1 col-md-1\\\">\\r\\n                <img src=\\\"assets/img/brand/broom16px.png\\\" (click)=\\\"clear_search()\\\" tooltip=\\\"clear\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-4 col-sm-4 col-md-4 text-right\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\" (click)=\\\"toggle()\\\" *ngIf=\\\"show_btnCreateBroker\\\">Create New\\r\\n        Broker</button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-8 col-md-8 col-lg-8 border-right\\\">    \\r\\n\\r\\n      <table class=\\\"table table-sm\\\">\\r\\n        <tr ngclass=\\\"btn-primary\\\">\\r\\n          <th hidden=\\\"true\\\">BrokerKey</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"pointer\\\"  (click)=\\\"sort('CustId')\\\"   >ID &nbsp;<i class=\\\"fa fa-sort\\\" aria-hidden=\\\"true\\\"></i>\\r\\n          </th>\\r\\n          <th scope=\\\"col\\\" class=\\\"pointer\\\"  (click)=\\\"sort('CustId')\\\"   >Name &nbsp;<i class=\\\"fa fa-sort\\\" aria-hidden=\\\"true\\\"></i>\\r\\n          </th>           \\r\\n\\r\\n        </tr>\\r\\n        <tr *ngFor=\\\"let brok of brokers | grdFilter: {BrokerId: searchText,BrokerName: searchText}|paginate:{itemsPerPage:20,currentPage:p,totalItems: count}\\r\\n        \\\">\\r\\n          <td hidden=\\\"true\\\">{{brok.BrokerKey}}</td>\\r\\n          <td>{{brok.BrokerId}}</td>\\r\\n          <td> <a [routerLink]=\\\"\\\" (click)=\\\"EditBroker(brok.BrokerKey)\\\">{{brok.BrokerName}}</a> </td>\\r\\n         \\r\\n          <!-- <td class=\\\"tbl2\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\" (click)=\\\"EditBroker(brok.BrokerKey)\\\">Edit</button>\\r\\n          </td> -->\\r\\n          <!-- <td class=\\\"tbl2\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\"\\r\\n              (click)=\\\"deleteCustomer(cust.CustomerKey)\\\">Delete</button>\\r\\n          </td> -->\\r\\n        </tr>\\r\\n      </table>\\r\\n      \\r\\n <div class=\\\"container text-right\\\"> \\r\\n  <pagination-controls \\r\\n  (pageChange)=\\\"p=$event\\\"\\r\\n  autoHide=\\\"true\\\"\\r\\n  responsive=\\\"true\\\"> </pagination-controls>     \\r\\n</div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"show_addupdateBroker\\\">\\r\\n        <form (ngSubmit)=\\\" f.form.valid && onFormSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n          <div class=\\\"container\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"legno\\\"> <b> Broker detail </b> </label>\\r\\n              <div class=\\\"row\\\" hidden =\\\"true\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-4\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">BrokerKey</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.BrokerKey\\\"\\r\\n                    id=\\\"BrokerKey\\\" name=\\\"BrokerKey\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">Address Key</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.AddrKey\\\" name=\\\"AddrKey\\\">\\r\\n                  </div>  \\r\\n              </div>\\r\\n            <div class=\\\"row\\\">                          \\r\\n              <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\">Broker Id</span>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" required [(ngModel)]=\\\"dataModel.BrokerId\\\"\\r\\n                  #BrokerId=\\\"ngModel\\\" name=\\\"BrokerId\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && BrokerId.invalid }\\\"\\r\\n                  required>\\r\\n                <div *ngIf=\\\"f.submitted && BrokerId.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                  <div *ngIf=\\\"BrokerId.errors.required\\\"> BrokerId is required</div>\\r\\n                </div>\\r\\n              </div>            \\r\\n  \\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\">Name</span>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" required [(ngModel)]=\\\"dataModel.BrokerName\\\"\\r\\n                  id=\\\"BrokerName\\\" name=\\\"BrokerName\\\" #BrokerName=\\\"ngModel\\\"\\r\\n                  [ngClass]=\\\"{ 'is-invalid': f.submitted && BrokerName.invalid }\\\">\\r\\n                <div *ngIf=\\\"f.submitted && BrokerName.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                  <div *ngIf=\\\"BrokerName.errors.required\\\"> Broker name is required</div>\\r\\n                </div>\\r\\n              </div>              \\r\\n            </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"container\\\">\\r\\n            <app-address  [Address]=\\\"dataModel.Address\\\" (AddressOut)=\\\"onOutputAddressChange($event)\\\"> </app-address>\\r\\n            <!-- <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"legno\\\"> <b> Address </b> </label>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Line 1</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" required\\r\\n                    [(ngModel)]=\\\"dataModel.Address.Address1\\\" name=\\\"Address1\\\" #Address1=\\\"ngModel\\\"\\r\\n                    [ngClass]=\\\"{ 'is-invalid': f.submitted && Address1.invalid }\\\">\\r\\n\\r\\n                  <div *ngIf=\\\"f.submitted && Address1.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"Address1.errors.required\\\"> Address1 is required</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Line 2</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" required\\r\\n                    [(ngModel)]=\\\"dataModel.Address.Address2\\\" name=\\\"Address2\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-row col-md-12\\\">\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">City</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" required\\r\\n                      [(ngModel)]=\\\"dataModel.Address.City\\\" name=\\\"City\\\" #City=\\\"ngModel\\\"\\r\\n                      [ngClass]=\\\"{ 'is-invalid': f.submitted && City.invalid }\\\">\\r\\n                    <div *ngIf=\\\"f.submitted && City.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"City.errors.required\\\"> City is required</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-3\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">State</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" required\\r\\n                      [(ngModel)]=\\\"dataModel.Address.State\\\" name=\\\"State\\\" #State=\\\"ngModel\\\"\\r\\n                      [ngClass]=\\\"{ 'is-invalid': f.submitted && State.invalid }\\\">\\r\\n                    <div *ngIf=\\\"f.submitted && State.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"State.errors.required\\\"> State is required</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-3\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">Zip</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" required [(ngModel)]=\\\"dataModel.Address.Zip\\\"\\r\\n                      name=\\\"Zip\\\" (keypress)=\\\"numberOnly($event)\\\" appBlockCopyPaste #Zip=\\\"ngModel\\\"\\r\\n                      [ngClass]=\\\"{ 'is-invalid': f.submitted && Zip.invalid }\\\">\\r\\n                    <div *ngIf=\\\"f.submitted && Zip.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"Zip.errors.required\\\"> Zip is required</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-4\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Country</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.Country\\\"\\r\\n                    name=\\\"Country\\\" #Country=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && Country.invalid }\\\">\\r\\n                  <div *ngIf=\\\"f.submitted && Country.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"Country.errors.required\\\"> Country is required</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-8\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Website</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.Website\\\"\\r\\n                    name=\\\"Website\\\" #Website=\\\"ngModel\\\" appBlockCopyPaste>\\r\\n                 \\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Phone</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.Phone\\\"\\r\\n                    name=\\\"Phone\\\" #Phone=\\\"ngModel\\\" (keypress)=\\\"numberOnly($event)\\\" appBlockCopyPaste>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Fax</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.Fax\\\" name=\\\"Fax\\\"\\r\\n                    #Fax=\\\"ngModel\\\" (keypress)=\\\"numberOnly($event)\\\" appBlockCopyPaste>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">E-mail</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.Email\\\"\\r\\n                    name=\\\"Email\\\" #Email=\\\"ngModel\\\" appBlockCopyPaste>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n            </div> -->\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-6 col-sm-6 col-md-6\\\">\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"col-1 col-sm-1 col-md-1 text-left\\\">\\r\\n                <button type=\\\"reset\\\" *ngIf=\\\"isResetbtnhidden\\\" class=\\\"btn btn-primary btn-sm\\\"\\r\\n                  (click)=\\\"resetForm()\\\">Clear</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-2 col-sm-2 col-md-2 text-right\\\">\\r\\n                <button type=\\\"reset\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-1 col-sm-1 col-md-1 text-left\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\">Submit</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"show_BrokerInfo\\\">\\r\\n        <div class=\\\"container text-right\\\">\\r\\n          <span style=\\\"color:green;\\\" (click)=\\\"bindFormControls()\\\"> <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            <b> edit</b>..</span>\\r\\n        </div>\\r\\n        <div class=\\\"container ml-2\\\">\\r\\n\\r\\n          <h5> {{dataModel.BrokerName}} </h5>\\r\\n          <span class=\\\"text-muted\\\">Id <b>{{dataModel.BrokerId}}</b> </span>\\r\\n          <br><br>\\r\\n\\r\\n          <span class=\\\"text\\\" style=\\\"color: chocolate;\\\"> <b> Address </b></span><br>\\r\\n\\r\\n          <span class=\\\"text-muted\\\">Line 1 :<b> {{dataModel.Address.Address1}}</b> </span><br>\\r\\n          <span class=\\\"text-muted\\\">Line 2 :<b> {{dataModel.Address.Address2}}</b> </span> <br>\\r\\n          <span class=\\\"text-muted\\\">City :<b> {{dataModel.Address.City}} </b></span> <br>\\r\\n          <span class=\\\"text-muted\\\">State :<b> {{dataModel.Address.State}} </b></span> <br>\\r\\n          <span class=\\\"text-muted\\\">Zip :<b> {{dataModel.Address.Zip}} </b></span> <br>\\r\\n          <span class=\\\"text-muted\\\">Country: <b> {{dataModel.Address.Country}} </b></span> <br><br>\\r\\n          <span class=\\\"text-muted\\\">Website <b> {{dataModel.Address.Website}} </b></span> <br><br>\\r\\n          <span class=\\\"text-muted\\\">Email </span><br>\\r\\n          <span><b> {{dataModel.Address.Email}} </b></span> <br><br>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n              <span class=\\\"text-muted\\\">Fax </span><br>\\r\\n              <span><b> {{dataModel.Address.Fax}} </b></span>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n              <span class=\\\"text-muted\\\">Mobile </span><br>\\r\\n              <span><b> {{dataModel.Address.Phone}} </b></span>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<br>\\r\\n<div id=\\\"accordion\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-8 col-sm-8 col-md-8\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-6 col-sm-6 col-md-6\\\">\\r\\n          <h5 class=\\\"card-subtitle mb-2\\\" >\\r\\n           Carriers</h5>\\r\\n        </div>\\r\\n        <div class=\\\"col-6 col-sm-6 col-md-6\\\">\\r\\n          <div class=\\\"container text-right\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-11 col-sm-11 col-md-11\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm\\\">\\r\\n                  <div class=\\\"img-group-prepend\\\">\\r\\n                    <img src=\\\"assets/img/brand/search16px.png\\\" /> &nbsp;\\r\\n                  </div>\\r\\n                  <input [(ngModel)]=\\\"searchText\\\" class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" style=\\\"border-radius: 1rem;\\\"\\r\\n                    placeholder=\\\"Search..\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-1 col-sm-1 col-md-1\\\">\\r\\n                <img src=\\\"assets/img/brand/broom16px.png\\\" (click)=\\\"clear_search()\\\" tooltip=\\\"clear\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-4 col-sm-4 col-md-4 text-right\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\" (click)=\\\"toggle()\\\" *ngIf=\\\"show_btnCreateCarrier\\\">Create New\\r\\n        Carrier</button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-8 col-md-8 col-lg-8 border-right\\\">\\r\\n      <table class=\\\"table table-sm\\\">\\r\\n        <tr ngclass=\\\"btn-primary\\\">\\r\\n          <th hidden=\\\"true\\\">Carrier Key</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"pointer\\\"  (click)=\\\"sort('CarrierName')\\\" >ID \\r\\n            &nbsp;<i class=\\\"fa fa-sort\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </th>\\r\\n          <th scope=\\\"col\\\" class=\\\"pointer\\\"  (click)=\\\"sort('CarrierId')\\\" >Name \\r\\n            &nbsp;<i class=\\\"fa fa-sort\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </th>\\r\\n          <th scope=\\\"col\\\" class=\\\"pointer\\\"  (click)=\\\"sort('ScacCode')\\\" >ScacCode \\r\\n            &nbsp;<i class=\\\"fa fa-sort\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </th>\\r\\n          <!-- <th>LicensePlate</th>\\r\\n          <th>LicensePlateExpiryDate</th> -->\\r\\n        </tr>\\r\\n        <tr *ngFor=\\\"let car of carriers | grdFilter: {CarrierName: searchText,ScacCode: searchText, CarrierId: searchText} \\r\\n        |paginate:{itemsPerPage:10,currentPage:p,totalItems: count}\\r\\n        \\\">\\r\\n          <td hidden=\\\"true\\\">{{car.CarrierKey}}</td>\\r\\n          <td>{{car.CarrierId}}</td>         \\r\\n          <td> <a [routerLink]=\\\"\\\" (click)=\\\"EditCarrier(car.CarrierKey)\\\">{{car.CarrierName}}</a> </td>\\r\\n          <td>{{car.ScacCode}}</td>\\r\\n          <!-- <td>{{car.LicensePlate}}</td>\\r\\n          <td>{{car.LicensePlateExpiryDate|date}}</td> -->\\r\\n          <!-- <td class=\\\"tbl2\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\" (click)=\\\"EditCarrier(car.CarrierKey)\\\">Edit</button>\\r\\n          </td> -->\\r\\n        </tr>\\r\\n      </table>\\r\\n      \\r\\n <div class=\\\"container text-right\\\"> \\r\\n  <pagination-controls \\r\\n  (pageChange)=\\\"p=$event\\\"\\r\\n  autoHide=\\\"true\\\"\\r\\n  responsive=\\\"true\\\"> </pagination-controls>     \\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"show_addupdateCarrier\\\">\\r\\n        <form (ngSubmit)=\\\" f.form.valid && onFormSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n          <div class=\\\"container\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"legno\\\"> <b> Carrier detail </b> </label>\\r\\n              <div class=\\\"row\\\" hidden=\\\"true\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-4\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">CarrierKey</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.CarrierKey\\\"\\r\\n                    id=\\\"CarrierKey\\\" name=\\\"CarrierKey\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Address Key</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.AddrKey\\\"\\r\\n                    name=\\\"AddrKey\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Broker Id</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" required [(ngModel)]=\\\"dataModel.CarrierId\\\"\\r\\n                    #CarrierId=\\\"ngModel\\\" name=\\\"CarrierId\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && CarrierId.invalid }\\\"\\r\\n                    required>\\r\\n                  <div *ngIf=\\\"f.submitted && CarrierId.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"CarrierId.errors.required\\\"> CarrierId is required</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Name</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" required [(ngModel)]=\\\"dataModel.CarrierName\\\"\\r\\n                    id=\\\"CarrierName\\\" name=\\\"CarrierName\\\" #CarrierName=\\\"ngModel\\\"\\r\\n                    [ngClass]=\\\"{ 'is-invalid': f.submitted && CarrierName.invalid }\\\">\\r\\n                  <div *ngIf=\\\"f.submitted && CarrierName.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"CarrierName.errors.required\\\"> Carrier name is required</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Scac Code</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" required [(ngModel)]=\\\"dataModel.ScacCode\\\"\\r\\n                    id=\\\"ScacCode\\\" name=\\\"ScacCode\\\" #ScacCode=\\\"ngModel\\\"\\r\\n                    [ngClass]=\\\"{ 'is-invalid': f.submitted && ScacCode.invalid }\\\">\\r\\n                  <div *ngIf=\\\"f.submitted && ScacCode.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"ScacCode.errors.required\\\"> Scac Code is required</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"container\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"legno\\\"> <b> Address </b> </label>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Line 1</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" required\\r\\n                    [(ngModel)]=\\\"dataModel.Address.Address1\\\" name=\\\"Address1\\\" #Address1=\\\"ngModel\\\"\\r\\n                    [ngClass]=\\\"{ 'is-invalid': f.submitted && Address1.invalid }\\\">\\r\\n\\r\\n                  <div *ngIf=\\\"f.submitted && Address1.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"Address1.errors.required\\\"> Address1 is required</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Line 2</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" required\\r\\n                    [(ngModel)]=\\\"dataModel.Address.Address2\\\" name=\\\"Address2\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-row col-md-12\\\">\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">City</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" required\\r\\n                      [(ngModel)]=\\\"dataModel.Address.City\\\" name=\\\"City\\\" #City=\\\"ngModel\\\"\\r\\n                      [ngClass]=\\\"{ 'is-invalid': f.submitted && City.invalid }\\\">\\r\\n                    <div *ngIf=\\\"f.submitted && City.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"City.errors.required\\\"> City is required</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-3\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">State</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" required\\r\\n                      [(ngModel)]=\\\"dataModel.Address.State\\\" name=\\\"State\\\" #State=\\\"ngModel\\\"\\r\\n                      [ngClass]=\\\"{ 'is-invalid': f.submitted && State.invalid }\\\">\\r\\n                    <div *ngIf=\\\"f.submitted && State.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"State.errors.required\\\"> State is required</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-3\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">Zip</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" required [(ngModel)]=\\\"dataModel.Address.Zip\\\"\\r\\n                      name=\\\"Zip\\\" (keypress)=\\\"numberOnly($event)\\\" appBlockCopyPaste #Zip=\\\"ngModel\\\"\\r\\n                      [ngClass]=\\\"{ 'is-invalid': f.submitted && Zip.invalid }\\\">\\r\\n                    <div *ngIf=\\\"f.submitted && Zip.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"Zip.errors.required\\\"> Zip is required</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-4\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Country</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.Country\\\"\\r\\n                    name=\\\"Country\\\" #Country=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && Country.invalid }\\\">\\r\\n                  <div *ngIf=\\\"f.submitted && Country.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"Country.errors.required\\\"> Country is required</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-8\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Website</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.Website\\\"\\r\\n                    name=\\\"Website\\\" #Website=\\\"ngModel\\\" appBlockCopyPaste>\\r\\n                  <!-- <div *ngIf=\\\"submitted && f.Address['controls'].website.errors\\\" class=\\\"invalid-feedback\\\">                   \\r\\n                              <div *ngIf=\\\"customerForm.controls.website.errors.pattern\\\">website is not valid</div>                       \\r\\n                            </div> -->\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Phone</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.Phone\\\"\\r\\n                    name=\\\"Phone\\\" #Phone=\\\"ngModel\\\" (keypress)=\\\"numberOnly($event)\\\" appBlockCopyPaste>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Fax</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.Fax\\\" name=\\\"Fax\\\"\\r\\n                    #Fax=\\\"ngModel\\\" (keypress)=\\\"numberOnly($event)\\\" appBlockCopyPaste>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">E-mail</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.Email\\\"\\r\\n                    name=\\\"Email\\\" #Email=\\\"ngModel\\\" appBlockCopyPaste>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-6 col-sm-6 col-md-6\\\">\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"col-1 col-sm-1 col-md-1 text-left\\\">\\r\\n                <button type=\\\"reset\\\" *ngIf=\\\"isResetbtnhidden\\\" class=\\\"btn btn-primary btn-sm\\\"\\r\\n                  (click)=\\\"resetForm()\\\">Clear</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-2 col-sm-2 col-md-2 text-right\\\">\\r\\n                <button type=\\\"reset\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-1 col-sm-1 col-md-1 text-left\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\">Submit</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"show_CarrierInfo\\\">\\r\\n        <div class=\\\"container text-right\\\">\\r\\n          <span style=\\\"color:green;\\\" (click)=\\\"bindFormControls()\\\"> <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            <b> edit</b>..</span>\\r\\n        </div>\\r\\n        <div class=\\\"container ml-2\\\">\\r\\n\\r\\n          <h5> {{dataModel.CarrierName}} </h5>\\r\\n\\r\\n          <span class=\\\"text-muted\\\">Id <b>{{dataModel.CarrierId}}</b> </span><br>\\r\\n          <span class=\\\"text-muted\\\">SCAC Code </span> <br>\\r\\n          <span><b> {{dataModel.ScacCode}} </b>\\r\\n          </span>\\r\\n          <br><br>\\r\\n\\r\\n          <span class=\\\"text\\\" style=\\\"color: chocolate;\\\"> <b> Address </b></span><br>\\r\\n\\r\\n          <span class=\\\"text-muted\\\">Line 1 :<b> {{dataModel.Address.Address1}}</b> </span><br>\\r\\n          <span class=\\\"text-muted\\\">Line 2 :<b> {{dataModel.Address.Address2}}</b> </span> <br>\\r\\n          <span class=\\\"text-muted\\\">City :<b> {{dataModel.Address.City}} </b></span> <br>\\r\\n          <span class=\\\"text-muted\\\">State :<b> {{dataModel.Address.State}} </b></span> <br>\\r\\n          <span class=\\\"text-muted\\\">Zip :<b> {{dataModel.Address.Zip}} </b></span> <br>\\r\\n          <span class=\\\"text-muted\\\">Country: <b> {{dataModel.Address.Country}} </b></span> <br><br>\\r\\n          <span class=\\\"text-muted\\\">Website <b> {{dataModel.Address.Website}} </b></span> <br><br>\\r\\n          <span class=\\\"text-muted\\\">Email </span><br>\\r\\n          <span><b> {{dataModel.Address.Email}} </b></span> <br><br>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n              <span class=\\\"text-muted\\\">Fax </span><br>\\r\\n              <span><b> {{dataModel.Address.Fax}} </b></span>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n              <span class=\\\"text-muted\\\">Mobile </span><br>\\r\\n              <span><b> {{dataModel.Address.Phone}} </b></span>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<br>\\r\\n<div id=\\\"jumbotron\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-8 col-sm-8 col-md-8\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-6 col-sm-6 col-md-6\\\">\\r\\n          <h5 class=\\\"card-subtitle mb-2\\\" >\\r\\n           Cities</h5>\\r\\n        </div>\\r\\n        <div class=\\\"col-6 col-sm-6 col-md-6\\\">\\r\\n          <div class=\\\"container text-right\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-11 col-sm-11 col-md-11\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm\\\">\\r\\n                  <div class=\\\"img-group-prepend\\\">\\r\\n                    <img src=\\\"assets/img/brand/search16px.png\\\" /> &nbsp;\\r\\n                  </div>\\r\\n                  <input [(ngModel)]=\\\"searchText\\\" class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"\\r\\n                    placeholder=\\\"Search..\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-1 col-sm-1 col-md-1\\\">\\r\\n                <img src=\\\"assets/img/brand/broom16px.png\\\" (click)=\\\"clear_search()\\\" tooltip=\\\"clear\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-4 col-sm-4 col-md-4 text-right\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\" (click)=\\\"toggle()\\\" *ngIf=\\\"show_btnAdd\\\">Create New\\r\\n        City</button>\\r\\n      <h5 for=\\\"new\\\" *ngIf=\\\"show_lblAdd\\\"> Add City </h5>\\r\\n      <h5 for=\\\"edit\\\" *ngIf=\\\"show_lblEdit\\\"> Edit City </h5>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-8 col-md-8 col-lg-8 ScrollStyle\\\">\\r\\n      <table class=\\\"table table-sm\\\">\\r\\n        <tr ngclass=\\\"btn-primary\\\">\\r\\n          <th hidden=\\\"true\\\">itemkey</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"pointer\\\"  (click)=\\\"sort('cityid')\\\" >ID &nbsp;<i class=\\\"fa fa-sort\\\" aria-hidden=\\\"true\\\"></i>\\r\\n          </th>\\r\\n          <th scope=\\\"col\\\" class=\\\"pointer\\\"  (click)=\\\"sort('cityname')\\\" >City &nbsp;<i class=\\\"fa fa-sort\\\" aria-hidden=\\\"true\\\"></i>\\r\\n          </th>\\r\\n\\r\\n        </tr>\\r\\n        <tr *ngFor=\\\"let city of citylist | grdFilter: {cityid: searchText,cityname: searchText}\\r\\n        |paginate:{itemsPerPage:15,currentPage:p,totalItems: count}\\\">\\r\\n          <td hidden=\\\"true\\\">{{city.citykey}}</td>\\r\\n          <td> <a [routerLink]=\\\"\\\" (click)=\\\"getcityById(city.citykey)\\\">{{city.cityid}}</a> </td>\\r\\n          <td>{{city.cityname}}</td>\\r\\n        </tr>\\r\\n      </table>\\r\\n      <div class=\\\"container text-right\\\"> \\r\\n        <pagination-controls \\r\\n        (pageChange)=\\\"p=$event\\\"\\r\\n        autoHide=\\\"true\\\"\\r\\n        responsive=\\\"true\\\"> </pagination-controls>     \\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"show_DivAddUpdate\\\">\\r\\n        <div class=\\\"container bg-dark\\\" >\\r\\n          <form name=\\\"form\\\" (ngSubmit)=\\\" f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n            <div class=\\\"container bg-dark\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <br>\\r\\n                <label for=\\\"user\\\"> <b> City Detail </b> </label>\\r\\n                <div class=\\\"row\\\" hidden=\\\"true\\\">\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-4\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">citykey</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.citykey\\\" id=\\\"citykey\\\"\\r\\n                      name=\\\"citykey\\\" #citykey=\\\"ngModel\\\">\\r\\n                  </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">Id</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"cityid\\\" [(ngModel)]=\\\"dataModel.cityid\\\"\\r\\n                      #cityid=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && cityid.invalid }\\\" required\\r\\n                      minlength=\\\"2\\\" />\\r\\n\\r\\n                    <div *ngIf=\\\"f.submitted && cityid.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"cityid.errors.required\\\"> Id is required</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">City</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.cityname\\\"\\r\\n                      id=\\\"cityname\\\" name=\\\"cityname\\\" #cityname=\\\"ngModel\\\"\\r\\n                      [ngClass]=\\\"{ 'is-invalid': f.submitted && cityname.invalid }\\\" required>\\r\\n                    <div *ngIf=\\\"f.submitted && cityname.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"cityname.errors.required\\\"> city is required</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-6 col-sm-6 col-md-6\\\">\\r\\n\\r\\n                  </div>\\r\\n                  <div class=\\\"col-1 col-sm-1 col-md-1 text-left\\\">\\r\\n                    <!-- <button type=\\\"reset\\\" *ngIf=\\\"isResetbtnhidden\\\" class=\\\"btn btn-primary btn-sm\\\"\\r\\n                      (click)=\\\"resetForm()\\\">Clear</button> -->\\r\\n                  </div>\\r\\n                  <div class=\\\"col-2 col-sm-2 col-md-2 text-right\\\">\\r\\n                    <button type=\\\"reset\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-1 col-sm-1 col-md-1 text-right\\\">\\r\\n                    <button class=\\\"btn btn-primary btn-sm\\\">Submit</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"show_DivInfo\\\">\\r\\n        <div class=\\\"container text-right\\\">\\r\\n          <span style=\\\"color:green;\\\" (click)=\\\"bindFormControls()\\\"> <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            <b> edit</b>..</span>\\r\\n        </div>\\r\\n        <div class=\\\"container ml-2\\\">\\r\\n\\r\\n          <h5> {{dataModel.cityid}} </h5>\\r\\n\\r\\n          <span class=\\\"text-muted\\\">cityname </span> <br>\\r\\n          <span><b> {{dataModel.cityname}} </b></span> <br>\\r\\n\\r\\n          <br><br>\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<div id=\\\"accordion\\\">\\r\\n  <br>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-8 col-sm-8 col-md-8\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-6 col-sm-6 col-md-6\\\">\\r\\n          <h5 class=\\\"card-subtitle mb-2\\\">\\r\\n          Companies</h5>\\r\\n        </div>\\r\\n        <div class=\\\"col-4 col-sm-4 col-md-4\\\">\\r\\n          <div class=\\\"container text-right\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-11 col-sm-11 col-md-11\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm\\\">\\r\\n                  <div class=\\\"img-group-prepend\\\">\\r\\n                    <img src=\\\"assets/img/brand/search16px.png\\\" /> &nbsp;\\r\\n                  </div>\\r\\n                  <input [(ngModel)]=\\\"searchText\\\" class=\\\"form-control form-control-sm\\\" style=\\\"border-radius: 1rem;\\\"\\r\\n                    type=\\\"text\\\" placeholder=\\\"Search..\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- <div class=\\\"col-1 col-sm-1 col-md-1\\\">\\r\\n                <img src=\\\"assets/img/brand/broom16px.png\\\" (click)=\\\"clear_search()\\\" tooltip=\\\"clear\\\" />\\r\\n              </div> -->\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-4 col-sm-4 col-md-4 text-right\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\" (click)=\\\"clear()\\\" *ngIf=\\\"show_btnCreateCompany\\\">Create New\\r\\n        Company</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-7 col-md-7 col-lg-7  scrollbar\\\" id=\\\"style-10\\\">\\r\\n      <table class=\\\"table table-sm\\\">\\r\\n        <tr ngclass=\\\"btn-primary\\\">\\r\\n          <th hidden=\\\"true\\\">compkey</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"pointer\\\"  (click)=\\\"sort('compname')\\\" >ID &nbsp;<i class=\\\"fa fa-sort\\\" aria-hidden=\\\"true\\\"></i></th>\\r\\n          <th scope=\\\"col\\\" class=\\\"pointer\\\"  (click)=\\\"sort('compid')\\\" >Company &nbsp;<i class=\\\"fa fa-sort\\\" aria-hidden=\\\"true\\\"></i></th>         \\r\\n        </tr>\\r\\n        <tr *ngFor=\\\"let comp of companies | grdFilter: {compname: searchText,compid: searchText}|paginate:{itemsPerPage:20,currentPage:p,totalItems: count}\\r\\n        \\\">\\r\\n          <td hidden=\\\"true\\\">{{comp.compkey}}</td>\\r\\n          <td>{{comp.compid}}</td>\\r\\n          <td> <a [routerLink]=\\\"\\\" (click)=\\\"getCompanydataToEdit(comp.compkey)\\\">\\r\\n              {{comp.compname}}</a>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n      \\r\\n <div class=\\\"container text-right\\\"> \\r\\n  <pagination-controls \\r\\n  (pageChange)=\\\"p=$event\\\"\\r\\n  autoHide=\\\"true\\\"\\r\\n  responsive=\\\"true\\\"> </pagination-controls>     \\r\\n</div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-sm-5 col-md-5 col-lg-5\\\">\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"show_addupdateCompany\\\">\\r\\n        <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n          <form (ngSubmit)=\\\" f.form.valid && onFormSubmit()\\\" #f=\\\"ngForm\\\">\\r\\n            <div class=\\\"container\\\">\\r\\n              <div class=\\\"row\\\" hidden=\\\"true\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-4\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">compkey</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"company.compkey\\\"\\r\\n                    name=\\\"compkey\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"card text-white bg-dark\\\">\\r\\n                <div class=\\\"card-header\\\" style=\\\"height: 50px;\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\"> <label> <b> Company </b> </label> </div>\\r\\n\\r\\n                    <div class=\\\"col-sm-6 col-md-6 col-lg-6 text-right\\\">\\r\\n                      <button type=\\\"reset\\\" class=\\\"btn btn-info btn-sm\\\" (click)=\\\"cancel()\\\">Cancel</button> &nbsp;&nbsp;\\r\\n                      <button type=\\\"submit\\\" class=\\\"btn btn-info btn-sm\\\">Submit</button>\\r\\n                    </div>\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group input-group input-group-sm col-md-8\\\">\\r\\n                      <div class=\\\"input-group-prepend\\\">\\r\\n                        <span class=\\\"input-group-text\\\">Id</span>\\r\\n                      </div>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"company.compid\\\"\\r\\n                        name=\\\"compid\\\" #compid=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && compid.invalid }\\\"\\r\\n                        required maxlength=\\\"20\\\">\\r\\n\\r\\n                      <div *ngIf=\\\"f.submitted && compid.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"compid.errors.required\\\">Id is required</div>\\r\\n                      </div>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                     \\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n                      <div class=\\\"input-group-prepend\\\">\\r\\n                        <span class=\\\"input-group-text\\\">Company</span>\\r\\n                      </div>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"company.compname\\\"\\r\\n                        name=\\\"compname\\\" #compname=\\\"ngModel\\\"\\r\\n                        [ngClass]=\\\"{ 'is-invalid': f.submitted && compname.invalid }\\\" required>\\r\\n                      <div *ngIf=\\\"f.submitted && compname.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"compname.errors.required\\\">Company is required</div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <app-address  [Address]=\\\"company.Address\\\" (AddressOut)=\\\"onOutputAddressChange($event)\\\"> </app-address>\\r\\n                  <!-- <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"legno\\\"> <b> Address </b> </label>\\r\\n                    <div class=\\\"row\\\" hidden=\\\"true\\\">\\r\\n                      <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                        <div class=\\\"input-group-prepend\\\">\\r\\n                          <span class=\\\"input-group-text\\\">Address Key</span>\\r\\n                        </div>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"company.Address.AddrKey\\\"\\r\\n                          name=\\\"AddrKey\\\">\\r\\n                      </div>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n                        <div class=\\\"input-group-prepend\\\">\\r\\n                          <span class=\\\"input-group-text\\\">Line 1</span>\\r\\n                        </div>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"company.Address.Address1\\\"\\r\\n                          name=\\\"Address1\\\" #Address1=\\\"ngModel\\\"\\r\\n                          [ngClass]=\\\"{ 'is-invalid': f.submitted && Address1.invalid }\\\" required>\\r\\n                        <div *ngIf=\\\"f.submitted && Address1.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"Address1.errors.required\\\">Address line is required</div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n                        <div class=\\\"input-group-prepend\\\">\\r\\n                          <span class=\\\"input-group-text\\\">Line 2</span>\\r\\n                        </div>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"company.Address.Address2\\\"\\r\\n                          name=\\\"Address2\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"form-group input-group input-group-sm col-md-5\\\">\\r\\n                        <div class=\\\"input-group-prepend\\\">\\r\\n                          <span class=\\\"input-group-text\\\">City</span>\\r\\n                        </div>\\r\\n                      \\r\\n                        <select id=\\\"drpSource\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"company.Address.City\\\"\\r\\n                          name=\\\"City\\\" #City=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && City.invalid }\\\">\\r\\n                          <option *ngFor=\\\"let city of citylist\\\" [value]=\\\"city.citykey\\\">\\r\\n                            {{city.cityname}}\\r\\n                          </option>\\r\\n                        </select>\\r\\n                        <div *ngIf=\\\"f.submitted && City.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"City.errors.required\\\">City is required</div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group input-group input-group-sm col-md-4\\\">\\r\\n                        <div class=\\\"input-group-prepend\\\">\\r\\n                          <span class=\\\"input-group-text\\\">State</span>\\r\\n                        </div>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"company.Address.State\\\"\\r\\n                          name=\\\"State\\\" #State=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && State.invalid }\\\"\\r\\n                          required>\\r\\n                        <div *ngIf=\\\"f.submitted && State.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"State.errors.required\\\">State is required</div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group input-group input-group-sm col-md-3\\\">\\r\\n                        <div class=\\\"input-group-prepend\\\">\\r\\n                          <span class=\\\"input-group-text\\\">Zip</span>\\r\\n                        </div>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"company.Address.Zip\\\"\\r\\n                          name=\\\"Zip\\\" #Zip=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && Zip.invalid }\\\" required\\r\\n                          (keypress)=\\\"numberOnly($event)\\\" appBlockCopyPaste>\\r\\n                        <div *ngIf=\\\"f.submitted && Zip.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"Zip.errors.required\\\">Zip is required</div>                          \\r\\n                          <div *ngIf=\\\"Zip.errors.minLength\\\">minlength is required</div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"form-group input-group input-group-sm col-md-4\\\">\\r\\n                        <div class=\\\"input-group-prepend\\\">\\r\\n                          <span class=\\\"input-group-text\\\">Country</span>\\r\\n                        </div>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"company.Address.Country\\\"\\r\\n                          name=\\\"Country\\\" #CustId=\\\"ngModel\\\">\\r\\n\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group input-group input-group-sm col-md-8\\\">\\r\\n                        <div class=\\\"input-group-prepend\\\">\\r\\n                          <span class=\\\"input-group-text\\\">Website</span>\\r\\n                        </div>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"company.Address.Website\\\"\\r\\n                          name=\\\"Website\\\" appBlockCopyPaste>                       \\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                        <div class=\\\"input-group-prepend\\\">\\r\\n                          <span class=\\\"input-group-text\\\">Primary Phone</span>\\r\\n                        </div>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"company.Address.Phone\\\"\\r\\n                          name=\\\"Phone\\\" #Phone=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && Phone.invalid }\\\"\\r\\n                          required (keypress)=\\\"numberOnly($event)\\\" appBlockCopyPaste minLength=10 maxLength=10>\\r\\n                        <div *ngIf=\\\"f.submitted && Phone.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"Phone.errors.required\\\">Phone is required</div>\\r\\n                          <div *ngIf=\\\"Phone.errors.minLength\\\">minlength is required</div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                        <div class=\\\"input-group-prepend\\\">\\r\\n                          <span class=\\\"input-group-text\\\">Secondary Phone</span>\\r\\n                        </div>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"company.Address.Phone2\\\"\\r\\n                          name=\\\"Phone2\\\" (keypress)=\\\"numberOnly($event)\\\" appBlockCopyPaste>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n\\r\\n                      <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                        <div class=\\\"input-group-prepend\\\">\\r\\n                          <span class=\\\"input-group-text\\\">Fax</span>\\r\\n                        </div>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"company.Address.Fax\\\"\\r\\n                          name=\\\"Fax\\\" (keypress)=\\\"numberOnly($event)\\\" appBlockCopyPaste>\\r\\n\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n                        <div class=\\\"input-group-prepend\\\">\\r\\n                          <span class=\\\"input-group-text\\\">Primary E-mail</span>\\r\\n                        </div>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"company.Address.Email\\\"\\r\\n                          name=\\\"Email\\\" appBlockCopyPaste>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n                        <div class=\\\"input-group-prepend\\\">\\r\\n                          <span class=\\\"input-group-text\\\">Secondary E-mail</span>\\r\\n                        </div>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"company.Address.Email2\\\"\\r\\n                          name=\\\"Email2\\\" appBlockCopyPaste>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div> -->\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"show_companyInfo\\\">\\r\\n        <div class=\\\"container text-right\\\">\\r\\n          <span style=\\\"color:chocolate;\\\" (click)=\\\"edit_click()\\\"> <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            <b> edit</b>..</span>\\r\\n        </div>\\r\\n        <div class=\\\"container ml-2\\\">\\r\\n          <h5> {{selectedCompany.compname}}</h5>\\r\\n\\r\\n          <span class=\\\"text-muted\\\">ID:- <b>{{selectedCompany.compid}}</b> </span>\\r\\n          <hr style=\\\"background-color:lightslategray;\\\">          \\r\\n          <br><br>\\r\\n          <span class=\\\"text\\\" style=\\\"color:cornflowerblue;\\\">\\r\\n            <h5> <u>Address</u> </h5>\\r\\n          </span>\\r\\n          <span class=\\\"text-muted\\\">Line 1 :<b> {{selectedCompany.Address.Address1}}</b> </span><br>\\r\\n          <span class=\\\"text-muted\\\">Line 2 :<b> {{selectedCompany.Address.Address2}}</b> </span> <br>\\r\\n          <span class=\\\"text-muted\\\">City :<b> {{selectedCompany.Address.City}} </b></span> <br>\\r\\n          <span class=\\\"text-muted\\\">State :<b> {{selectedCompany.Address.State}} </b></span> <br>\\r\\n          <span class=\\\"text-muted\\\">Zip :<b> {{selectedCompany.Address.Zip}} </b></span> <br>\\r\\n          <span class=\\\"text-muted\\\">Country: <b> {{selectedCompany.Address.Country}} </b></span> <br><br>\\r\\n          <span class=\\\"text-muted\\\">Website <b> {{selectedCompany.Address.Website}} </b></span> <br><br>\\r\\n          <span class=\\\"text-muted\\\">Email (Primary) </span><br>\\r\\n          <span><b> {{selectedCompany.Address.Email}} </b></span> <br><br>\\r\\n          <span class=\\\"text-muted\\\">Email (Secondary) </span><br>\\r\\n          <span><b> {{selectedCompany.Address.Email2}} </b></span> <br><br>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n              <span class=\\\"text-muted\\\">Fax </span><br>\\r\\n              <span><b> {{selectedCompany.Address.Fax}} </b></span>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n              <span class=\\\"text-muted\\\">Mobile (Primary) </span><br>\\r\\n              <span><b> {{selectedCompany.Address.Phone}} </b></span>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n              <span class=\\\"text-muted\\\">Mobile (Secondary) </span><br>\\r\\n              <span><b> {{selectedCompany.Address.Phone2}} </b></span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <br>\\r\\n</div>\"","export default \"<br>\\r\\n<div id=\\\"accordion\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-8 col-sm-8 col-md-8\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-6 col-sm-6 col-md-6\\\">\\r\\n          <h5 class=\\\"card-subtitle mb-2\\\">\\r\\n            Drivers</h5>\\r\\n        </div>\\r\\n        <div class=\\\"col-6 col-sm-6 col-md-6\\\">\\r\\n          <div class=\\\"container text-right\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-11 col-sm-11 col-md-11\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm\\\">\\r\\n                  <div class=\\\"img-group-prepend\\\">\\r\\n                    <img src=\\\"assets/img/brand/search16px.png\\\" /> &nbsp;\\r\\n                  </div>\\r\\n                  <input [(ngModel)]=\\\"searchText\\\" class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"\\r\\n                    style=\\\"border-radius: 1rem;\\\" placeholder=\\\"Search..\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- <div class=\\\"col-1 col-sm-1 col-md-1\\\">\\r\\n                <img src=\\\"assets/img/brand/broom16px.png\\\" (click)=\\\"clear_search()\\\" tooltip=\\\"clear\\\" />\\r\\n              </div> -->\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-4 col-sm-4 col-md-4 text-right\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\" (click)=\\\"toggle()\\\" *ngIf=\\\"show_btnCreatedriver\\\">Create New\\r\\n        Driver</button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-8 col-md-8 col-lg-8 border-right\\\">\\r\\n      <table class=\\\"table table-sm\\\">\\r\\n        <tr ngclass=\\\"btn-primary\\\">\\r\\n          <th hidden=\\\"true\\\">Driverkey</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"pointer\\\" (click)=\\\"sort('DriverId')\\\">ID &nbsp;<i class=\\\"fa fa-sort\\\"\\r\\n              aria-hidden=\\\"true\\\"></i>\\r\\n          </th>\\r\\n          <th scope=\\\"col\\\" class=\\\"pointer\\\" (click)=\\\"sort('FirstName')\\\">First Name &nbsp;<i class=\\\"fa fa-sort\\\"\\r\\n              aria-hidden=\\\"true\\\"></i>\\r\\n          </th>\\r\\n          <th scope=\\\"col\\\" class=\\\"pointer\\\" (click)=\\\"sort('LastName')\\\">Last Name &nbsp;<i class=\\\"fa fa-sort\\\"\\r\\n              aria-hidden=\\\"true\\\"></i>\\r\\n          </th>\\r\\n          <th scope=\\\"col\\\" class=\\\"pointer\\\" (click)=\\\"sort('DriversLicenseNo')\\\">License No &nbsp;<i class=\\\"fa fa-sort\\\"\\r\\n              aria-hidden=\\\"true\\\"></i>\\r\\n          </th>\\r\\n          <th scope=\\\"col\\\" class=\\\"pointer\\\" (click)=\\\"sort('LicenseExpiryDate')\\\">License Expiry Date &nbsp;<i\\r\\n              class=\\\"fa fa-sort\\\" aria-hidden=\\\"true\\\"></i>\\r\\n          </th>\\r\\n        </tr>\\r\\n        <tr *ngFor=\\\"let driv of drivers | grdFilter: {DriverId: searchText,FirstName: searchText, LastName: searchText,\\r\\n          DriversLicenseNo: searchText, LicenseExpiryDate: searchText}|paginate:{itemsPerPage:10,currentPage:p,totalItems: count}\\r\\n          \\\">\\r\\n          <td hidden=\\\"true\\\">{{driv.DriverKey}}</td>\\r\\n          <td>{{driv.DriverId}}</td>\\r\\n          <td> <a [routerLink]=\\\"\\\" (click)=\\\"loadCustomerToEdit(driv.DriverKey)\\\">\\r\\n              {{driv.FirstName}}</a> </td>\\r\\n          <td>{{driv.LastName}}</td>\\r\\n          <td>{{driv.DriversLicenseNo}}</td>\\r\\n          <td>{{driv.LicenseExpiryDate|date}} </td>        \\r\\n        </tr>\\r\\n      </table>\\r\\n      <div class=\\\"container text-right\\\">\\r\\n        <pagination-controls (pageChange)=\\\"p=$event\\\" autoHide=\\\"true\\\" responsive=\\\"true\\\"> </pagination-controls>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"show_addupdatedriver\\\">\\r\\n        <form (ngSubmit)=\\\" f.form.valid && onFormSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n          <div class=\\\"container\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"legno\\\"> <b> Driver detail </b> </label>\\r\\n              <div class=\\\"row\\\" hidden=\\\"true\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-4\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">DriverKey</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"driverModel.DriverKey\\\"\\r\\n                    id=\\\"DriverKey\\\" name=\\\"DriverKey\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Address Key</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"driverModel.Address.AddrKey\\\"\\r\\n                    name=\\\"AddrKey\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Id</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" required [(ngModel)]=\\\"driverModel.DriverId\\\"\\r\\n                    #DriverId=\\\"ngModel\\\" name=\\\"DriverId\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && DriverId.invalid }\\\"\\r\\n                    required autofocus minlength=\\\"6\\\">\\r\\n                  <div *ngIf=\\\"f.submitted && DriverId.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"DriverId.errors.required\\\"> DriverId is required</div>\\r\\n                    <div *ngIf=\\\"DriverId.errors.minlength\\\"> ID must be at least 6 characters</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">First Name</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" required [(ngModel)]=\\\"driverModel.FirstName\\\"\\r\\n                    id=\\\"FirstName\\\" name=\\\"FirstName\\\" #FirstName=\\\"ngModel\\\"\\r\\n                    [ngClass]=\\\"{ 'is-invalid': f.submitted && FirstName.invalid }\\\">\\r\\n                  <div *ngIf=\\\"f.submitted && FirstName.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"FirstName.errors.required\\\"> FirstName is required</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Last Name</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" required [(ngModel)]=\\\"driverModel.LastName\\\"\\r\\n                    name=\\\"LastName\\\">\\r\\n                  <div *ngIf=\\\"f.submitted && FirstName.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"FirstName.errors.required\\\"> FirstName is required</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">License No</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"driverModel.DriversLicenseNo\\\"\\r\\n                    name=\\\"DriversLicenseNo\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Expiry Date</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [owlDateTimeTrigger]=\\\"dtactualdeparture\\\"\\r\\n                    [owlDateTime]=\\\"dtactualdeparture\\\" [(ngModel)]=\\\"driverModel.LicenseExpiryDate\\\"\\r\\n                    name=\\\"LicenseExpiryDate\\\">\\r\\n                  <owl-date-time [pickerType]=\\\"'calendar'\\\" #dtactualdeparture [hour12Timer]=\\\"false\\\"></owl-date-time>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"container\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"legno\\\"> <b> Address </b> </label>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Line 1</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" required\\r\\n                    [(ngModel)]=\\\"driverModel.Address.Address1\\\" name=\\\"Address1\\\" #Address1=\\\"ngModel\\\"\\r\\n                    [ngClass]=\\\"{ 'is-invalid': f.submitted && Address1.invalid }\\\">\\r\\n\\r\\n                  <div *ngIf=\\\"f.submitted && Address1.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"Address1.errors.required\\\"> Address1 is required</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Line 2</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" required\\r\\n                    [(ngModel)]=\\\"driverModel.Address.Address2\\\" name=\\\"Address2\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-row col-md-12\\\">\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">City</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" required\\r\\n                      [(ngModel)]=\\\"driverModel.Address.City\\\" name=\\\"City\\\" #City=\\\"ngModel\\\"\\r\\n                      [ngClass]=\\\"{ 'is-invalid': f.submitted && City.invalid }\\\">\\r\\n                    <div *ngIf=\\\"f.submitted && City.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"City.errors.required\\\"> City is required</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-3\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">State</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" required\\r\\n                      [(ngModel)]=\\\"driverModel.Address.State\\\" name=\\\"State\\\" #State=\\\"ngModel\\\"\\r\\n                      [ngClass]=\\\"{ 'is-invalid': f.submitted && State.invalid }\\\">\\r\\n                    <div *ngIf=\\\"f.submitted && State.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"State.errors.required\\\"> State is required</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-3\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">Zip</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" required\\r\\n                      [(ngModel)]=\\\"driverModel.Address.Zip\\\" name=\\\"Zip\\\" (keypress)=\\\"numberOnly($event)\\\" appBlockCopyPaste\\r\\n                      #Zip=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && Zip.invalid }\\\">\\r\\n                    <div *ngIf=\\\"f.submitted && Zip.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"Zip.errors.required\\\"> Zip is required</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-4\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Country</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"driverModel.Address.Country\\\"\\r\\n                    name=\\\"Country\\\" #Country=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && Country.invalid }\\\">\\r\\n                  <div *ngIf=\\\"f.submitted && Country.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"Country.errors.required\\\"> Country is required</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-8\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Website</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"driverModel.Address.Website\\\"\\r\\n                    name=\\\"Website\\\" #Website=\\\"ngModel\\\" appBlockCopyPaste>\\r\\n                  <!-- <div *ngIf=\\\"submitted && f.Address['controls'].website.errors\\\" class=\\\"invalid-feedback\\\">                   \\r\\n                              <div *ngIf=\\\"customerForm.controls.website.errors.pattern\\\">website is not valid</div>                       \\r\\n                            </div> -->\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Phone</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"driverModel.Address.Phone\\\"\\r\\n                    name=\\\"Phone\\\" #Phone=\\\"ngModel\\\" (keypress)=\\\"numberOnly($event)\\\" appBlockCopyPaste>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Fax</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"driverModel.Address.Fax\\\"\\r\\n                    name=\\\"Fax\\\" #Fax=\\\"ngModel\\\" (keypress)=\\\"numberOnly($event)\\\" appBlockCopyPaste>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">E-mail</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"driverModel.Address.Email\\\"\\r\\n                    name=\\\"Email\\\" #Email=\\\"ngModel\\\" appBlockCopyPaste>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-6 col-sm-6 col-md-6\\\">\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"col-1 col-sm-1 col-md-1 text-left\\\">\\r\\n                <button type=\\\"reset\\\" *ngIf=\\\"isResetbtnhidden\\\" class=\\\"btn btn-primary btn-sm\\\"\\r\\n                  (click)=\\\"resetForm()\\\">Clear</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-2 col-sm-2 col-md-2 text-right\\\">\\r\\n                <button type=\\\"reset\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-1 col-sm-1 col-md-1 text-left\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\">Submit</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"show_DriverInfo\\\">\\r\\n        <div class=\\\"container text-right\\\">\\r\\n          <span style=\\\"color:green;\\\" (click)=\\\"bindFormControls()\\\"> <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            <b> edit</b>..</span>\\r\\n        </div>\\r\\n        <div class=\\\"container ml-2\\\">\\r\\n\\r\\n          <h5> {{driverModel.FirstName}} {{driverModel.LastName}}\\r\\n          </h5>\\r\\n\\r\\n          <span class=\\\"text-muted\\\">Id <b>{{driverModel.DriverId}}</b> </span><br>\\r\\n          <span class=\\\"text-muted\\\">License no </span> <br>\\r\\n          <span><b> {{driverModel.DriversLicenseNo}} </b>\\r\\n          </span>\\r\\n          <br><br>\\r\\n          <span class=\\\"text-muted\\\"> Expiry Date </span><br>\\r\\n          <span><b> {{driverModel.LicenseExpiryDate|date}} </b>\\r\\n          </span>\\r\\n\\r\\n          <br><br>\\r\\n          <span class=\\\"text\\\" style=\\\"color: chocolate;\\\"> <b> Address </b></span><br>\\r\\n\\r\\n          <span class=\\\"text-muted\\\">Line 1 :<b> {{driverModel.Address.Address1}}</b> </span><br>\\r\\n          <span class=\\\"text-muted\\\">Line 2 :<b> {{driverModel.Address.Address2}}</b> </span> <br>\\r\\n          <span class=\\\"text-muted\\\">City :<b> {{driverModel.Address.City}} </b></span> <br>\\r\\n          <span class=\\\"text-muted\\\">State :<b> {{driverModel.Address.State}} </b></span> <br>\\r\\n          <span class=\\\"text-muted\\\">Zip :<b> {{driverModel.Address.Zip}} </b></span> <br>\\r\\n          <span class=\\\"text-muted\\\">Country: <b> {{driverModel.Address.Country}} </b></span> <br><br>\\r\\n          <span class=\\\"text-muted\\\">Website <b> {{driverModel.Address.Website}} </b></span> <br><br>\\r\\n          <span class=\\\"text-muted\\\">Email </span><br>\\r\\n          <span><b> {{driverModel.Address.Email}} </b></span> <br><br>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n              <span class=\\\"text-muted\\\">Fax </span><br>\\r\\n              <span><b> {{driverModel.Address.Fax}} </b></span>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n              <span class=\\\"text-muted\\\">Mobile </span><br>\\r\\n              <span><b> {{driverModel.Address.Phone}} </b></span>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<br>\\r\\n<div id=\\\"jumbotron\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-8 col-sm-8 col-md-8\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-6 col-sm-6 col-md-6\\\">\\r\\n          <h5 class=\\\"card-subtitle mb-2\\\">\\r\\n            Items</h5>\\r\\n        </div>\\r\\n        <div class=\\\"col-6 col-sm-6 col-md-6\\\">\\r\\n          <div class=\\\"container text-right\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-11 col-sm-11 col-md-11\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm\\\">\\r\\n                  <div class=\\\"img-group-prepend\\\">\\r\\n                    <img src=\\\"assets/img/brand/search16px.png\\\" /> &nbsp;\\r\\n                  </div>\\r\\n                  <input [(ngModel)]=\\\"searchText\\\" class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"\\r\\n                    style=\\\"border-radius: 1rem;\\\" placeholder=\\\"Search..\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-1 col-sm-1 col-md-1\\\">\\r\\n                <img src=\\\"assets/img/brand/broom16px.png\\\" (click)=\\\"clear_search()\\\" tooltip=\\\"clear\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-4 col-sm-4 col-md-4 text-right\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\" (click)=\\\"toggle()\\\" *ngIf=\\\"show_btnAdd\\\">Create New\\r\\n        Item</button>\\r\\n      <h5 for=\\\"new\\\" *ngIf=\\\"show_lblAdd\\\"> Add Item </h5>\\r\\n      <h5 for=\\\"edit\\\" *ngIf=\\\"show_lblEdit\\\"> Edit Item </h5>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n      <table class=\\\"table table-sm\\\">\\r\\n        <tr ngclass=\\\"btn-primary\\\">\\r\\n          <th hidden=\\\"true\\\">itemkey</th>\\r\\n          <th scope=\\\"col\\\" class=\\\"pointer\\\" (click)=\\\"sort('itemid')\\\">Id &nbsp;<i class=\\\"fa fa-sort\\\"\\r\\n              aria-hidden=\\\"true\\\"></i>\\r\\n          </th>\\r\\n          <th scope=\\\"col\\\" class=\\\"pointer\\\" (click)=\\\"sort('description')\\\">Description &nbsp;<i class=\\\"fa fa-sort\\\"\\r\\n              aria-hidden=\\\"true\\\"></i>\\r\\n          </th>\\r\\n        </tr>\\r\\n        <tr *ngFor=\\\"let item of Items | grdFilter: {itemid: searchText,description: searchText}\\r\\n        |paginate:{itemsPerPage:15,currentPage:p,totalItems: count}\\\">\\r\\n          <td hidden=\\\"true\\\">{{item.itemkey}}</td>\\r\\n          <td> <a [routerLink]=\\\"\\\" (click)=\\\"getItemById(item.itemkey)\\\">{{item.itemid}}</a> </td>\\r\\n          <td>{{item.description}}</td>\\r\\n\\r\\n        </tr>\\r\\n      </table>\\r\\n      \\r\\n <div class=\\\"container text-right\\\"> \\r\\n  <pagination-controls \\r\\n  (pageChange)=\\\"p=$event\\\"\\r\\n  autoHide=\\\"true\\\"\\r\\n  responsive=\\\"true\\\"> </pagination-controls>     \\r\\n</div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"show_DivAddUpdate\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n          <form name=\\\"form\\\" (ngSubmit)=\\\" f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n            <div class=\\\"container\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <br>\\r\\n                <h4> <b> Item Detail </b> </h4>\\r\\n                <div class=\\\"row\\\" hidden=\\\"true\\\">\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-4\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">itemkey</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.itemkey\\\" id=\\\"itemkey\\\"\\r\\n                      name=\\\"itemkey\\\" #itemkey=\\\"ngModel\\\">\\r\\n                  </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">User Id</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"itemid\\\" [(ngModel)]=\\\"dataModel.itemid\\\"\\r\\n                      #itemid=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && itemid.invalid }\\\" required\\r\\n                      minlength=\\\"2\\\" />\\r\\n\\r\\n                    <div *ngIf=\\\"f.submitted && itemid.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"itemid.errors.required\\\"> Item Id is required</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">Description</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.description\\\"\\r\\n                      id=\\\"Description\\\" name=\\\"Description\\\" #Description=\\\"ngModel\\\"\\r\\n                      [ngClass]=\\\"{ 'is-invalid': f.submitted && Description.invalid }\\\" required>\\r\\n                    <div *ngIf=\\\"f.submitted && Description.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"Description.errors.required\\\"> Description is required</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">Type</span>\\r\\n                    </div>\\r\\n                    <!-- <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.itemtype\\\"\\r\\n                      id=\\\"itemtype\\\" name=\\\"itemtype\\\" #itemtype=\\\"ngModel\\\"\\r\\n                      [ngClass]=\\\"{ 'is-invalid': f.submitted && itemtype.invalid }\\\" required> -->\\r\\n\\r\\n                    <select class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.itemtype\\\" id=\\\"itemtype\\\"\\r\\n                      name=\\\"itemtype\\\" #itemtype=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && itemtype.invalid }\\\"\\r\\n                      required>\\r\\n                      <option [value]=\\\"item.itemtypeid\\\" *ngFor=\\\"let item of ItemTypes\\\">{{item.description}}</option>\\r\\n                    </select>\\r\\n                    <div *ngIf=\\\"f.submitted && itemtype.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"itemtype.errors.required\\\"> Item type is required</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-6 col-sm-6 col-md-6\\\">\\r\\n\\r\\n                  </div>\\r\\n                  <div class=\\\"col-1 col-sm-1 col-md-1 text-left\\\">\\r\\n                    <!-- <button type=\\\"reset\\\" *ngIf=\\\"isResetbtnhidden\\\" class=\\\"btn btn-primary btn-sm\\\"\\r\\n                      (click)=\\\"resetForm()\\\">Clear</button> -->\\r\\n                  </div>\\r\\n                  <div class=\\\"col-2 col-sm-2 col-md-2 text-right\\\">\\r\\n                    <button type=\\\"reset\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-1 col-sm-1 col-md-1 text-right\\\">\\r\\n                    <button class=\\\"btn btn-primary btn-sm\\\">Submit</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"show_DivInfo\\\">\\r\\n        <div class=\\\"container text-right\\\">\\r\\n          <span style=\\\"color:green;\\\" (click)=\\\"bindFormControls()\\\"> <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            <b> edit</b>..</span>\\r\\n        </div>\\r\\n        <div class=\\\"container ml-2\\\">\\r\\n\\r\\n          <h5> {{dataModel.itemid}} </h5>\\r\\n\\r\\n          <span class=\\\"text-muted\\\">Description </span> <br>\\r\\n          <span><b> {{dataModel.description}} </b></span> <br>\\r\\n\\r\\n          <span class=\\\"text-muted\\\">Type </span> <br>\\r\\n          <span><b> {{dataModel.itemtype}} </b>\\r\\n          </span>\\r\\n          <br><br>\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<br>\\r\\n<h5>Rate Sheet</h5>\\r\\n<div id=\\\"jumbotron\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-6 col-sm-6 col-md-6\\\">\\r\\n      <div class=\\\"row\\\">       \\r\\n        <div class=\\\"form-group input-group input-group-sm col-sm-6 col-md-6 col-lg-6\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\">Customer</span>\\r\\n          </div>\\r\\n          <select id=\\\"drpCustomer\\\" class=\\\"form-control form-control-sm\\\"\\r\\n            (change)=\\\"drpCustomer_ChangedEvent($event.target.value)\\\">\\r\\n            <option [value]=\\\"0\\\"> Select </option>\\r\\n            <option [value]=\\\"Customer.CustomerKey\\\" *ngFor=\\\"let Customer of customers\\\">\\r\\n              {{Customer.CustName}}\\r\\n            </option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"col-3 col-sm-3 col-md-3\\\">\\r\\n          <div class=\\\"container text-left\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-success btn-sm\\\" style=\\\"border-radius: 1rem;\\\"\\r\\n              (click)=\\\"GetRateByCustomer()\\\" *ngIf=\\\"show_btnEdit\\\">\\r\\n              <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i> Edit\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-3 col-sm-3 col-md-3\\\">\\r\\n          <div class=\\\"container text-right\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\" style=\\\"border-radius: 1rem;\\\" (click)=\\\"toggle()\\\"\\r\\n              *ngIf=\\\"show_btnAdd\\\">\\r\\n              <i class=\\\"fa fa-plus-circle\\\" aria-hidden=\\\"true\\\"></i> New\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12 col-sm-12 col-md-12\\\">\\r\\n          <table class=\\\"table table-sm\\\">\\r\\n            <tr ngclass=\\\"btn-primary\\\">\\r\\n              <th scope=\\\"col\\\" class=\\\"pointer\\\" (click)=\\\"sort('description')\\\">Description &nbsp;<i class=\\\"fa fa-sort\\\"\\r\\n                  aria-hidden=\\\"true\\\"></i></th>\\r\\n              <th scope=\\\"col\\\" class=\\\"pointer\\\" (click)=\\\"sort('unitprice')\\\">Unit Price &nbsp;<i class=\\\"fa fa-sort\\\"\\r\\n                  aria-hidden=\\\"true\\\"></i></th>\\r\\n            </tr>\\r\\n            <tr *ngFor=\\\"let rate of ratesbycustomer | grdFilter: {description: searchText,unitprice: searchText} \\r\\n          |paginate:{itemsPerPage:10,currentPage:p,totalItems: count};let i=index\\\">\\r\\n              <td> {{rate.description}}</td>\\r\\n              <td> {{rate.unitprice}}</td>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"ratesCount\\\">\\r\\n              <td colspan=\\\"1\\\">\\r\\n                <h4 style=\\\"color: darkorange;\\\">No records found! </h4>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </table>\\r\\n          <div class=\\\"container text-right\\\">\\r\\n            <pagination-controls (pageChange)=\\\"p=$event\\\" autoHide=\\\"true\\\" responsive=\\\"true\\\"> </pagination-controls>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-6 col-sm-6 col-md-6\\\">\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"show_DivAddUpdate\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n          <form name=\\\"form\\\" (ngSubmit)=\\\" f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n            <div class=\\\"container\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <br>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-6 col-sm-6 col-md-6\\\">\\r\\n                    <h5> <b> {{selectedCustomer.CustName}}</b></h5>\\r\\n                    <button class=\\\"btn btn-primary btn-sm\\\">Submit</button> &nbsp;\\r\\n                    <button type=\\\"reset\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-12 col-sm-12 col-md-12\\\">\\r\\n                    <table id=\\\"containerRatesheet\\\" class=\\\"table table-sm table-borderless\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\">\\r\\n                      <thead>\\r\\n                        <tr>\\r\\n                          <th hidden=\\\"true\\\">itemkey</th>\\r\\n                          <th>Item</th>\\r\\n                          <th>Rate</th>\\r\\n                          <th></th>\\r\\n                        </tr>\\r\\n                      </thead>\\r\\n                      <tbody>\\r\\n                        <tr *ngFor=\\\"let item of ratesheet; let i = index\\\">\\r\\n                          <td hidden=\\\"true\\\">\\r\\n                            {{item.itemkey}} </td>\\r\\n                          <td>{{item.description}}</td>\\r\\n                          <td>\\r\\n                            <input [(ngModel)]=\\\"item.unitprice\\\" class=\\\"form-control form-control-sm \\\" type=\\\"text\\\"\\r\\n                              name=\\\"{{item.unitprice}}\\\" /> </td>\\r\\n                          <td>\\r\\n                            <button class=\\\"btn btn-default small\\\" type=\\\"button\\\" (click)=\\\"deleteFieldValue(i)\\\">\\r\\n                              <img src=\\\"assets/img/brand/trash-icon16px.png\\\" /></button>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                          <td>\\r\\n                            <select id=\\\"drpItem\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"newAttribute.itemkey\\\"\\r\\n                              name=\\\"newAttribute.itemkey\\\" (change)=\\\"drpAddnewCharge_ChangedEvent($event.target.value)\\\">\\r\\n                              <option [value]=\\\"0\\\">Select</option>\\r\\n                              <option [value]=\\\"itm.itemkey\\\" *ngFor=\\\"let itm of item\\\">\\r\\n                                {{itm.description}}\\r\\n                              </option>\\r\\n                            </select>\\r\\n                          </td>\\r\\n                          <td>\\r\\n                            <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" id=\\\"newAttributePrice\\\"\\r\\n                              [(ngModel)]=\\\"newAttribute.unitprice\\\" name=\\\"newAttributePrice\\\" />\\r\\n                          </td>\\r\\n                          <td>\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary btn-sm\\\" style=\\\"border-radius: 1rem;\\\"\\r\\n                              (click)=\\\"addFieldValue()\\\">\\r\\n                              <i class=\\\"fa fa-plus-circle\\\" aria-hidden=\\\"true\\\"></i> Add\\r\\n                            </button>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                      </tbody>\\r\\n                    </table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"show_DivInfo\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-12 col-sm-12 col-md-12\\\">\\r\\n            <h5> <b> {{selectedCustomer.CustName}}</b></h5>\\r\\n            <div class=\\\"container text-left\\\">\\r\\n              <button class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"updateRate()\\\">Update</button> &nbsp;\\r\\n              <button type=\\\"reset\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n            </div>\\r\\n            <br>\\r\\n            <table id=\\\"container\\\" class=\\\"table table-sm\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\">\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th hidden=\\\"true\\\">Ratekey</th>\\r\\n                  <th hidden=\\\"true\\\">itemkey</th>\\r\\n                  <th>Item</th>\\r\\n                  <th>Rate</th>\\r\\n                  <th></th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let item of dataModel; let i = index\\\">\\r\\n                  <td hidden=\\\"true\\\">{{item.ratekey}} </td>\\r\\n                  <td hidden=\\\"true\\\">{{item.itemkey}} </td>\\r\\n                  <td>{{item.description}}</td>\\r\\n                  <td>\\r\\n                    <input [(ngModel)]=\\\"item.unitprice\\\" class=\\\"form-control form-control-sm \\\" type=\\\"text\\\"\\r\\n                      name=\\\"{{item.unitprice}}\\\" /> </td>\\r\\n                  <td *ngIf=\\\"item.ratekey == null\\\">\\r\\n                    <button class=\\\"btn btn-default small\\\" type=\\\"button\\\" (click)=\\\"deleteFieldValueInRateSheet(i)\\\">\\r\\n                      <img src=\\\"assets/img/brand/trash-icon16px.png\\\" /></button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n            <table id=\\\"containerAttributes\\\" class=\\\"table table-sm table-borderless\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\">\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th hidden=\\\"true\\\">itemkey</th>\\r\\n                  <th>Description</th>\\r\\n                  <th>Unit Price</th>\\r\\n                  <th></th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td>\\r\\n                    <select class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"newAttributeinRate.itemkey\\\"\\r\\n                      name=\\\"newAttributeinRate.itemkey\\\"\\r\\n                      (change)=\\\"drpAddnewCharge_ChangedEventEdit($event.target.value)\\\">\\r\\n                      <option [value]=\\\"0\\\" disabled>--select-- </option>\\r\\n                      <option *ngFor=\\\"let i of item\\\" [value]=\\\"i.itemkey\\\">\\r\\n                        {{i.description}}\\r\\n                      </option>\\r\\n                    </select>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" id=\\\"newAttributeinRatePrice\\\"\\r\\n                      [(ngModel)]=\\\"newAttributeinRate.unitprice\\\" name=\\\"newAttributeinRatePrice\\\" />\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <button class=\\\"btn btn-sm btn-outline-secondary\\\" type=\\\"button\\\"\\r\\n                      (click)=\\\"addNewRowinRateSheet()\\\">Add</button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<br>\\n<div id=\\\"jumbotron\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-6 col-sm-6 col-md-6\\\">\\n          <h5 class=\\\"card-subtitle mb-2\\\">\\n            <img src=\\\"assets/img/brand/user-identity4.png\\\" /> Users</h5>\\n        </div>\\n        <div class=\\\"col-6 col-sm-6 col-md-6\\\">\\n          <div class=\\\"container text-right\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-12 col-sm-12 col-md-12\\\">\\n                <div class=\\\"form-group input-group input-group-sm\\\">\\n                  <div class=\\\"img-group-prepend\\\">\\n                    <img src=\\\"assets/img/brand/search16px.png\\\" /> &nbsp;\\n                  </div>\\n                  <input [(ngModel)]=\\\"searchText\\\" class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"\\n                    placeholder=\\\"Search..\\\">\\n                </div>\\n              </div>\\n              <!-- <div class=\\\"col-1 col-sm-1 col-md-1\\\">\\n                <img src=\\\"assets/img/brand/broom16px.png\\\" (click)=\\\"clear_search()\\\" tooltip=\\\"clear\\\" />\\n              </div> -->\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-6 col-md-6 col-lg-6 text-right\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\" (click)=\\\"toggle()\\\" *ngIf=\\\"show_btnCreateUser\\\">Create New\\n        User</button>\\n      <h5 for=\\\"new\\\" *ngIf=\\\"show_lblAddNewUser\\\"> Add New User </h5>\\n      <h5 for=\\\"edit\\\" *ngIf=\\\"show_lblEditUserDetail\\\"> Edit User </h5>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-6 col-md-6 col-lg-6 ScrollStyle\\\">\\n      <table class=\\\"table table-sm\\\">\\n        <tr ngclass=\\\"btn-primary\\\">\\n          <th hidden=\\\"true\\\">userkey</th>\\n          <th>User Id</th>\\n          <th>First Name</th>\\n          <th>Last Name</th>\\n        </tr>\\n        <tr *ngFor=\\\"let user of Users | grdFilter: {UserId: searchText,FirstName: searchText, LastName: searchText}\\\">\\n          <td hidden=\\\"true\\\">{{user.UserKey}}</td>\\n          <td> <a [routerLink]=\\\"\\\" (click)=\\\"getUserById(user.UserKey)\\\">{{user.UserId}}</a> </td>\\n          <td>{{user.FirstName}}</td>\\n          <td>{{user.LastName}}</td>\\n        </tr>\\n      </table>\\n    </div>\\n    <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n      <div class=\\\"row\\\" *ngIf=\\\"show_addupdateUser\\\">\\n\\n        <form name=\\\"form\\\" (ngSubmit)=\\\" f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\">\\n          <div class=\\\"row\\\">\\n\\n            <div class=\\\"col-6 col-sm-6 col-md-6\\\">\\n\\n            </div>\\n            <div class=\\\"col-6 col-sm-6 col-md-6 text-right\\\">\\n              <div class=\\\"container\\\">\\n                <button type=\\\"reset\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n                &nbsp; &nbsp;\\n                <button class=\\\"btn btn-primary btn-sm\\\">Submit</button>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"container\\\">\\n            <div class=\\\"form-group\\\">\\n              <br>            \\n              <div class=\\\"row\\\" hidden=\\\"true\\\">\\n                <div class=\\\"form-group input-group input-group-sm col-md-4\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\">UserKey</span>\\n                  </div>\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.userkey\\\" id=\\\"userkey\\\"\\n                    name=\\\"userkey\\\">\\n                </div>\\n\\n                <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\">Address Key</span>\\n                  </div>\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.AddrKey\\\"\\n                    name=\\\"AddrKey\\\" #AddrKey=\\\"ngModel\\\">\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\">User Id</span>\\n                  </div>\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"UserId\\\" [(ngModel)]=\\\"dataModel.UserId\\\"\\n                    #UserId=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && UserId.invalid }\\\" required\\n                    minlength=\\\"6\\\" />\\n\\n                  <div *ngIf=\\\"f.submitted && UserId.invalid\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"UserId.errors.required\\\"> User Id is required</div>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\">First Name</span>\\n                  </div>\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.FirstName\\\"\\n                    id=\\\"FirstName\\\" name=\\\"FirstName\\\" #FirstName=\\\"ngModel\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': f.submitted && FirstName.invalid }\\\" required>\\n                  <div *ngIf=\\\"f.submitted && FirstName.invalid\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"FirstName.errors.required\\\"> First Name is required</div>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\">Last Name</span>\\n                  </div>\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.LastName\\\" id=\\\"LastName\\\"\\n                    name=\\\"LastName\\\" #LastName=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && LastName.invalid }\\\"\\n                    required>\\n                  <div *ngIf=\\\"f.submitted && LastName.invalid\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"LastName.errors.required\\\"> Last Name is required</div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\">Password</span>\\n                  </div>\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Password\\\" id=\\\"Password\\\"\\n                    name=\\\"Password\\\" #Password=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && Password.invalid }\\\"\\n                    required>\\n                  <div *ngIf=\\\"f.submitted && Password.invalid\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"Password.errors.required\\\"> Password is required</div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"container\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"legno\\\"> <b> Address </b> </label>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\">Line 1</span>\\n                  </div>\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.Address1\\\"\\n                    name=\\\"Address1\\\" #Address1=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && Address1.invalid }\\\"\\n                    required>\\n                  <div *ngIf=\\\"f.submitted && Address1.invalid\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"Address1.errors.required\\\"> Address line 1 is required</div>\\n                  </div>\\n                </div>\\n\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\">Line 2</span>\\n                  </div>\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.Address2\\\"\\n                    name=\\\"Address2\\\" #Address2=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && Address2.invalid }\\\"\\n                    required>\\n                  <div *ngIf=\\\"f.submitted && Address2.invalid\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"Address2.errors.required\\\"> Address line 2 is required</div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\">City</span>\\n                  </div>\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.City\\\"\\n                    name=\\\"City\\\" #City=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && City.invalid }\\\" required>\\n                  <div *ngIf=\\\"f.submitted && City.invalid\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"City.errors.required\\\"> City is required</div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group input-group input-group-sm col-md-3\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\">State</span>\\n                  </div>\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.State\\\"\\n                    name=\\\"State\\\" #State=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && State.invalid }\\\" required>\\n                  <div *ngIf=\\\"f.submitted && State.invalid\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"State.errors.required\\\"> State is required</div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group input-group input-group-sm col-md-3\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\">Zip</span>\\n                  </div>\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.Zip\\\" name=\\\"Zip\\\"\\n                    (keypress)=\\\"numberOnly($event)\\\" appBlockCopyPaste #Zip=\\\"ngModel\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': f.submitted && Zip.invalid }\\\" required minlength=\\\"3\\\" maxlength=\\\"3\\\">\\n                  <div *ngIf=\\\"f.submitted && Zip.invalid\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"Zip.errors.required\\\"> Zip is required</div>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group input-group input-group-sm col-md-4\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\">Country</span>\\n                  </div>\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.Country\\\"\\n                    name=\\\"Country\\\" #Country=\\\"ngModel\\\">\\n                </div>\\n                <div class=\\\"form-group input-group input-group-sm col-md-8\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\">Website</span>\\n                  </div>\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.Website\\\"\\n                    name=\\\"Website\\\" #Website=\\\"ngModel\\\" appBlockCopyPaste>\\n\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\">Phone</span>\\n                  </div>\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.Phone\\\"\\n                    name=\\\"Phone\\\" #Phone=\\\"ngModel\\\" (keypress)=\\\"numberOnly($event)\\\" appBlockCopyPaste>\\n\\n                </div>\\n                <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\">Fax</span>\\n                  </div>\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.Fax\\\" name=\\\"Fax\\\"\\n                    #Fax=\\\"ngModel\\\" (keypress)=\\\"numberOnly($event)\\\" appBlockCopyPaste>\\n                </div>\\n              </div>\\n\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\">E-mail</span>\\n                  </div>\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.Email\\\"\\n                    name=\\\"Email\\\" #Email=\\\"ngModel\\\" appBlockCopyPaste>\\n                </div>\\n              </div>\\n            </div>\\n            <br>\\n          </div>\\n        </form>\\n\\n      </div>\\n      <div class=\\\"row\\\" *ngIf=\\\"show_UserInfo\\\">\\n        <div class=\\\"container text-right\\\">\\n          <span style=\\\"color:green;\\\" (click)=\\\"bindFormControls()\\\"> <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n            <b> edit</b>..</span>\\n        </div>\\n        <div class=\\\"container ml-2\\\">\\n\\n          <h5> {{dataModel.UserId}} </h5>\\n\\n          <span class=\\\"text-muted\\\">FirstName </span> <br>\\n          <span><b> {{dataModel.FirstName}} </b></span> <br>\\n\\n          <span class=\\\"text-muted\\\">LastName </span> <br>\\n          <span><b> {{dataModel.LastName}} </b>\\n          </span>\\n          <br><br>\\n\\n          <span class=\\\"text\\\" style=\\\"color: chocolate;\\\"> <b> Address </b></span><br>\\n\\n          <span class=\\\"text-muted\\\">Line 1 :<b> {{dataModel.Address.Address1}}</b> </span><br>\\n          <span class=\\\"text-muted\\\">Line 2 :<b> {{dataModel.Address.Address2}}</b> </span> <br>\\n          <span class=\\\"text-muted\\\">City :<b> {{dataModel.Address.City}} </b></span> <br>\\n          <span class=\\\"text-muted\\\">State :<b> {{dataModel.Address.State}} </b></span> <br>\\n          <span class=\\\"text-muted\\\">Zip :<b> {{dataModel.Address.Zip}} </b></span> <br>\\n          <span class=\\\"text-muted\\\">Country: <b> {{dataModel.Address.Country}} </b></span> <br><br>\\n          <span class=\\\"text-muted\\\">Website <b> {{dataModel.Address.Website}} </b></span> <br><br>\\n          <span class=\\\"text-muted\\\">Email </span><br>\\n          <span><b> {{dataModel.Address.Email}} </b></span> <br><br>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n              <span class=\\\"text-muted\\\">Fax </span><br>\\n              <span><b> {{dataModel.Address.Fax}} </b></span>\\n            </div>\\n            <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n              <span class=\\\"text-muted\\\">Mobile </span><br>\\n              <span><b> {{dataModel.Address.Phone}} </b></span>\\n            </div>\\n            <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","export default \"<br>\\r\\n<div id=\\\"jumbotron\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-8 col-sm-8 col-md-8\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-6 col-sm-6 col-md-6\\\">\\r\\n          <h5 class=\\\"card-subtitle mb-2\\\" style=\\\"color: black\\\">\\r\\n            <img src=\\\"assets/img/brand/user-identity4.png\\\" /> Vendors</h5>\\r\\n        </div>\\r\\n        <div class=\\\"col-6 col-sm-6 col-md-6\\\">\\r\\n          <div class=\\\"container text-right\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-11 col-sm-11 col-md-11\\\">\\r\\n                <div class=\\\"form-group input-group input-group-sm\\\">\\r\\n                  <div class=\\\"img-group-prepend\\\">\\r\\n                    <img src=\\\"assets/img/brand/search16px.png\\\" /> &nbsp;\\r\\n                  </div>\\r\\n                  <input [(ngModel)]=\\\"searchText\\\" class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"\\r\\n                    placeholder=\\\"Search..\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-1 col-sm-1 col-md-1\\\">\\r\\n                <img src=\\\"assets/img/brand/broom16px.png\\\" (click)=\\\"clear_search()\\\" tooltip=\\\"clear\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-4 col-sm-4 col-md-4 text-right\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\" (click)=\\\"toggle()\\\" *ngIf=\\\"show_btnAdd\\\">Create New\\r\\n          Vendor</button>\\r\\n        <h5 for=\\\"new\\\" *ngIf=\\\"show_lblAdd\\\">  Add New Vendor  </h5>\\r\\n        <h5 for=\\\"edit\\\" *ngIf=\\\"show_lblUpdate\\\">  Edit Vendor  </h5>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-8 col-md-8 col-lg-8 ScrollStyle\\\">\\r\\n      <table class=\\\"table table-sm\\\">\\r\\n        <tr ngclass=\\\"btn-primary\\\">\\r\\n            <td hidden=\\\"true\\\">vendkey</td>\\r\\n            <td>Id</td>\\r\\n            <td>Name</td>\\r\\n        </tr>\\r\\n        <tr *ngFor=\\\"let vend of vendors | grdFilter: {vendid: searchText,vendname: searchText}\\\">\\r\\n            <td hidden=\\\"true\\\">{{vend.vendkey}}</td>\\r\\n            <td>{{vend.vendid}}</td>            \\r\\n          <td> <a [routerLink]=\\\"\\\" (click)=\\\"getVendorById(vend.vendkey)\\\">{{vend.vendname}}</a> </td>          \\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"show_divAddUpdate\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n          <form name=\\\"form\\\" (ngSubmit)=\\\" f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n            <div class=\\\"container\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"user\\\"> <b> Vendor detail </b> </label>\\r\\n                <div class=\\\"row\\\" hidden=\\\"true\\\">\\r\\n                    <div class=\\\"form-group input-group input-group-sm col-md-4\\\">\\r\\n                        <div class=\\\"input-group-prepend\\\">\\r\\n                          <span class=\\\"input-group-text\\\">vendkey</span>\\r\\n                        </div>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.vendkey\\\"\\r\\n                          id=\\\"vendkey\\\" name=\\\"vendkey\\\">\\r\\n                      </div>\\r\\n\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">Address Key</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.AddrKey\\\"\\r\\n                      name=\\\"AddrKey\\\" #AddrKey=\\\"ngModel\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n                      <div class=\\\"input-group-prepend\\\">\\r\\n                          <span class=\\\"input-group-text\\\">Vendor Id</span>\\r\\n                        </div>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" required [(ngModel)]=\\\"dataModel.vendid\\\"\\r\\n                          #vendid=\\\"ngModel\\\" name=\\\"vendid\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && vendid.invalid }\\\" required>\\r\\n                        <div *ngIf=\\\"f.submitted && vendid.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"vendid.errors.required\\\"> VendorID is required</div>\\r\\n                        </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n                      <div class=\\\"input-group-prepend\\\">\\r\\n                          <span class=\\\"input-group-text\\\">Name</span>\\r\\n                        </div>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" required [(ngModel)]=\\\"dataModel.vendname\\\"\\r\\n                          id=\\\"vendname\\\" name=\\\"vendname\\\" #vendname=\\\"ngModel\\\"\\r\\n                          [ngClass]=\\\"{ 'is-invalid': f.submitted && vendname.invalid }\\\">\\r\\n                        <div *ngIf=\\\"f.submitted && vendname.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"vendname.errors.required\\\"> Vendor name is required</div>\\r\\n                        </div>\\r\\n\\r\\n                  </div>\\r\\n                  \\r\\n                </div>               \\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"container\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"legno\\\"> <b> Address </b> </label>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">Line 1</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.Address1\\\"\\r\\n                      name=\\\"Address1\\\" #Address1=\\\"ngModel\\\">\\r\\n                  </div>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">Line 2</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.Address2\\\"\\r\\n                      name=\\\"Address2\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">                  \\r\\n                    <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                      <div class=\\\"input-group-prepend\\\">\\r\\n                        <span class=\\\"input-group-text\\\">City</span>\\r\\n                      </div>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.City\\\"\\r\\n                        name=\\\"City\\\" #City=\\\"ngModel\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group input-group input-group-sm col-md-3\\\">\\r\\n                      <div class=\\\"input-group-prepend\\\">\\r\\n                        <span class=\\\"input-group-text\\\">State</span>\\r\\n                      </div>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.State\\\"\\r\\n                        name=\\\"State\\\" #State=\\\"ngModel\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group input-group input-group-sm col-md-3\\\">\\r\\n                      <div class=\\\"input-group-prepend\\\">\\r\\n                        <span class=\\\"input-group-text\\\">Zip</span>\\r\\n                      </div>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.Zip\\\"\\r\\n                        name=\\\"Zip\\\" (keypress)=\\\"numberOnly($event)\\\" appBlockCopyPaste #Zip=\\\"ngModel\\\">\\r\\n                    </div>                 \\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-4\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">Country</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.Country\\\"\\r\\n                      name=\\\"Country\\\" #Country=\\\"ngModel\\\">\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-8\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">Website</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.Website\\\"\\r\\n                      name=\\\"Website\\\" #Website=\\\"ngModel\\\" appBlockCopyPaste>\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">Phone</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.Phone\\\"\\r\\n                      name=\\\"Phone\\\" #Phone=\\\"ngModel\\\" (keypress)=\\\"numberOnly($event)\\\" appBlockCopyPaste>\\r\\n\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">Fax</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.Fax\\\"\\r\\n                      name=\\\"Fax\\\" #Fax=\\\"ngModel\\\" (keypress)=\\\"numberOnly($event)\\\" appBlockCopyPaste>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">E-mail</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"dataModel.Address.Email\\\"\\r\\n                      name=\\\"Email\\\" #Email=\\\"ngModel\\\" appBlockCopyPaste>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-6 col-sm-6 col-md-6\\\">\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"col-1 col-sm-1 col-md-1 text-left\\\">\\r\\n                  <!-- <button type=\\\"reset\\\" *ngIf=\\\"isResetbtnhidden\\\" class=\\\"btn btn-primary btn-sm\\\"\\r\\n                    (click)=\\\"resetForm()\\\">Clear</button> -->\\r\\n                </div>\\r\\n                <div class=\\\"col-2 col-sm-2 col-md-2 text-right\\\">\\r\\n                  <button type=\\\"reset\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n                </div>\\r\\n                <div class=\\\"col-1 col-sm-1 col-md-1 text-right\\\">\\r\\n                  <button class=\\\"btn btn-primary btn-sm\\\">Submit</button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"show_divInfo\\\">\\r\\n        <div class=\\\"container text-right\\\">\\r\\n          <span style=\\\"color:green;\\\" (click)=\\\"bindFormControls()\\\"> <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            <b> edit</b>..</span>\\r\\n        </div>\\r\\n        <div class=\\\"container ml-2\\\">\\r\\n\\r\\n          <h5> {{dataModel.vendid}} </h5>\\r\\n\\r\\n          <span class=\\\"text-muted\\\">Name </span> <br>\\r\\n          <span><b> {{dataModel.vendname}} </b></span> \\r\\n\\r\\n                   <br><br>\\r\\n\\r\\n          <span class=\\\"text\\\" style=\\\"color: chocolate;\\\"> <b> Address </b></span><br>\\r\\n\\r\\n          <span class=\\\"text-muted\\\">Line 1 :<b> {{dataModel.Address.Address1}}</b> </span><br>\\r\\n          <span class=\\\"text-muted\\\">Line 2 :<b> {{dataModel.Address.Address2}}</b> </span> <br>\\r\\n          <span class=\\\"text-muted\\\">City :<b> {{dataModel.Address.City}} </b></span> <br>\\r\\n          <span class=\\\"text-muted\\\">State :<b> {{dataModel.Address.State}} </b></span> <br>\\r\\n          <span class=\\\"text-muted\\\">Zip :<b> {{dataModel.Address.Zip}} </b></span> <br>\\r\\n          <span class=\\\"text-muted\\\">Country: <b> {{dataModel.Address.Country}} </b></span> <br><br>\\r\\n          <span class=\\\"text-muted\\\">Website <b> {{dataModel.Address.Website}} </b></span> <br><br>\\r\\n          <span class=\\\"text-muted\\\">Email </span><br>\\r\\n          <span><b> {{dataModel.Address.Email}} </b></span> <br><br>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n              <span class=\\\"text-muted\\\">Fax </span><br>\\r\\n              <span><b> {{dataModel.Address.Fax}} </b></span>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n              <span class=\\\"text-muted\\\">Mobile </span><br>\\r\\n              <span><b> {{dataModel.Address.Phone}} </b></span>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<br>\\n<h5>Roles & Permissions</h5>\\n<div id=\\\"jumbotron\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"form-group input-group input-group-sm col-4 col-sm-4 col-md-4\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text\\\">User</span>\\n      </div>\\n      <select id=\\\"drpUsers\\\" class=\\\"form-control form-control-sm\\\" (change)=\\\"drpUsers_ChangedEvent($event.target.value)\\\">\\n        <option [value]=\\\"0\\\"> </option>\\n        <option [value]=\\\"user.UserKey\\\" *ngFor=\\\"let user of Users\\\">\\n          {{user.FirstName}} {{user.LastName}}\\n        </option>\\n      </select>\\n    </div>\\n    <div class=\\\"col-4 col-sm-4 col-md-4\\\">\\n      <div class=\\\"container text-left\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\" style=\\\"border-radius: 1rem;\\\" (click)=\\\"fnNew_click()\\\"\\n          *ngIf=\\\"show_btnAdd\\\">\\n          <i class=\\\"fa fa-plus-circle\\\" aria-hidden=\\\"true\\\"></i> Add Permission\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-info btn-sm\\\" style=\\\"border-radius: 1rem;\\\"\\n          (click)=\\\"fnUpdate_click()\\\" *ngIf=\\\"show_btnEdit\\\">\\n          <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i> Edit Permission\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"col-4 col-sm-4 col-md-4\\\">\\n      <div class=\\\"container text-right\\\" *ngIf=\\\"show_AddCancel\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"onSubmit()\\\">Submit</button> &nbsp;\\n        <button type=\\\"reset\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"show_DivInfo\\\">\\n    <div class=\\\"col-4 col-sm-4 col-md-4\\\">\\n      <span>Role</span>\\n      <b> : {{role.description}}</b>\\n    </div>\\n    <div class=\\\"col-12 col-sm-12 col-md-12\\\">\\n      <table class=\\\"table table-sm\\\">\\n        <tr ngclass=\\\"btn-primary\\\">\\n          <th scope=\\\"col\\\" hidden=\\\"true\\\">UserKey &nbsp;</th>\\n          <th scope=\\\"col\\\"> &nbsp;</th>\\n          <th scope=\\\"col\\\">View &nbsp;</th>\\n          <th scope=\\\"col\\\">Add &nbsp;</th>\\n          <th scope=\\\"col\\\">Edit &nbsp;</th>\\n          <th scope=\\\"col\\\">Delete &nbsp;</th>\\n\\n        </tr>\\n        <tr *ngFor=\\\"let permissions of UserPermissions | grdFilter: {userkey: searchText,modulename: searchText} \\n      |paginate:{itemsPerPage:10,currentPage:p,totalItems: count};let i=index\\\">\\n          <td hidden=\\\"true\\\"> {{permissions.UserKey}}</td>\\n          <td> \\n            <b style= \\\"color: lightblue;\\\">\\n           {{permissions.Modulename|titlecase }}  </b></td> \\n          <td>\\n            <div>\\n              <span *ngIf=\\\"permissions.fView == 1\\\" class=\\\"badge badge-pill badge-success\\\">\\n                <i class=\\\"fa fa-check-circle  fa-lg\\\" style= \\\"color: green;\\\" aria-hidden=\\\"true\\\"></i> \\n                <!-- <b> YES</b> -->\\n              </span>\\n              <span *ngIf=\\\"!permissions.fView == 1\\\" class=\\\"badge badge-pill badge-danger\\\">\\n                <i class=\\\"fa fa-times-circle fa-lg\\\" style= \\\"color:darkred\\\" aria-hidden=\\\"true\\\"></i>\\n                <!-- <b> NO</b> -->\\n              </span>\\n            </div>\\n          </td>\\n          <td>\\n            <div>\\n              <span *ngIf=\\\"permissions.fNew == 1\\\" class=\\\"badge badge-pill badge-success\\\">\\n                <i class=\\\"fa fa-check-circle  fa-lg\\\" style= \\\"color: green;\\\" aria-hidden=\\\"true\\\"></i> \\n                <!-- <b> YES</b> -->\\n              </span>\\n              <span *ngIf=\\\"!permissions.fNew == 1\\\" class=\\\"badge badge-pill badge-danger\\\">\\n                <i class=\\\"fa fa-times-circle fa-lg\\\" style= \\\"color:darkred\\\" aria-hidden=\\\"true\\\"></i>\\n                <!-- <b> NO</b> -->\\n              </span>\\n            </div>\\n          </td>\\n          <td>\\n            <div>\\n              <span *ngIf=\\\"permissions.fEdit == 1\\\" class=\\\"badge badge-pill badge-success\\\" >\\n                <i class=\\\"fa fa-check-circle  fa-lg\\\" style= \\\"color: green;\\\" aria-hidden=\\\"true\\\"></i> \\n                <!-- <b> YES</b> -->\\n              </span>\\n              <span *ngIf=\\\"!permissions.fEdit == 1\\\" class=\\\"badge badge-pill badge-danger\\\">\\n                <i class=\\\"fa fa-times-circle fa-lg\\\" style= \\\"color:darkred\\\" aria-hidden=\\\"true\\\"></i>\\n                <!-- <b> NO</b> -->\\n              </span>\\n            </div>\\n          </td>\\n          <td>\\n            <div>\\n              <span *ngIf=\\\"permissions.fDelete == 1\\\" class=\\\"badge badge-pill badge-success\\\">\\n                <i class=\\\"fa fa-check-circle  fa-lg\\\" style= \\\"color: green;\\\" aria-hidden=\\\"true\\\"></i> \\n                <!-- <b> YES</b> -->\\n              </span>\\n              <span *ngIf=\\\"!permissions.fDelete == 1\\\" class=\\\"badge badge-pill badge-danger\\\">\\n                <i class=\\\"fa fa-times-circle fa-lg\\\" style= \\\"color:darkred\\\" aria-hidden=\\\"true\\\"></i>\\n                <!-- <b> NO</b> -->\\n              </span>\\n            </div>\\n          </td>\\n        </tr>\\n        <!-- <tr *ngIf=\\\"ratesCount\\\">\\n          <td colspan=\\\"1\\\">\\n            <h4 style=\\\"color: darkorange;\\\">No records found! </h4>\\n          </td>\\n        </tr> -->\\n      </table>\\n      <div class=\\\"container text-right\\\">\\n        <pagination-controls (pageChange)=\\\"p=$event\\\" autoHide=\\\"true\\\" responsive=\\\"true\\\"> </pagination-controls>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"show_DivAddUpdate\\\">\\n    <div class=\\\"form-group input-group input-group-sm col-4 col-sm-4 col-md-4\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text\\\">Role</span>\\n      </div>\\n      <select id=\\\"drpRoles\\\" class=\\\"form-control form-control-sm\\\"  name=\\\"role.rolekey\\\"  [(ngModel)]=\\\"role.rolekey\\\" (change)=\\\"drpRoles_ChangedEvent($event.target.value)\\\">\\n        <option [value]=\\\"0\\\"> </option>\\n        <option [value]=\\\"role.rolekey\\\" *ngFor=\\\"let role of roles\\\">\\n          {{role.description}}\\n        </option>\\n      </select>\\n      \\n    </div>\\n    <div class=\\\"col-12 col-sm-12 col-md-12\\\">\\n      <table class=\\\"table table-sm\\\">\\n        <tr ngclass=\\\"btn-primary\\\">\\n          <th scope=\\\"col\\\" hidden=\\\"true\\\">UserKey &nbsp;</th>\\n          <th scope=\\\"col\\\"> Title&nbsp;</th>\\n          <th scope=\\\"col\\\">View &nbsp;</th>\\n          <th scope=\\\"col\\\">Add &nbsp;</th>\\n          <th scope=\\\"col\\\">Edit &nbsp;</th>\\n          <th scope=\\\"col\\\">Delete &nbsp;</th>\\n        </tr>\\n        <tr *ngFor=\\\"let data of AddUpdateUserPermissions ;let i=index\\\">\\n          <td hidden=\\\"true\\\"> {{data.UserKey}}</td>\\n          <td>\\n            <span> <b> {{data.Modulename|titlecase }} </b></span>\\n          </td>\\n          <td>\\n            <div>\\n              <input id=\\\"chk_+i\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"data.fView\\\" value=\\\"{{data.fView}}\\\"\\n                [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"onViewCheckboxChange(data,$event)\\\" />\\n                  &nbsp;\\n                  <!-- <span *ngIf=\\\"data.fView == 1\\\" class=\\\"badge badge-pill badge-success\\\">\\n                <b>YES</b>                 \\n                </span> -->\\n                <span *ngIf=\\\"data.fView == 1\\\" class=\\\"badge badge-pill badge-success\\\">\\n                  <i class=\\\"fa fa-check-circle  fa-lg\\\" style= \\\"color: green;\\\" aria-hidden=\\\"true\\\"></i>                  \\n                </span>\\n                <span *ngIf=\\\"!data.fView == 1\\\" class=\\\"badge badge-pill badge-danger\\\">\\n                  <i class=\\\"fa fa-times-circle fa-lg\\\" style= \\\"color:darkred\\\" aria-hidden=\\\"true\\\"></i>                 \\n                </span>\\n            </div>\\n          </td>\\n          <td>\\n            <div>\\n              <input type=\\\"checkbox\\\" [(ngModel)]=\\\"data.fNew\\\" value=\\\"{{data.fNew}}\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                (change)=\\\"onNewCheckboxChange(data,$event)\\\" />\\n              &nbsp; <span *ngIf=\\\"data.fNew == 1\\\" class=\\\"badge badge-pill badge-success\\\">\\n                <i class=\\\"fa fa-check-circle  fa-lg\\\" style= \\\"color: green;\\\" aria-hidden=\\\"true\\\"></i>                  \\n              </span>\\n              <span *ngIf=\\\"!data.fNew == 1\\\" class=\\\"badge badge-pill badge-danger\\\">\\n                <i class=\\\"fa fa-times-circle fa-lg\\\" style= \\\"color:darkred\\\" aria-hidden=\\\"true\\\"></i>                 \\n              </span>\\n            </div>\\n          </td>\\n          <td>\\n            <div>\\n              <input type=\\\"checkbox\\\" [(ngModel)]=\\\"data.fEdit\\\" value=\\\"{{data.fEdit}}\\\"\\n                [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"onEditCheckboxChange(data,$event)\\\" />\\n\\n              &nbsp;<span *ngIf=\\\"data.fEdit == 1\\\" class=\\\"badge badge-pill badge-success\\\">\\n                <i class=\\\"fa fa-check-circle  fa-lg\\\" style= \\\"color: green;\\\" aria-hidden=\\\"true\\\"></i>                  \\n              </span>\\n              <span *ngIf=\\\"!data.fEdit == 1\\\" class=\\\"badge badge-pill badge-danger\\\">\\n                <i class=\\\"fa fa-times-circle fa-lg\\\" style= \\\"color:darkred\\\" aria-hidden=\\\"true\\\"></i>                 \\n              </span>\\n            </div>\\n          </td>\\n          <td>\\n            <div>\\n              <input type=\\\"checkbox\\\" [(ngModel)]=\\\"data.fDelete\\\" value=\\\"{{data.fDelete}}\\\"\\n                [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"onDeleteCheckboxChange(data,$event)\\\" />\\n              &nbsp;<span *ngIf=\\\"data.fDelete == 1\\\" class=\\\"badge badge-pill badge-success\\\">\\n                <i class=\\\"fa fa-check-circle  fa-lg\\\" style= \\\"color: green;\\\" aria-hidden=\\\"true\\\"></i>                  \\n              </span>\\n              <span *ngIf=\\\"!data.fDelete == 1\\\" class=\\\"badge badge-pill badge-danger\\\">\\n                <i class=\\\"fa fa-times-circle fa-lg\\\" style= \\\"color:darkred\\\" aria-hidden=\\\"true\\\"></i>                 \\n              </span>\\n            </div>\\n          </td>\\n        </tr>\\n        <!-- <tr *ngIf=\\\"ratesCount\\\">\\n                  <td colspan=\\\"1\\\">\\n                    <h4 style=\\\"color: darkorange;\\\">No records found! </h4>\\n                  </td>\\n                </tr> -->\\n      </table>\\n    </div>\\n  </div>\\n</div>\"","export default \"<!-- <div *ngIf=\\\"selectedCustomer!=null\\\"> -->\\r\\n\\r\\n<!-- <div *ngIf=\\\"selectedCustomer!=null\\\" class=\\\"btn-group btn-group-sm\\\" role=\\\"group\\\"\\r\\n      aria-label=\\\"Button group with nested dropdown\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">Customer</button> -->\\r\\n<!-- <div class=\\\"card\\\">\\r\\n  <div class=\\\"card-header\\\" style=\\\"height: 30px;\\\">\\r\\n    <h6 class=\\\"card-title\\\" style=\\\"text-align:left\\\">Customer</h6>\\r\\n  </div>\\r\\n  <div class=\\\"card-body dropdown bg-secondary\\\" *ngIf=\\\"selectedCustomer!=null\\\">    \\r\\n      <button class=\\\"btn btn-secondary dropdown-toggle form-control-sm btn-block\\\" type=\\\"button\\\" id=\\\"drpcustomer\\\"\\r\\n        data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n        <img *ngIf=\\\"creditCheck\\\" src=\\\"assets/img/brand/tick-circle-icon16px.png\\\" />\\r\\n        <img *ngIf=\\\"!creditCheck\\\" src=\\\"assets/img/brand/close16px.png\\\" />\\r\\n       <b> {{billtoCustomerName}}</b>\\r\\n      </button>\\r\\n      <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"drpBillTo\\\">\\r\\n        <li *ngFor=\\\"let cust of customer\\\" [class.selected]=\\\"cust === selectedCustomer\\\" (click)=\\\"onSelect(cust)\\\">\\r\\n          <a class=\\\"dropdown-item\\\">{{cust.CustName}}</a>\\r\\n        </li>\\r\\n      </div> <br>      \\r\\n        <small class=\\\"text-center text-capitalize\\\" style=\\\"color:darkblue;\\\">{{selectedCustomer.Address.Address1}} &nbsp;{{selectedCustomer.Address.Address2}}\\r\\n        <br>\\r\\n         {{selectedCustomer.Address.City}}, {{selectedCustomer.Address.State}}-{{selectedCustomer.Address.Zip}}</small>\\r\\n    </div>   \\r\\n</div> -->\\r\\n\\r\\n<table>\\r\\n  <tbody>\\r\\n    <tr>\\r\\n      <td> \\r\\n        <h6 class=\\\"card-title  badge badge-pill badge-primary\\\" style=\\\"text-align:left\\\">Bill To / Customer</h6>\\r\\n          <div class=\\\"dropdown\\\" >\\r\\n            <button class=\\\"btn btn-secondary dropdown-toggle form-control-sm btn-block\\\" \\r\\n            style=\\\"border-radius: 1rem; margin-top: 0px;\\r\\n            margin-bottom: 0px;\\r\\n            margin-right: 0px;\\r\\n            margin-left: 0px;\\r\\n            max-width: 280px;\\r\\n            min-width: 250px;\\r\\n            overflow: hidden;\\r\\n            text-overflow: ellipsis;\\\" type=\\\"button\\\"\\r\\n              data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"  [disabled]=\\\"editmode\\\">\\r\\n              <img *ngIf=\\\"creditCheck\\\" src=\\\"assets/img/brand/tick-circle-icon16px.png\\\" />\\r\\n              <img *ngIf=\\\"!creditCheck\\\" src=\\\"assets/img/brand/delete-1-icon16px.png\\\" />\\r\\n              <small><b > {{billtoCustomerName}}</b></small>\\r\\n            </button>\\r\\n            <div class=\\\"dropdown-menu\\\" >\\r\\n              <form class=\\\"px-4 py-2\\\">\\r\\n                <input type=\\\"search\\\" class=\\\"form-control  form-control-sm\\\" placeholder=\\\"search..\\\" autofocus=\\\"autofocus\\\"\\r\\n                (input)=\\\"onSearchChange($event.target.value)\\\">\\r\\n            </form>\\r\\n            <div class=\\\"menuItems\\\">\\r\\n              <li *ngFor=\\\"let cust of customerFilter;  let ind=index;\\\" [class.selected]=\\\"cust === selectedCustomer\\\" (click)=\\\"onSelect(cust)\\\">\\r\\n                <a class=\\\"dropdown-item\\\">{{cust.CustName}} -  {{cust.Address.City}}</a>\\r\\n              </li></div>             \\r\\n            </div>\\r\\n          </div>  \\r\\n      </td>      \\r\\n    </tr>\\r\\n    <tr *ngIf=\\\"selectedCustomer\\\">\\r\\n      <td>\\r\\n        <div style=\\\"margin: 5px;\\\">\\r\\n        <p class=\\\"text-left text-capitalize\\\" >\\r\\n          <small><b style=\\\"word-wrap: break-word;color: #CCCC99;\\\" >{{selectedCustomer.CustName}}</b></small><br>\\r\\n          {{selectedCustomer.Address.Address1}},&nbsp;{{selectedCustomer.Address.Address2}}\\r\\n          <br>\\r\\n          {{selectedCustomer.Address.City}} {{selectedCustomer.Address.State}} {{selectedCustomer.Address.Zip}}</p>          \\r\\n        </div>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\\r\\n\\r\\n\\r\\n<!-- \\r\\n<div class=\\\"dropdown\\\">\\r\\n    <button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu2\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n        {{billtoCustomerName}}\\r\\n    </button>\\r\\n    <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu2\\\">\\r\\n        <li *ngFor=\\\"let cust of customer\\\" [class.selected]=\\\"cust === selectedCustomer\\\" (click)=\\\"onSelect(cust)\\\">\\r\\n            <a class=\\\"dropdown-item\\\">{{cust.CustName}}</a>\\r\\n          </li>\\r\\n    </div>\\r\\n  </div> -->\\r\\n\\r\\n\\r\\n<!-- </div> -->\\r\\n\\r\\n\\r\\n<!-- <div class=\\\"input-group input-group-sm\\\" >\\r\\n        <div class=\\\"input-group-prepend\\\">\\r\\n          <span class=\\\"input-group-text\\\">Customer</span>\\r\\n        </div>\\r\\n        <br>\\r\\n        <select class=\\\"form-control form-control-sm\\\"\\r\\n        (change)=\\\"onSelect(cust)\\\" [value]=customerKeyTobind>\\r\\n         <option value=\\\"cust.CustKey\\\" *ngFor=\\\"let cust of customer\\\">{{cust.CustName}}</option>\\r\\n       </select>\\r\\n      </div>  -->\\r\\n\\r\\n<!-- <div class=\\\"form-row \\\"><p>{{selectedCustomer.Address1}} </p> </div> \\r\\n          <div class=\\\"form-row \\\"> <p> {{selectedCustomer.Address2}} ,  {{selectedCustomer.City}} </p>  </div> \\r\\n          <div class=\\\"form-row \\\">  <p> {{selectedCustomer.State}} {{selectedCustomer.Zip}}</p>  </div>  -->\\r\\n\\r\\n<!-- <div class=\\\"form-row \\\">                        \\r\\n             <div class=\\\"form-group\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"inputAddress\\\" placeholder=\\\"Address1\\\"\\r\\n                [(ngModel)]=\\\"selectedCustomer.Address1\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"inputAddress2\\\" placeholder=\\\"Address2\\\"\\r\\n                [(ngModel)]=\\\"selectedCustomer.Address2\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-row \\\">\\r\\n              <div class=\\\" col-md-5\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"inputCity\\\" placeholder=\\\"City\\\"\\r\\n                  [(ngModel)]=\\\"selectedCustomer.City\\\">\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">            \\r\\n                <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"inputState\\\"  id=\\\"inputState\\\" placeholder=\\\"State\\\"\\r\\n                  [(ngModel)]=\\\"selectedCustomer.State\\\">\\r\\n              </div>\\r\\n              <div class=\\\" col-md-3\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"inputZip\\\" placeholder=\\\"Zip\\\"\\r\\n                  [(ngModel)]=\\\"selectedCustomer.Zip\\\">\\r\\n              </div>            \\r\\n            </div> -->\\r\\n<!-- </div> -->\\r\\n\\r\\n<!-- <div class=\\\"btn-group dropdown-menu-right\\\">                 \\r\\n    <div *ngIf=\\\"selectedCustomer!=null\\\">       \\r\\n        <div class=\\\"form-group \\\">\\r\\n            <button class=\\\"btn btn-secondary dropdown-toggle form-control-sm\\\" type=\\\"button\\\" id=\\\"drpBillTo\\\" data-toggle=\\\"dropdown\\\"\\r\\n                            aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n            {{billtoCustomerName}}\\r\\n            </button>\\r\\n            <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"drpBillTo\\\">\\r\\n                <li *ngFor=\\\"let Address of customer\\\" [class.selected]=\\\"Address === selectedCustomer\\\" (click)=\\\"onSelect(Address)\\\">\\r\\n                  <a class=\\\"dropdown-item\\\">{{Address.Name}}</a>\\r\\n                </li>\\r\\n            </div>\\r\\n      </div> \\r\\n        <div class=\\\"form-group \\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"inputAddress\\\" placeholder=\\\"Address1\\\"\\r\\n            [(ngModel)]=\\\"selectedCustomer.Address1\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group \\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"inputAddress2\\\" placeholder=\\\"Address2\\\"\\r\\n            [(ngModel)]=\\\"selectedCustomer.Address2\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\" col-md-5\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" id=\\\"inputCity\\\" placeholder=\\\"City\\\"\\r\\n              [(ngModel)]=\\\"selectedCustomer.City\\\">\\r\\n          </div>\\r\\n          <div class=\\\"col-md-4\\\">            \\r\\n            <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"inputState\\\"  id=\\\"inputState\\\" placeholder=\\\"State\\\"\\r\\n              [(ngModel)]=\\\"selectedCustomer.State\\\">\\r\\n          </div>\\r\\n          <div class=\\\" col-md-3\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"inputZip\\\" placeholder=\\\"Zip\\\"\\r\\n              [(ngModel)]=\\\"selectedCustomer.Zip\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n    </div>                                              \\r\\n  </div> -->\"","export default \"<h6 class=\\\"card-title\\\" style=\\\"text-align:left; color: white;\\\">Broker</h6>\\r\\n<!-- <div class=\\\"btn-group btn-group-sm bd-dark\\\" role=\\\"group\\\" aria-label=\\\"Button group with nested dropdown\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">Broker</button> -->\\r\\n<div class=\\\"btn-group\\\" role=\\\"group\\\">\\r\\n  <button class=\\\"btn btn-secondary dropdown-toggle form-control-sm\\\" style=\\\"border-radius: 1rem; margin-top: 0px;\\r\\n    margin-bottom: 0px;    margin-right: 0px;    margin-left: 0px;    max-width: 200px;    min-width: 200px;\\r\\n    overflow: hidden;    text-overflow: ellipsis;\\\" type=\\\"button\\\" id=\\\"drpbroker\\\" data-toggle=\\\"dropdown\\\"\\r\\n    aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n    <small><b > {{brokerName}}</b></small> \\r\\n  </button>\\r\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"drpbroker\\\">\\r\\n    <li *ngFor=\\\"let Broker of broker\\\" (click)=\\\"onSelect(Broker)\\\">\\r\\n      <a class=\\\"dropdown-item\\\">{{Broker.BrokerName}}</a>\\r\\n    </li>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- </div> -->\"","export default \"<!-- <div *ngIf=\\\"selectedCustomer!=null\\\"> -->\\r\\n<!-- <p class=\\\"card-title\\\"  style=\\\"text-align:left\\\">{{AddrName}}</p> -->\\r\\n<!-- <div *ngIf=\\\"selectedCustomer!=null\\\" class=\\\"btn-group btn-group-sm\\\" role=\\\"group\\\"  aria-label=\\\"Button group with nested dropdown\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" >\\r\\n    {{AddrName}}</button>\\r\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\r\\n    <button class=\\\"btn btn-outline-secondary  dropdown-toggle form-control-sm\\\" type=\\\"button\\\" id=\\\"drpcompany\\\"\\r\\n      data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n      {{billtoCustomerName}}\\r\\n    </button>\\r\\n    <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"drpcompany\\\">\\r\\n      <li *ngFor=\\\"let Address of customer\\\" [class.selected]=\\\"Address === selectedCustomer\\\" (click)=\\\"onSelect(Address)\\\">\\r\\n        <a class=\\\"dropdown-item\\\">{{Address.Name}}</a>\\r\\n      </li>\\r\\n    </div>\\r\\n  </div>\\r\\n</div> -->\\r\\n<!-- <h6 class=\\\"card-title\\\" style=\\\"text-align:left\\\">{{AddrName}}</h6>\\r\\n<div class=\\\"btn-group\\\" role=\\\"group\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-secondary dropdown-toggle form-control-sm\\\" data-toggle=\\\"dropdown\\\" \\r\\n    aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n    {{billtoCustomerName}}\\r\\n  </button>\\r\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"drpcompany\\\">\\r\\n    <li *ngFor=\\\"let Address of customer\\\" [class.selected]=\\\"Address === selectedCustomer\\\" (click)=\\\"onSelect(Address)\\\">\\r\\n      <a class=\\\"dropdown-item\\\">{{Address.Name}}</a>\\r\\n    </li>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"selectedCustomer!=null\\\">\\r\\n    <small style=\\\"color: midnightblue;\\\">{{selectedCustomer.Address1}} &nbsp; {{selectedCustomer.Address2}} </small><br>\\r\\n    <small style=\\\"color: midnightblue;\\\"> {{selectedCustomer.City}} </small><br>\\r\\n    <small style=\\\"color: midnightblue;\\\"> {{selectedCustomer.State}} {{selectedCustomer.Zip}}</small>\\r\\n</div> -->\\r\\n\\r\\n<!-- <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\" style=\\\"height: 30px;\\\">\\r\\n      <h6 class=\\\"card-title\\\" style=\\\"text-align:left\\\">{{AddrName}}</h6>\\r\\n    </div>\\r\\n    <div class=\\\"card-body dropdown bg-secondary\\\" *ngIf=\\\"selectedCustomer!=null\\\">    \\r\\n        <button class=\\\"btn btn-secondary dropdown-toggle form-control-sm btn-block\\\" type=\\\"button\\\" id=\\\"drpcustomer\\\"\\r\\n          data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">          \\r\\n          {{billtoCustomerName}}\\r\\n        </button>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"drpcompany\\\">\\r\\n            <li *ngFor=\\\"let Address of customer\\\" [class.selected]=\\\"Address === selectedCustomer\\\" (click)=\\\"onSelect(Address)\\\">\\r\\n                <a class=\\\"dropdown-item\\\">{{Address.Name}}</a>\\r\\n              </li>\\r\\n        </div><br>      \\r\\n          <small class=\\\"text-center text-capitalize\\\" style=\\\"color:darkblue;\\\">{{selectedCustomer.Address1}} &nbsp;{{selectedCustomer.Address2}}\\r\\n         <br>\\r\\n           {{selectedCustomer.City}}, {{selectedCustomer.State}}-{{selectedCustomer.Zip}}</small>\\r\\n      </div>   \\r\\n  </div> -->\\r\\n\\r\\n\\r\\n<table>\\r\\n  <tbody>\\r\\n    <tr>\\r\\n      <td>\\r\\n        <h6 class=\\\"card-title badge badge-pill badge-primary\\\" style=\\\"text-align:left\\\">{{AddrName}}</h6>\\r\\n        <div class=\\\"dropdown\\\">\\r\\n          <button class=\\\"btn btn-secondary dropdown-toggle form-control-sm btn-block\\\" style=\\\"border-radius: 1rem; margin-top: 0px;\\r\\n              margin-bottom: 0px;\\r\\n              margin-right: 0px;\\r\\n              margin-left: 0px; max-width: 200px;\\r\\n            min-width: 200px;\\r\\n            overflow: hidden;\\r\\n            text-overflow: ellipsis;\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n            {{billtoCompanyName}}\\r\\n          </button>\\r\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"drpcompany\\\">\\r\\n            <form class=\\\"px-4 py-2\\\">\\r\\n              <input type=\\\"search\\\" class=\\\"form-control  form-control-sm\\\" placeholder=\\\"search..\\\" autofocus=\\\"autofocus\\\"\\r\\n              (input)=\\\"onSearchChange($event.target.value)\\\">\\r\\n          </form>\\r\\n          <div class=\\\"menuItems\\\">\\r\\n            <li *ngFor=\\\"let Address of companyFilter  let ind=index;\\\" [class.selected]=\\\"Address === selectedCompany\\\"\\r\\n              (click)=\\\"onSelect(Address)\\\">\\r\\n              <a class=\\\"dropdown-item\\\">{{Address.Name}}</a>\\r\\n            </li>\\r\\n          </div>\\r\\n            <div style=\\\"display:none;\\\" class=\\\"dropdown-header dropdown_empty\\\">No entry found</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </td>\\r\\n    </tr>\\r\\n    <tr *ngIf=\\\"selectedCompany\\\">\\r\\n      <td>\\r\\n        <div style=\\\"margin: 5px;\\\">\\r\\n          <p class=\\\"text-left text-capitalize\\\" >\\r\\n            <small><b style=\\\"word-wrap: break-word;color:CCCC99;\\\" >{{billtoCompanyName}}</b></small><br>\\r\\n            {{selectedCompany.Address1}} &nbsp;{{selectedCompany.Address2}}\\r\\n            <br>\\r\\n            {{selectedCompany.City}} {{selectedCompany.State}} {{selectedCompany.Zip}}</p>\\r\\n        </div>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- <div class=\\\"form-row \\\"><p>{{selectedCustomer.Address1}} </p> </div> \\r\\n          <div class=\\\"form-row \\\"> <p> {{selectedCustomer.Address2}} ,  {{selectedCustomer.City}} </p>  </div> \\r\\n          <div class=\\\"form-row \\\">  <p> {{selectedCustomer.State}} {{selectedCustomer.Zip}}</p>  </div>  -->\\r\\n\\r\\n<!-- <div class=\\\"form-row \\\">\\r\\n                        \\r\\n             <div class=\\\"form-group\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"inputAddress\\\" placeholder=\\\"Address1\\\"\\r\\n                [(ngModel)]=\\\"selectedCustomer.Address1\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"inputAddress2\\\" placeholder=\\\"Address2\\\"\\r\\n                [(ngModel)]=\\\"selectedCustomer.Address2\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-row \\\">\\r\\n              <div class=\\\" col-md-5\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"inputCity\\\" placeholder=\\\"City\\\"\\r\\n                  [(ngModel)]=\\\"selectedCustomer.City\\\">\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">            \\r\\n                <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"inputState\\\"  id=\\\"inputState\\\" placeholder=\\\"State\\\"\\r\\n                  [(ngModel)]=\\\"selectedCustomer.State\\\">\\r\\n              </div>\\r\\n              <div class=\\\" col-md-3\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"inputZip\\\" placeholder=\\\"Zip\\\"\\r\\n                  [(ngModel)]=\\\"selectedCustomer.Zip\\\">\\r\\n              </div> \\r\\n           \\r\\n            </div> -->\\r\\n<!-- </div> -->\\r\\n\\r\\n<!-- <div class=\\\"btn-group dropdown-menu-right\\\"> \\r\\n\\r\\n                \\r\\n    <div *ngIf=\\\"selectedCustomer!=null\\\">\\r\\n       \\r\\n        <div class=\\\"form-group \\\">\\r\\n            <button class=\\\"btn btn-secondary dropdown-toggle form-control-sm\\\" type=\\\"button\\\" id=\\\"drpBillTo\\\" data-toggle=\\\"dropdown\\\"\\r\\n                            aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n            {{billtoCustomerName}}\\r\\n            </button>\\r\\n            <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"drpBillTo\\\">\\r\\n                <li *ngFor=\\\"let Address of customer\\\" [class.selected]=\\\"Address === selectedCustomer\\\" (click)=\\\"onSelect(Address)\\\">\\r\\n                  <a class=\\\"dropdown-item\\\">{{Address.Name}}</a>\\r\\n                </li>\\r\\n            </div>\\r\\n      </div> \\r\\n        <div class=\\\"form-group \\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"inputAddress\\\" placeholder=\\\"Address1\\\"\\r\\n            [(ngModel)]=\\\"selectedCustomer.Address1\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group \\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"inputAddress2\\\" placeholder=\\\"Address2\\\"\\r\\n            [(ngModel)]=\\\"selectedCustomer.Address2\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\" col-md-5\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" id=\\\"inputCity\\\" placeholder=\\\"City\\\"\\r\\n              [(ngModel)]=\\\"selectedCustomer.City\\\">\\r\\n          </div>\\r\\n          <div class=\\\"col-md-4\\\">            \\r\\n            <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"inputState\\\"  id=\\\"inputState\\\" placeholder=\\\"State\\\"\\r\\n              [(ngModel)]=\\\"selectedCustomer.State\\\">\\r\\n          </div>\\r\\n          <div class=\\\" col-md-3\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"inputZip\\\" placeholder=\\\"Zip\\\"\\r\\n              [(ngModel)]=\\\"selectedCustomer.Zip\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n                                              \\r\\n  </div> -->\"","export default \"<!-- <div class=\\\"form-group dropright\\\">\\r\\n    <button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"drpBillTo\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n      Full Name:\\r\\n    </button>\\r\\n    <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"drpBillTo\\\">\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"#\\\">John Doe</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Bill Thompson</a>\\r\\n      <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Aaron David</a>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n       <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAddress\\\" placeholder=\\\"1234 Main St\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n       <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAddress2\\\" placeholder=\\\"Apartment, studio, or floor\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"form-group col-md-5\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputCity\\\" placeholder=\\\"City\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-md-4\\\">\\r\\n         <select id=\\\"inputState\\\" class=\\\"form-control\\\" aria-placeholder=\\\"State\\\">\\r\\n          <option selected>State...</option>\\r\\n          <option>AL</option>\\r\\n          <option>CA</option>\\r\\n          <option>TX</option>\\r\\n          <option>WA</option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-md-3\\\">\\r\\n       <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputZip\\\" placeholder=\\\"Zip\\\">\\r\\n      </div>\\r\\n    </div> -->\\r\\n\\r\\n    <div class=\\\"form-group\\\">    \\r\\n      <div class=\\\"row\\\" hidden=\\\"true\\\">\\r\\n        <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\">Address Key</span>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\" id=\\\"AddrKey\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"Address.AddrKey\\\"\\r\\n            name=\\\"AddrKey\\\">\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\">Line 1</span>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\" id=\\\"Addressline1\\\"  class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"Address.Address1\\\" \\r\\n            name=\\\"Address1\\\" (keypress)=\\\"onAddress1KeyPress($event)\\\">          \\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\">Line 2</span>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\" id=\\\"Addressline2\\\"  class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"Address.Address2\\\"\\r\\n            name=\\\"Address2\\\" (keypress)=\\\"onAddress2KeyPress($event)\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group input-group input-group-sm col-md-5\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\">City</span>\\r\\n          </div> \\r\\n          <div class=\\\"dropdown\\\">\\r\\n            <button class=\\\"btn btn-secondary dropdown-toggle form-control-sm\\\"  type=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n              {{citySelected}}\\r\\n            </button>\\r\\n            <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"drpcompany\\\">\\r\\n              <form class=\\\"px-4 py-2\\\">\\r\\n                <input type=\\\"search\\\" class=\\\"form-control  form-control-sm\\\" placeholder=\\\"search..\\\" autofocus=\\\"autofocus\\\"\\r\\n                (input)=\\\"onCitySearchChange($event.target.value)\\\">\\r\\n            </form>\\r\\n            <div class=\\\"menuItems\\\">\\r\\n              <li *ngFor=\\\"let city of CityFilter  let ind=index;\\\"\\r\\n                (click)=\\\"onCitySelect(city)\\\">\\r\\n                <small class=\\\"dropdown-item\\\">{{city.cityname}}</small>\\r\\n              </li>\\r\\n            </div>\\r\\n              <div *ngIf=\\\"IsNoEntry\\\" class=\\\"dropdown-header dropdown_empty\\\" style=\\\"color: chartreuse;\\\">No entry found!</div>\\r\\n            </div>\\r\\n          </div>       \\r\\n          <!-- \\r\\n\\r\\n          <select id=\\\"City\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"Address.City\\\"\\r\\n            name=\\\"City\\\" (change)=\\\"drpCityChanged($event.target.value)\\\">\\r\\n            <option *ngFor=\\\"let city of citylist\\\" [value]=\\\"city.citykey\\\">\\r\\n              {{city.cityname}}\\r\\n            </option>\\r\\n          </select>         -->\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group input-group input-group-sm col-md-4\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\">State</span>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\" id=\\\"State\\\"  class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"Address.State\\\"\\r\\n            name=\\\"State\\\" (keypress)=\\\"onStateKeyPress($event)\\\">        \\r\\n        </div>\\r\\n        <div class=\\\"form-group input-group input-group-sm col-md-3\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\">Zip</span>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\" id=\\\"Zip\\\"  class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"Address.Zip\\\"\\r\\n            name=\\\"Zip\\\" (keypress)=\\\"numberOnly($event);onZipKeyPress($event)\\\" appBlockCopyPaste>         \\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group input-group input-group-sm col-md-4\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\">Country</span>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\" id=\\\"Country\\\"  class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"Address.Country\\\"\\r\\n            name=\\\"Country\\\" (keypress)=\\\"onCountryKeyPress($event)\\\">\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"form-group input-group input-group-sm col-md-8\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\">Website</span>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\" id=\\\"Website\\\"  class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"Address.Website\\\"\\r\\n            name=\\\"Website\\\" appBlockCopyPaste (keypress)=\\\"onWebsiteKeyPress($event)\\\">        \\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\">Primary Phone</span>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\" id=\\\"Phone1\\\"  class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"Address.Phone\\\"\\r\\n            name=\\\"Phone\\\" (keypress)=\\\"numberOnly($event);onPhone1KeyPress($event)\\\" appBlockCopyPaste>\\r\\n          \\r\\n        </div>\\r\\n        <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\">Secondary Phone</span>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\" id=\\\"Phone2\\\"  class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"Address.Phone2\\\"\\r\\n            name=\\\"Phone2\\\" (keypress)=\\\"numberOnly($event);onPhone2KeyPress($event)\\\" appBlockCopyPaste>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"form-group input-group input-group-sm col-md-6\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\">Fax</span>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\" id=\\\"Fax\\\"  class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"Address.Fax\\\"\\r\\n            name=\\\"Fax\\\" (keypress)=\\\"numberOnly($event);onFaxKeyPress($event)\\\" appBlockCopyPaste>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\">Primary E-mail</span>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\" id=\\\"Email1\\\"  class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"Address.Email\\\"\\r\\n            name=\\\"Email\\\" (keypress)=\\\"onEmail1KeyPress($event)\\\" appBlockCopyPaste>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group input-group input-group-sm col-md-12\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\">Secondary E-mail</span>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\" id=\\\"Email2\\\"  class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"Address.Email2\\\"\\r\\n            name=\\\"Email2\\\" (keypress)=\\\"onEmail2KeyPress($event)\\\" appBlockCopyPaste>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\"","export default \"<!-- <div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-2\\\">Total Due:</div>\\r\\n  <div class=\\\"col-md-2\\\"><span style=\\\"font-weight:bold;color:blue\\\">$1500.00</span> </div>\\r\\n  <div class=\\\"col-md-2\\\"><button class=\\\"btn btn-pill btn-block btn-link\\\" type=\\\"button\\\" data-toggle=\\\"modal\\\" (click)=\\\"myModal.show()\\\">Breakup..</button>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n<div bsModal #myModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Rates</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"myModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <label>Base Rate</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"0.00\\\">\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n\\r\\n            <label># items</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"0\\\">\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n\\r\\n            <label>Sub Total</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"0\\\">\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n       <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <label>Stop off</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"0.00\\\">\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n\\r\\n            <label>Demurrage</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"0.00\\\">\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n\\r\\n            <label>ForkLift</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"0.00\\\">\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <label>Incoming Freight</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"0.00\\\">\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n\\r\\n            <label>Outgoing Freight</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"0.00\\\">\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n\\r\\n            <label>Drop & Pull</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"0.00\\\">\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <label>Overweight</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"0.00\\\">\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n\\r\\n            <label>Warehouse Storage</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"0.00\\\">\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n\\r\\n            <label>Chassis Fee</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"0.00\\\">\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n       \\r\\n      \\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"myModal.hide()\\\">Close</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Save changes</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div> -->\"","export default \"<!-- <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit(form.value)\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n    <div class=\\\"form-row\\\" [hidden]=\\\"!isContainerAttributeVisible\\\">\\r\\n\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n            <input class=\\\"form-control bg-light\\\" type=\\\"text\\\" placeholder=\\\"Size\\\" id=\\\"newcontainerSize\\\"\\r\\n                [(ngModel)]=\\\"newAttribute.ContainerSize\\\" name=\\\"ContainerSize\\\" #ContainerSize=\\\"ngModel\\\"\\r\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && ContainerSize.invalid }\\\" required />\\r\\n\\r\\n            <div *ngIf=\\\"f.submitted && ContainerSize.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"ContainerSize.errors.required\\\"> container size is required</div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n              \\r\\n            <select class=\\\"form-control bg-light\\\" id=\\\"drpnewcontainerType\\\" placeholder=\\\"Type\\\" name=\\\"ContainerNo\\\"\\r\\n                [(ngModel)]=\\\"newAttribute.ContainerNo\\\" #ContainerNo=\\\"ngModel\\\"\\r\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && ContainerNo.invalid }\\\" required>\\r\\n                <option [value]=\\\"container.Value\\\" *ngFor=\\\"let container of containersizelist\\\">{{container.Name}}</option>\\r\\n            </select>\\r\\n            <div *ngIf=\\\"f.submitted && ContainerNo.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"ContainerNo.errors.required\\\"> container no is required</div>\\r\\n            </div> \\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n            <input class=\\\"form-control bg-light\\\" type=\\\"text\\\" placeholder=\\\"chassis\\\" id=\\\"newchassis\\\"\\r\\n                [(ngModel)]=\\\"newAttribute.Chassis\\\" name=\\\"Chassis\\\" #Chassis=\\\"ngModel\\\"\\r\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && Chassis.invalid }\\\" required />\\r\\n\\r\\n            <div *ngIf=\\\"f.submitted && Chassis.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"Chassis.errors.required\\\"> chassis is required</div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n            <input class=\\\"form-control bg-light\\\" type=\\\"text\\\" placeholder=\\\"seal no\\\" id=\\\"newseaNo\\\"\\r\\n                [(ngModel)]=\\\"newAttribute.SealNo\\\" name=\\\"SealNo\\\" #SealNo=\\\"ngModel\\\"\\r\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && SealNo.invalid }\\\" required />\\r\\n\\r\\n            <div *ngIf=\\\"f.submitted && SealNo.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"SealNo.errors.required\\\"> seal no is required</div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n            <input [(ngModel)]=\\\"newAttribute.Weight\\\" class=\\\"form-control bg-light\\\" placeholder=\\\"weight\\\" type=\\\"text\\\" name=\\\"Weight\\\"\\r\\n                #Weight=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && Weight.invalid }\\\" required />\\r\\n\\r\\n\\r\\n            <div *ngIf=\\\"f.submitted && Weight.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"Weight.errors.required\\\"> weight is required</div>\\r\\n            </div>\\r\\n        </div>\\r\\n       \\r\\n            <input type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\" id=\\\"AppDateFrom\\\" name=\\\"AppDateFrom\\\"\\r\\n                placeholder=\\\"Choose a date\\\" [(ngModel)]=\\\"newAttribute.AppDateFrom\\\" class=\\\"form-control bg-light\\\"\\r\\n                #AppDateFrom=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && AppDateFrom.invalid }\\\" required />\\r\\n\\r\\n            <div *ngIf=\\\"f.submitted && AppDateFrom.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"AppDateFrom.errors.required\\\"> appt from date is required</div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n            <input type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\" [(ngModel)]=\\\"newAttribute.AppDateTo\\\"\\r\\n                class=\\\"form-control bg-light\\\" name=\\\"AppDateTo\\\" placeholder=\\\"apptdateto\\\" #AppDateTo=\\\"ngModel\\\"\\r\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && AppDateTo.invalid }\\\" required />\\r\\n\\r\\n            <div *ngIf=\\\"f.submitted && AppDateTo.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"AppDateTo.errors.required\\\"> appt to date is required</div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n            <input [(ngModel)]=\\\"newAttribute.Status\\\" class=\\\"form-control bg-light\\\" type=\\\"text\\\" name=\\\"Status\\\" placeholder=\\\"status\\\"\\r\\n                #Status=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && Status.invalid }\\\" required />\\r\\n\\r\\n            <div *ngIf=\\\"f.submitted && Status.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"Status.errors.required\\\"> Status is required</div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n            <input type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\" [(ngModel)]=\\\"newAttribute.StatusDate\\\"\\r\\n                class=\\\"form-control bg-light\\\" name=\\\"StatusDate\\\" placeholder=\\\"statusdate\\\" #StatusDate=\\\"ngModel\\\"\\r\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && StatusDate.invalid }\\\" required />\\r\\n\\r\\n            <div *ngIf=\\\"f.submitted && StatusDate.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"StatusDate.errors.required\\\"> Status date is required</div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n            <input [(ngModel)]=\\\"newAttribute.HoldReason\\\" class=\\\"form-control bg-light\\\" type=\\\"text\\\" name=\\\"HoldReason\\\"\\r\\n                placeholder=\\\"HoldReason\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n            <input type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\" [(ngModel)]=\\\"newAttribute.HoldDate\\\"\\r\\n                class=\\\"form-control bg-light\\\" name=\\\"HoldDate\\\" placeholder=\\\"HoldDate\\\" />\\r\\n        </div> \\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-outline-success\\\" [disabled]=\\\"!f.form.valid\\\"\\r\\n                (click)=\\\"addFieldValue()\\\">Add Container</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n<br> -->\\r\\n<div class=\\\"row\\\" [hidden]=\\\"!isContainerAttributeVisible\\\">\\r\\n    <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"form-group col-sm-2 col-md-2 col-lg-2\\\">\\r\\n                <label for=\\\"ContainerNo\\\">Container</label>\\r\\n                <input class=\\\"form-control form-control-sm \\\" type=\\\"text\\\" aria-placeholder=\\\"Container\\\"\\r\\n                    [(ngModel)]=\\\"ContainerNo\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-sm-1 col-md-1 col-lg-1\\\">\\r\\n                <label for=\\\"ContainerSize\\\">Size</label>\\r\\n                <select id=\\\"drpcontainerType\\\" class=\\\"form-control form-control-sm \\\" aria-placeholder=\\\"ContainerSize\\\"\\r\\n                    [(ngModel)]=\\\"ContainerSize\\\" (change)=\\\"drpcontainersizeChanged($event.target.value)\\\">\\r\\n                    <option [value]=\\\"container.containersize\\\" *ngFor=\\\"let container of containersizelist\\\">\\r\\n                        {{container.description}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-sm-2 col-md-2 col-lg-2\\\">\\r\\n                <label for=\\\"Chassis\\\">Chassis</label>\\r\\n                <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" aria-placeholder=\\\"Chassis\\\"\\r\\n                    [(ngModel)]=\\\"Chassis\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-sm-2 col-md-2 col-lg-2\\\">\\r\\n                <label for=\\\"SealNo\\\">SealNo</label>\\r\\n                <input class=\\\"form-control form-control-sm \\\" type=\\\"text\\\" aria-placeholder=\\\"SealNo\\\"\\r\\n                    [(ngModel)]=\\\"SealNo\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-sm-1 col-md-1 col-lg-1\\\">\\r\\n                <label for=\\\"Weight\\\">Weight</label>\\r\\n                <input class=\\\"form-control form-control-sm \\\" type=\\\"text\\\" aria-placeholder=\\\"Weight\\\"\\r\\n                    [(ngModel)]=\\\"Weight\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-sm-3 col-md-3 col-lg-3\\\">\\r\\n                <label for=\\\"Comments\\\">Comments</label>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n                        <input type=\\\"checkbox\\\" value=\\\"Hazard\\\" [(ngModel)]=\\\"Comments\\\" id=\\\"Hazard\\\"\\r\\n                            (change)=\\\"Checkbox1_Change($event)\\\" /> <label><small> Hazard</small></label><br>\\r\\n                        <input type=\\\"checkbox\\\" value=\\\"Over weight\\\" [(ngModel)]=\\\"overweight\\\" id=\\\"Overweight\\\"\\r\\n                            (change)=\\\"Checkbox2_Change($event)\\\" /><label> <small> Over weight</small></label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n                        <input type=\\\"checkbox\\\" value=\\\"Triaxle\\\" [(ngModel)]=\\\"trixale\\\" id=\\\"Triaxle\\\"\\r\\n                            (change)=\\\"Checkbox3_Change($event)\\\" /><label> <small>Triaxle</small></label><br>\\r\\n                        <input type=\\\"checkbox\\\" value=\\\"Needs to be scaled\\\" [(ngModel)]=\\\"needstobescaled\\\"\\r\\n                            id=\\\"Needstobescaled\\\" (change)=\\\"Checkbox4_Change($event)\\\" /><label><small> Needs to be\\r\\n                            scaled</small></label>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-sm-1 col-md-1 col-lg-1\\\">\\r\\n                <label for=\\\"Comments\\\"></label> <br>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"add()\\\">+</button>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"table-responsive\\\" style=\\\"overflow-x: auto\\\" *ngIf=\\\"ContainerDetails.length>0\\\">\\r\\n            <table id=\\\"containerAttributes\\\" class=\\\"table table-sm table-borderless bg-light\\\" cellspacing=\\\"0\\\"\\r\\n                width=\\\"100%\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th scope=\\\"col\\\">Container#</th>\\r\\n                        <th scope=\\\"col\\\" hidden=\\\"true\\\"> Size</th>\\r\\n                        <th scope=\\\"col\\\"> Size</th>\\r\\n                        <th scope=\\\"col\\\">Chassis#</th>\\r\\n                        <th scope=\\\"col\\\">Seal#</th>\\r\\n                        <th scope=\\\"col\\\">Weight</th>\\r\\n                        <th scope=\\\"col\\\">Comment</th>\\r\\n                        <th scope=\\\"col\\\"></th>\\r\\n                        <th scope=\\\"col\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr align=\\\"center\\\" *ngFor=\\\"let field of ContainerDetails; let i = index\\\">\\r\\n                        <td> <input [(ngModel)]=\\\"field.ContainerNo\\\" class=\\\"form-control form-control-sm \\\" type=\\\"text\\\"\\r\\n                                name=\\\"{{field.ContainerNo}}\\\" /> </td>\\r\\n                        <td hidden=\\\"true\\\">\\r\\n\\r\\n                            <input [(ngModel)]=\\\"field.ContainerSize\\\" class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"\\r\\n                                name=\\\"{{field.ContainerSize}}\\\" />\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <input [(ngModel)]=\\\"field.containerSizeDesc\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                                type=\\\"text\\\" name=\\\"{{field.containerSizeDesc}}\\\" />\\r\\n                        </td>\\r\\n                        <td> <input [(ngModel)]=\\\"field.Chassis\\\" class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"\\r\\n                                name=\\\"{{field.Chassis}}\\\" /></td>\\r\\n                        <td> <input [(ngModel)]=\\\"field.SealNo\\\" class=\\\"form-control form-control-sm \\\" type=\\\"text\\\"\\r\\n                                name=\\\"{{field.SealNo}}\\\" /></td>\\r\\n                        <td> <input [(ngModel)]=\\\"field.Weight\\\" class=\\\"form-control form-control-sm \\\" type=\\\"text\\\"\\r\\n                                name=\\\"{{field.Weight}}\\\" /></td>\\r\\n                        <td>\\r\\n                            <input [(ngModel)]=\\\"field.Comments\\\" class=\\\"form-control form-control-sm \\\" type=\\\"text\\\"\\r\\n                                name=\\\"{{field.Comments}}\\\" />\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"deleteFieldValue(i)\\\"><img\\r\\n                                    src=\\\"assets/img/brand/trash-icon16px.png\\\" /></button>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"edit(i)\\\"><span class=\\\"fa fa-pencil-square-o\\\"></span></button>\\r\\n\\r\\n                                    \\r\\n                        </td>\\r\\n\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- <div class=\\\"col-sm-1 col-md-1 col-lg-1\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"addFieldValue()\\\">+</button>\\r\\n    </div> -->\\r\\n</div>\"","export default \"<div class=\\\"form-group dropright\\\">\\r\\n  <select [(ngModel)]=\\\"selectedContainerSize\\\" *ngIf=\\\"drpContainerSize\\\">\\r\\n    <option *ngFor='let container of drpContainerSize' [ngValue]=\\\"Value\\\">\\r\\n      {{container.Name}}\\r\\n    </option>\\r\\n  </select>\\r\\n</div>\"","export default \"<br>\\r\\n<div class=\\\"accordion\\\" id=\\\"accordionExample\\\">\\r\\n  <div class=\\\"card text-white border-dark bg-secondary\\\">\\r\\n    <div class=\\\"card-header\\\" >\\r\\n      <h6 class=\\\"mb-0\\\">\\r\\n         Order Summary\\r\\n      </h6>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <!-- <h5 class=\\\"card-title\\\">Order Detail</h5> -->\\r\\n        <h6 class=\\\"card-subtitle mb-2 text-muted\\\">Delivery Order info</h6><br>\\r\\n        <p class=\\\"card-subtitle mb-2 text-muted\\\">Orderno  <span style=\\\"color:blue\\\">{{orderinfo.OrderNo}}</span> </p>\\r\\n        <p class=\\\"card-subtitle mb-2 text-muted\\\">  Date   <span style=\\\"color:black\\\">{{orderinfo.OrderDate}}</span></p>\\r\\n        <p class=\\\"card-subtitle mb-2 text-muted\\\">  Status    <span style=\\\"color:orange\\\">{{orderinfo.statusdescription}}</span> </p><br>\\r\\n        <p class=\\\"card-subtitle mb-2 text-muted\\\">  BrokerRefNo    <span style=\\\"color:orange\\\">{{orderinfo.BrokerRefNo}}</span> </p><br>\\r\\n        <p class=\\\"card-subtitle mb-2 text-muted\\\">  VesselName    <span style=\\\"color:orange\\\">{{orderinfo.VesselName}}</span> </p><br>\\r\\n        <p class=\\\"card-subtitle mb-2 text-muted\\\">  BillofLading    <span style=\\\"color:orange\\\">{{orderinfo.BillofLading}}</span> </p><br>\\r\\n        \\r\\n        <!-- <p class=\\\"card-subtitle mb-2 text-muted\\\">  containerSize    <span style=\\\"color:orange\\\">{{orderinfo.orderdetails.containerSize}}</span> </p><br> -->\\r\\n                \\r\\n        <table class=\\\"table table-sm table-borderless\\\">    \\r\\n          <tbody>\\r\\n            <tr>\\r\\n              <td>               \\r\\n                <div class=\\\"card text-white border-primary bg-primary mb-3\\\" >\\r\\n                    <div class=\\\"card-header\\\">Customer</div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                      <h5 class=\\\"card-title\\\">Customer Details</h5>\\r\\n                       <p class=\\\"card-text\\\">   MaerskLine </p>\\r\\n                       <p class=\\\"card-text\\\">   Milestone Buildcon</p>\\r\\n                       <p class=\\\"card-text\\\">   bhartiya city, Chokanahalli</p>\\r\\n                       <p class=\\\"card-text\\\">   Bengaluru, Karnataka 560064 </p>\\r\\n                       <p class=\\\"card-text\\\">   India 560064 </p>       \\r\\n                  \\r\\n                    </div>\\r\\n                  </div>\\r\\n              </td>\\r\\n              <td>\\r\\n                  <div class=\\\"card text-white bg-secondary  mb-3\\\" >\\r\\n                      <div class=\\\"card-header\\\">Pickup/Loading</div>\\r\\n                      <div class=\\\"card-body\\\">\\r\\n                        <h5 class=\\\"card-title\\\">Customer Details</h5>\\r\\n                         <p class=\\\"card-text\\\">   MaerskLine </p>\\r\\n                         <p class=\\\"card-text\\\">   Milestone Buildcon</p>\\r\\n                         <p class=\\\"card-text\\\">   bhartiya city, Chokanahalli</p>\\r\\n                         <p class=\\\"card-text\\\">   Bengaluru, Karnataka 560064 </p>\\r\\n                         <p class=\\\"card-text\\\">   India 560064 </p>       \\r\\n                    \\r\\n                      </div>\\r\\n                    </div>\\r\\n              </td>\\r\\n              <td>               \\r\\n                <div class=\\\"card text-white bg-info mb-3\\\" >\\r\\n                    <div class=\\\"card-header\\\">Consignee</div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                      <h5 class=\\\"card-title\\\">Customer Details</h5>\\r\\n                       <p class=\\\"card-text\\\">   MaerskLine </p>\\r\\n                       <p class=\\\"card-text\\\">   Milestone Buildcon</p>\\r\\n                       <p class=\\\"card-text\\\">   bhartiya city, Chokanahalli</p>\\r\\n                       <p class=\\\"card-text\\\">   Bengaluru, Karnataka 560064 </p>\\r\\n                       <p class=\\\"card-text\\\">   India 560064 </p>       \\r\\n                  \\r\\n                    </div>\\r\\n                  </div>\\r\\n              </td>\\r\\n              <td>\\r\\n                  <div class=\\\"card text-white bg-info mb-3\\\" >\\r\\n                      <div class=\\\"card-header\\\">Return</div>\\r\\n                      <div class=\\\"card-body\\\">\\r\\n                        <h5 class=\\\"card-title\\\">Customer Details</h5>\\r\\n                         <p class=\\\"card-text\\\">   MaerskLine </p>\\r\\n                         <p class=\\\"card-text\\\">   Milestone Buildcon</p>\\r\\n                         <p class=\\\"card-text\\\">   bhartiya city, Chokanahalli</p>\\r\\n                         <p class=\\\"card-text\\\">   Bengaluru, Karnataka 560064 </p>\\r\\n                         <p class=\\\"card-text\\\">   India 560064 </p>       \\r\\n                    \\r\\n                      </div>\\r\\n                    </div>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td> \\r\\n                  <div class=\\\"card text-white bg-dark mb-4\\\" >\\r\\n                      <div class=\\\"card-header\\\">Broker</div>\\r\\n                      <div class=\\\"card-body\\\">\\r\\n                        <h5 class=\\\"card-title\\\">Customer Details</h5>\\r\\n                         <p class=\\\"card-text\\\">   MaerskLine </p>\\r\\n                         <p class=\\\"card-text\\\">   Milestone Buildcon</p>\\r\\n                         <p class=\\\"card-text\\\">   bhartiya city, Chokanahalli</p>\\r\\n                         <p class=\\\"card-text\\\">   Bengaluru, Karnataka 560064 </p>\\r\\n                         <p class=\\\"card-text\\\">   India 560064 </p>       \\r\\n                    \\r\\n                      </div>\\r\\n                    </div>\\r\\n              </td>  \\r\\n                <!-- <td rowspan=\\\"2\\\" colspan=\\\"2\\\"> -->\\r\\n                  <td>\\r\\n                    <div class=\\\"card\\\" >\\r\\n                        <div class=\\\"card-header\\\" >        \\r\\n                             Order Detail info       \\r\\n                        </div>\\r\\n                        <div class=\\\"card-body\\\">\\r\\n                            <div class=\\\"table-responsive\\\" style=\\\"overflow-x: auto\\\">\\r\\n                                <table id=\\\"containerAttributes\\\" class=\\\"table table-sm\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\">\\r\\n                                    <thead>\\r\\n                                        <tr>\\r\\n                                            <th scope=\\\"col\\\">Container No</th>\\r\\n                                            <th scope=\\\"col\\\">Container Size</th>\\r\\n                                            <th scope=\\\"col\\\">Chassis_No</th>\\r\\n                                            <th scope=\\\"col\\\">Seal No</th>\\r\\n                                            <th scope=\\\"col\\\">Weight in lbs</th>\\r\\n                                            <th scope=\\\"col\\\">appt date From</th>\\r\\n                                            <th scope=\\\"col\\\">appt date To</th>\\r\\n                                            <!-- <th scope=\\\"col\\\">Status</th>\\r\\n                                            <th scope=\\\"col\\\">Date</th>\\r\\n                                            <th scope=\\\"col\\\">Hold_Reason</th>\\r\\n                                            <th scope=\\\"col\\\">Date</th>\\r\\n                                            <th scope=\\\"col\\\">Action</th> -->\\r\\n                            \\r\\n                                        </tr>\\r\\n                                    </thead>\\r\\n                                    <tbody>\\r\\n                                        <tr *ngFor=\\\"let field of orderinfo.orderdetails; let i = index\\\">\\r\\n                                            <td>{{field.ContainerSize}} </td>\\r\\n                                            <td>\\r\\n                                                <select id=\\\"drpcontainerType\\\" class=\\\"form-control form-control-sm text-primary\\\"\\r\\n                                                    aria-placeholder=\\\"containerNo\\\" name=\\\"{{field.ContainerNo}}\\\" [(ngModel)]=\\\"field.ContainerNo\\\">\\r\\n                                                    <option value=1>20DRY</option>\\r\\n                                                    <option value=2>40DRY</option>\\r\\n                                                    <option value=3>40HDRY</option>\\r\\n                                                    <option value=4>45HDRY</option>\\r\\n                                                    <option value=5>20OPEN</option>\\r\\n                                                    <option value=6>40OPEN</option>\\r\\n                                                    <option value=7>20FLAT</option>\\r\\n                                                    <option value=8>40FLAT</option>\\r\\n                                                </select>\\r\\n                                            </td>          \\r\\n                                            <td> {{field.Chassis}}</td>\\r\\n                                            <td> {{field.SealNo}}</td>\\r\\n                                            <td> {{field.Weight}}</td>\\r\\n                                            <td> {{field.AppDateFrom}}</td>\\r\\n                                            <td> {{field.ApptDateTo}} </td>\\r\\n                                            <!-- <td> {{field.Status}}</td>\\r\\n                                            <td> {{field.StatusDate}}</td>\\r\\n                                            <td> {{field.HoldReason}}</td>\\r\\n                                            <td> {{field.HoldDate}}</td>-->\\r\\n                                        </tr>\\r\\n                                       \\r\\n                                    </tbody>\\r\\n                                </table>\\r\\n                            </div>\\r\\n                        </div> \\r\\n                    \\r\\n                      </div>\\r\\n  \\r\\n                </td>           \\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td ></td>\\r\\n              \\r\\n              <td></td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n        <!-- <p class=\\\"card-text\\\" style=\\\"color:darkslategray\\\">Comment :We use cookies for statistical analysis and to improve the friendliness and usability \\r\\n            of our website. By visiting our website,  you consent to our and third party use of cookis as described \\r\\n            in our privacy and cookie policy. We use cookies for statistical analysis and to improve the friendliness and usability \\r\\n            of our website. By visiting our website,  you consent to our and third party use of cookis as described \\r\\n            in our privacy and cookie policy..</p> -->\\r\\n        \\r\\n    </div> \\r\\n\\r\\n  </div>\\r\\n\\r\\n \\r\\n</div>\"","export default \"<br>\\r\\n\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"openModal()\\\">Open Modal</button>\\r\\n\"","export default \"<!-- \\r\\n\\r\\n<div class=\\\"table-responsive-sm small\\\" style=\\\"overflow-x: auto\\\">\\r\\n  <table id=\\\"containerAttributes\\\" class=\\\"table table-sm\\\">\\r\\n    <thead class=\\\"thead-light\\\">\\r\\n      <tr>\\r\\n        <th scope=\\\"col\\\" style=\\\"display:none\\\">OrderDetailKey</th>\\r\\n        <th scope=\\\"col\\\">Container#</th>\\r\\n        <th scope=\\\"col\\\">Chassis#</th>\\r\\n        <th scope=\\\"col\\\">Seal#</th>\\r\\n        <th scope=\\\"col\\\">Weight</th>\\r\\n        <th scope=\\\"col\\\">Appt.Date From</th>\\r\\n        <th scope=\\\"col\\\">Appt.Date To</th>\\r\\n        <th scope=\\\"col\\\">PickupDate</th>\\r\\n        <th scope=\\\"col\\\">PickupTime</th>\\r\\n        <th scope=\\\"col\\\" >DropOffDate</th>\\r\\n        <th scope=\\\"col\\\">DropOffTime</th>\\r\\n        <th scope=\\\"col\\\">Status</th>\\r\\n        <th scope=\\\"col\\\">..</th>\\r\\n\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let field of ContainerDetails; let i = index\\\" class=\\\"clickable-row\\\" data-toggle=\\\"collapse\\\" [attr.data-target]=\\\"'#game2Details' + i\\\">\\r\\n         \\r\\n        <td hidden=\\\"true\\\" style=\\\"display:none\\\">\\r\\n          <input [(ngModel)]=\\\"field.OrderDetailKey\\\" class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"\\r\\n            name=\\\"{{field.OrderDetailKey}}\\\" />\\r\\n        </td>\\r\\n        <td>\\r\\n          {{field.ContainerSize}} \\r\\n        </td>\\r\\n\\r\\n        <td>\\r\\n          {{field.Chassis}}\\r\\n        </td>\\r\\n        <td>\\r\\n\\r\\n          {{field.SealNo}}\\r\\n        </td>\\r\\n        <td >\\r\\n\\r\\n          {{field.Weight}}\\r\\n        </td>\\r\\n        <td >\\r\\n          {{field.AppDateFrom}}\\r\\n        </td>\\r\\n        <td >\\r\\n          {{field.AppDateTo}}\\r\\n        </td>\\r\\n        <td>\\r\\n          {{field.Pickupdate}}\\r\\n        </td>\\r\\n        <td>\\r\\n          {{field.Pickuptime}}\\r\\n        </td>\\r\\n        <td>\\r\\n          {{field.DropOffdate}}\\r\\n        </td>\\r\\n        <td>\\r\\n          {{field.DropOfftime}}\\r\\n        </td>\\r\\n        <td>\\r\\n          {{field.Status}}\\r\\n        </td>\\r\\n\\r\\n\\r\\n        <td>\\r\\n         <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\" (click)=\\\"collapseSign(field)\\\"\\r\\n            data-toggle=\\\"collapse\\\" data-target=\\\"#collapseDriverdetails\\\" aria-expanded=\\\"false\\\"\\r\\n            aria-controls=\\\"collapseDriverdetails\\\">\\r\\n            {{collapsesign}}\\r\\n          </button> \\r\\n\\r\\n          <button class=\\\"btn btn-outline-primary btn-block\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" [attr.data-target]=\\\"'#collapse-' + i\\\" [attr.aria-expanded]=\\\"false\\\" [attr.aria-controls] = \\\"'collapse-' + i\\\"></button>\\r\\n        \\r\\n        </td>\\r\\n      </tr>\\r\\n         <td >\\r\\n          <div class=\\\"collapse small\\\" id=\\\"collapseDriverdetails\\\" >\\r\\n            <div class=\\\"card card-body\\\">\\r\\n              <table class=\\\"table table-sm bg-dark\\\">\\r\\n                <thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\">Driver</th>\\r\\n                    <th scope=\\\"col\\\">Notes</th>\\r\\n                    <th scope=\\\"col\\\">Action</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr>\\r\\n                    <td>\\r\\n                      <select id=\\\"drpStatus\\\" class=\\\"form-control form-control-sm bg-dark\\\" style=\\\"width: 100px\\\">\\r\\n                        <option [value]=\\\"driver.driverkey\\\" *ngFor=\\\"let driver of driverList\\\">{{driver.driverid}}\\r\\n                        </option>\\r\\n                      </select>\\r\\n\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" name=\\\"{{field.drivernotes}}\\\"\\r\\n                        [(ngModel)]=\\\"field.drivernotes\\\"/>\\r\\n               \\r\\n                    </td>\\r\\n\\r\\n                    <td>\\r\\n                      <button class=\\\"btn btn-primary btn-sm\\\" type=\\\"button\\\"\\r\\n                        (click)=\\\"ScheduleFieldValue(field)\\\">Dispatch</button>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n              </table>\\r\\n            </div>\\r\\n          </tr>\\r\\n        </td> \\r\\n        <tr [attr.id]=\\\"'game2Details' + i\\\" class=\\\"collapse\\\">\\r\\n            <td colspan=\\\"3\\\">Insert a large component in this place</td>\\r\\n        </tr>\\r\\n    \\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n  <div class=\\\"collapse\\\" id=\\\"collapseDriverdetails\\\">\\r\\n    <div class=\\\"card card-body\\\">\\r\\n      <table class=\\\"table table-sm bg-dark\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\">Entry Date</th>\\r\\n            <th scope=\\\"col\\\">Driver</th>\\r\\n            <th scope=\\\"col\\\">Action Date</th>\\r\\n            <th scope=\\\"col\\\">Load Status</th>\\r\\n            <th scope=\\\"col\\\">Driver Money</th>\\r\\n            <th scope=\\\"col\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <input class=\\\"form-control form-control-sm bg-dark\\\" type=\\\"date\\\" />\\r\\n            </td>\\r\\n            <td>\\r\\n              <select id=\\\"drpStatus\\\" class=\\\"form-control form-control-sm bg-dark\\\" style=\\\"width: 100px\\\">\\r\\n                <option value=1>Celb Howard</option>\\r\\n                <option value=2>Lan Weiland</option>\\r\\n              </select>\\r\\n            </td>\\r\\n            <td>\\r\\n              <input class=\\\"form-control form-control-sm bg-dark\\\" type=\\\"date\\\" />\\r\\n            </td>\\r\\n            <td>\\r\\n              <select id=\\\"drpStatus\\\" class=\\\"form-control form-control-sm bg-dark\\\" style=\\\"width: 100px\\\">\\r\\n                <option value=1>To Storage</option>\\r\\n                <option value=2>Hazardeous</option>\\r\\n                <option value=2>Roundtrip</option>\\r\\n              </select>\\r\\n            </td>\\r\\n            <td>\\r\\n              <input class=\\\"form-control form-control-sm bg-dark\\\" type=\\\"text\\\" />\\r\\n            </td>\\r\\n            <td>\\r\\n              <button class=\\\"btn btn-primary btn-sm\\\" type=\\\"button\\\"\\r\\n                (click)=\\\"ScheduleFieldValue(field)\\\">Dispatch</button>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div> \\r\\n</div> -->\\r\\n\\r\\n<table class=\\\"table table-sm\\\">\\r\\n  <thead class=\\\"thead-light\\\">\\r\\n    <tr>\\r\\n      <th scope=\\\"col\\\"></th>\\r\\n      <th scope=\\\"col\\\" style=\\\"display:none\\\">OrderDetailKey</th>\\r\\n      <th scope=\\\"col\\\">Container#</th>\\r\\n      <th scope=\\\"col\\\">Chassis#</th>\\r\\n      <th scope=\\\"col\\\">Seal#</th>\\r\\n      <th scope=\\\"col\\\">Weight</th>\\r\\n      <th scope=\\\"col\\\">Appt.Date From</th>\\r\\n      <th scope=\\\"col\\\">Appt.Date To</th>\\r\\n      <th scope=\\\"col\\\">PickupDate</th>\\r\\n      <th scope=\\\"col\\\">PickupTime</th>\\r\\n      <th scope=\\\"col\\\">DropOffDate</th>\\r\\n      <th scope=\\\"col\\\">DropOffTime</th>\\r\\n      <th scope=\\\"col\\\">Status</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <ng-container *ngFor=\\\"let field of ContainerDetails; index as i\\\">\\r\\n      <tr>\\r\\n        <td>\\r\\n          <button class=\\\"btn btn-secondary btn-block rounded-circle btn-sm\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\"\\r\\n            [attr.data-target]=\\\"'#collapse-' + i\\\" [attr.aria-expanded]=\\\"false\\\" [attr.aria-controls]=\\\"'collapse-' + i\\\"> +\\r\\n          </button>\\r\\n        </td>\\r\\n        <td hidden=\\\"true\\\" style=\\\"display:none\\\">\\r\\n          <input [(ngModel)]=\\\"field.OrderDetailKey\\\" class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"\\r\\n            name=\\\"{{field.OrderDetailKey}}\\\" />\\r\\n        </td>\\r\\n        <td>\\r\\n          {{field.ContainerSize}}\\r\\n        </td>\\r\\n        <td>\\r\\n          {{field.Chassis}}\\r\\n        </td>\\r\\n        <td>\\r\\n          {{field.SealNo}}\\r\\n        </td>\\r\\n        <td>\\r\\n          {{field.Weight}}\\r\\n        </td>\\r\\n        <td>\\r\\n          {{field.AppDateFrom}}\\r\\n        </td>\\r\\n        <td>\\r\\n          {{field.AppDateTo}}\\r\\n        </td>\\r\\n        <td>\\r\\n          {{field.Pickupdate}}\\r\\n        </td>\\r\\n        <td>\\r\\n          {{field.Pickuptime}}\\r\\n        </td>\\r\\n        <td>\\r\\n          {{field.DropOffdate}}\\r\\n        </td>\\r\\n        <td>\\r\\n          {{field.DropOfftime}}\\r\\n        </td>\\r\\n        <td>\\r\\n          {{field.Status}}\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td colspan=\\\"15\\\" class=\\\"collapse-row\\\">\\r\\n          <div [attr.id]=\\\"'collapse-' + i\\\" class=\\\"collapse out\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-4\\\"> \\r\\n                <div class=\\\"input-group input-group-sm\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Driver</span>\\r\\n                  </div>\\r\\n                  <select id=\\\"drpdriver\\\" class=\\\"form-control form-control-sm\\\" name=\\\"{{field.driverkey}}\\\" [(ngModel)]=\\\"field.driverkey\\\">\\r\\n                    <option [value]=\\\"driver.DriverKey\\\" *ngFor=\\\"let driver of driverList\\\">{{driver.DriverId}}</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6\\\">                \\r\\n                <div class=\\\"input-group input-group-sm\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">Notes</span>\\r\\n                    </div>\\r\\n                    <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" name=\\\"{{field.drivernotes}}\\\" [(ngModel)]=\\\"field.drivernotes\\\" />\\r\\n                  </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-1\\\">\\r\\n                <button class=\\\"btn btn-secondary btn-block  btn-sm\\\" type=\\\"button\\\" (click)=\\\"ScheduleFieldValue(field)\\\">Submit</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </ng-container>\\r\\n  </tbody>\\r\\n</table>\"","export default \"<br>\\r\\n\\r\\n<div id=\\\"accordion\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 border-right ScrollStyle\\\">\\r\\n      <ul class=\\\"list-unstyled\\\">\\r\\n        <li><h5>Containers <span class=\\\"badge badge-dark\\\">Recent</span></h5><br></li>\\r\\n        <li *ngFor=\\\"let order of ContainerDetails; let ind=index;\\\">\\r\\n          <ul>\\r\\n            <li> <p style=\\\"font-family:calibri;\\\">  <a [routerLink]=\\\"\\\" (click)=\\\"rowclickEvent(order)\\\">{{order.ContainerNo}}\\r\\n                <span class=\\\"badge\\\" *ngIf=\\\"selectedKey===order.OrderDetailKey\\\">\\r\\n                    <img src=\\\"assets/img/brand/symbol-check16px.png\\\" /> </span> </a> </p> </li>\\r\\n          </ul>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-sm-10 col-md-10 col-lg-10\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n          <h5 class=\\\"card-subtitle mb-2\\\" style=\\\"color: black\\\">\\r\\n            <img src=\\\"assets/img/brand/text-padding16px.png\\\" /> Dispatch Assignment</h5>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\" *ngIf=\\\"showDispatch\\\">\\r\\n          <div class=\\\"container text-right\\\">\\r\\n            <button class=\\\"btn btn-primary btn-sm small\\\" type=\\\"button\\\" (click)=\\\"update()\\\">Send to Dispatch\\r\\n              Delivery</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"showDispatch\\\">\\r\\n        <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-3\\\">\\r\\n                      <div class=\\\"input-group input-group-sm\\\">\\r\\n                        <div class=\\\"input-group-prepend\\\">\\r\\n                          <span class=\\\"input-group-text\\\">Driver</span>\\r\\n                        </div>\\r\\n                        <select id=\\\"drpdriver\\\" class=\\\"form-control form-control-sm\\\" name=\\\"driverkey\\\"\\r\\n                          [(ngModel)]=\\\"driverkey\\\">\\r\\n                          <option [value]=\\\"driver.DriverKey\\\" *ngFor=\\\"let driver of driverList\\\">{{driver.DriverId}}\\r\\n                          </option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <textarea class=\\\"form-control\\\" id=\\\"txtNotes\\\" placeholder=\\\"Notes\\\" name=\\\"drivernotes\\\"\\r\\n                        [(ngModel)]=\\\"drivernotes\\\"></textarea>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <hr>\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-3\\\">\\r\\n                      <!-- <span style=\\\"color: white\\\">Order no </span><br> -->\\r\\n                      <div class=\\\"panel-heading\\\">\\r\\n                        <span class=\\\"panel-title\\\" style=\\\"color:black\\\">Order No :</span>\\r\\n                        <span style=\\\"color:black\\\"> <b> {{HeaderData.OrderNo}}</b> </span>\\r\\n                      </div>\\r\\n\\r\\n                      <!-- <span style=\\\"color:white\\\"> Date </span><br> -->\\r\\n                      <div class=\\\"panel-heading\\\">\\r\\n                        <span class=\\\"panel-title\\\" style=\\\"color:black\\\">Date :</span>\\r\\n                        <span style=\\\"color:black\\\"> <b> {{HeaderData.OrderDate|date}}</b></span>\\r\\n                      </div>\\r\\n                      <!-- <span style=\\\"color: white\\\"> Type </span><br> -->\\r\\n                      <div class=\\\"panel-heading\\\">\\r\\n                        <span class=\\\"panel-title\\\" style=\\\"color:black\\\">Type :</span>\\r\\n                        <span style=\\\"color: black\\\"> <b> {{HeaderData.ordertypedescription}}</b></span>\\r\\n                      </div>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-4\\\">\\r\\n                      <!-- <span style=\\\"color:white\\\"> Broker </span><br> -->\\r\\n                      <div class=\\\"panel-heading\\\">\\r\\n                        <span class=\\\"panel-title\\\" style=\\\"color:black\\\">Broker :</span>\\r\\n                        <span style=\\\"color: black\\\"> <b> {{HeaderData.BrokerName}} </b></span>\\r\\n                      </div>\\r\\n                      <!-- <span style=\\\"color:white\\\"> Broker Ref# </span><br> -->\\r\\n                      <div class=\\\"panel-heading\\\">\\r\\n                        <span class=\\\"panel-title\\\" style=\\\"color:black\\\">Broker Reference :</span>\\r\\n                        <span style=\\\"color: black\\\"> <b> {{HeaderData.BrokerRefNo}} </b></span>\\r\\n                      </div>\\r\\n                      <!-- <span style=\\\"color:white\\\"> Booking# </span><br> -->\\r\\n                      <div class=\\\"panel-heading\\\">\\r\\n                        <span class=\\\"panel-title\\\" style=\\\"color:black\\\">Booking No :</span>\\r\\n                        <span style=\\\"color: black\\\"> <b> {{HeaderData.BookingNo}} </b></span>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-sm-4\\\">\\r\\n                      <!-- <span style=\\\"color:white\\\"> Vessel </span><br> -->\\r\\n                      <div class=\\\"panel-heading\\\">\\r\\n                        <span class=\\\"panel-title\\\" style=\\\"color:black\\\">Vessel :</span>\\r\\n                        <span style=\\\"color: black\\\"> <b> {{HeaderData.VesselName}} </b></span>\\r\\n                      </div>\\r\\n                      <!-- <span style=\\\"color:white\\\"> Bill of Lading </span><br> -->\\r\\n                      <div class=\\\"panel-heading\\\">\\r\\n                        <span class=\\\"panel-title\\\" style=\\\"color:black\\\">Bill of Lading : </span>\\r\\n                        <span style=\\\"color: black\\\"> <b> {{HeaderData.BillofLading}} </b></span>\\r\\n                      </div>\\r\\n                      <!-- <span style=\\\"color:white\\\"> Cut-Off Date </span><br> -->\\r\\n                      <div class=\\\"panel-heading\\\">\\r\\n                        <span class=\\\"panel-title\\\" style=\\\"color:black\\\">Cut-Off Date :</span>\\r\\n                        <span style=\\\"color:black\\\"> <b> {{HeaderData.CutOffDate|date}} </b></span>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                  </div>\\r\\n                  <br>\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n\\r\\n                      <div class=\\\"panel-heading\\\">\\r\\n                        <h6 class=\\\"panel-title\\\">BillTo</h6>\\r\\n                      </div>\\r\\n                      <div class=\\\"card alert-secondary text-center p-3\\\">\\r\\n                        <!-- <blockquote class=\\\"blockquote mb-0\\\"> -->\\r\\n                        <span> {{HeaderData.BillToAddressBO.Name}}</span>\\r\\n                        <span> {{HeaderData.BillToAddressBO.Address1}}, {{HeaderData.BillToAddressBO.Address2}} </span>\\r\\n                        <span> {{HeaderData.BillToAddressBO.City}} - {{HeaderData.BillToAddressBO.Zip}} </span>\\r\\n                        <span> {{HeaderData.BillToAddressBO.State}}</span>\\r\\n                        <!-- </blockquote> -->\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n\\r\\n                      <div class=\\\"panel-heading\\\">\\r\\n                        <h6 class=\\\"panel-title\\\">Pickup</h6>\\r\\n                      </div>\\r\\n                      <div class=\\\"card alert-primary text-center p-3\\\">\\r\\n                        <!-- <blockquote class=\\\"blockquote mb-0\\\"> -->\\r\\n                        <span> {{HeaderData.SourceAddressBO.Name}}</span>\\r\\n                        <span> {{HeaderData.SourceAddressBO.Address1}}, {{HeaderData.SourceAddressBO.Address2}} </span>\\r\\n                        <span> {{HeaderData.SourceAddressBO.City}} - {{HeaderData.SourceAddressBO.Zip}} </span>\\r\\n                        <span> {{HeaderData.SourceAddressBO.State}}</span>\\r\\n                        <!-- </blockquote> -->\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n\\r\\n                      <div class=\\\"panel-heading\\\">\\r\\n                        <h6 class=\\\"panel-title\\\">Delivery</h6>\\r\\n                      </div>\\r\\n                      <div class=\\\"card alert-secondary text-center p-3\\\">\\r\\n                        <!-- <blockquote class=\\\"blockquote mb-0\\\"> -->\\r\\n                        <span> {{HeaderData.DestinationAddressBO.Name}}</span>\\r\\n                        <span> {{HeaderData.DestinationAddressBO.Address1}},\\r\\n                          {{HeaderData.DestinationAddressBO.Address2}}\\r\\n                        </span>\\r\\n                        <span> {{HeaderData.DestinationAddressBO.City}} - {{HeaderData.DestinationAddressBO.Zip}}\\r\\n                        </span>\\r\\n                        <span> {{HeaderData.DestinationAddressBO.State}}</span>\\r\\n                        <!-- </blockquote> -->\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n\\r\\n                      <div class=\\\"panel-heading\\\">\\r\\n                        <h6 class=\\\"panel-title\\\">Return</h6>\\r\\n                      </div>\\r\\n                      <div class=\\\"card alert-primary text-center p-3\\\">\\r\\n                        <!-- <blockquote class=\\\"blockquote mb-0\\\"> -->\\r\\n                        <span> {{HeaderData.ReturnAddressBO.Name}}</span>\\r\\n                        <span> {{HeaderData.ReturnAddressBO.Address1}}, {{HeaderData.ReturnAddressBO.Address2}} </span>\\r\\n                        <span> {{HeaderData.ReturnAddressBO.City}} - {{HeaderData.ReturnAddressBO.Zip}} </span>\\r\\n                        <span> {{HeaderData.ReturnAddressBO.State}}</span>\\r\\n                        <!-- </blockquote> -->\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"panel panel-warning\\\">\\r\\n                    <div class=\\\"panel-heading\\\">\\r\\n                      <h6 class=\\\"panel-title\\\">Container Detail</h6>\\r\\n                    </div>\\r\\n                    <div class=\\\"panel-body\\\">\\r\\n                      <table class=\\\"table table-sm small alert-warning\\\">\\r\\n                        <thead class=\\\"thead-light\\\">\\r\\n                          <tr>\\r\\n                            <th scope=\\\"col\\\" style=\\\"display:none\\\">OrderDetailKey</th>\\r\\n                            <th scope=\\\"col\\\">ContainerSize</th>\\r\\n                            <th scope=\\\"col\\\">Seal#</th>\\r\\n                            <th scope=\\\"col\\\">Weight</th>\\r\\n                            <th scope=\\\"col\\\">ApptDate_From</th>\\r\\n                            <th scope=\\\"col\\\">ApptDate_To</th>\\r\\n                            <th scope=\\\"col\\\">PickupDate/Time</th>\\r\\n                            <th scope=\\\"col\\\">DropOffDate/Time</th>\\r\\n\\r\\n                          </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                          <tr>\\r\\n\\r\\n                            <td hidden=\\\"true\\\" style=\\\"display:none\\\">\\r\\n                              {{DetailsData.OrderDetailKey}}\\r\\n                            </td>\\r\\n                            <td>\\r\\n                              {{DetailsData.ContainerSizeDesc}}\\r\\n                            </td>\\r\\n                            <td>\\r\\n                              {{DetailsData.SealNo}}\\r\\n                            </td>\\r\\n                            <td>\\r\\n                              {{DetailsData.Weight}}\\r\\n                            </td>\\r\\n                            <td>\\r\\n                              {{DetailsData.AppDateFrom}}\\r\\n                            </td>\\r\\n                            <td>\\r\\n                              {{DetailsData.AppDateTo}}\\r\\n                            </td>\\r\\n                            <td>\\r\\n                              {{DetailsData.PickupDateTime}}\\r\\n                            </td>\\r\\n\\r\\n                            <td>\\r\\n                              {{DetailsData.DropOffDateTime}}\\r\\n                            </td>\\r\\n                          </tr>\\r\\n                        </tbody>\\r\\n                      </table>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                      <!-- <span style=\\\"color:black\\\"> Comments </span><br> -->\\r\\n                      <div class=\\\"panel-heading\\\">\\r\\n                        <h6 class=\\\"panel-title\\\">Comments</h6>\\r\\n                      </div>\\r\\n                      <div class=\\\"card text-center p-3\\\">\\r\\n                        <small>\\r\\n                          <p>{{HeaderData.Comment}}</p>\\r\\n                        </small>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div *ngIf=\\\"showImage\\\">\\r\\n        <div class=\\\"row \\\"> </div>\\r\\n        <div class=\\\"row \\\"> </div>\\r\\n        <div class=\\\"row \\\">\\r\\n          <div class=\\\"col-md-4\\\"> </div>\\r\\n          <div class=\\\"col-md-4\\\"> <img src=\\\"assets/img/brand/Actions-gear-icon128px.png\\\" /></div>\\r\\n          <div class=\\\"col-md-4\\\"> </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\"","export default \"\\r\\n  <div class=\\\"modal-content\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Update Dispatch</h5>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.dismiss('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span> </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div *ngFor=\\\"let data of dispatchList\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n            <!-- <h5 class=\\\"card-subtitle mb-2\\\" style=\\\"color:cornflowerblue\\\">\\r\\n              <img src=\\\"assets/img/brand/lorry24px.png\\\" /> Dispatch Delivery</h5> -->\\r\\n\\r\\n            <button class=\\\"btn btn-success\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#Orderdata\\\"\\r\\n              aria-expanded=\\\"false\\\" aria-controls=\\\"Orderdata\\\">\\r\\n              Delivery ID - <b style=\\\"color: cornsilk;\\\">{{data.OrderNo}} </b>\\r\\n            </button>\\r\\n\\r\\n            &nbsp;\\r\\n            <button id=\\\"AddDispatchEntry\\\" class=\\\"btn btn-outline-warning btn-sm small\\\" type=\\\"button\\\"\\r\\n              (click)=\\\"showaddupdateEntry()\\\">\\r\\n              Add Entry\\r\\n            </button>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n            <div class=\\\"container text-right\\\">              \\r\\n              <button class=\\\"btn btn-primary btn-sm small\\\" type=\\\"button\\\" (click)=\\\"Submit()\\\">Submit</button> &nbsp;\\r\\n              <button class=\\\"btn btn-primary btn-sm small\\\" type=\\\"button\\\" (click)=\\\"update()\\\">Delivery\\r\\n                complete</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <br>\\r\\n        <!-- class=\\\"collapse\\\" -->\\r\\n        <div class=\\\"collapse show\\\" id=\\\"Orderdata\\\"> \\r\\n          <div class=\\\"card card-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\"> <span class=\\\"text-muted\\\">Date</span></div>\\r\\n                  <div class=\\\"col-sm-9 col-md-9 col-lg-9\\\"><span style=\\\"color: cornsilk;\\\">{{data.OrderDate|date}} </span></div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\"> <span class=\\\"text-muted\\\">Type</span></div>\\r\\n                  <div class=\\\"col-sm-9 col-md-9 col-lg-9\\\"><span> {{data.ordertypedescription}} </span></div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\"> <span class=\\\"text-muted\\\">Broker</span></div>\\r\\n                  <div class=\\\"col-sm-9 col-md-9 col-lg-9\\\"><span> {{data.BrokerName}} </span></div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\"> <span class=\\\"text-muted\\\">Broker Ref</span></div>\\r\\n                  <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\"><span> {{data.BrokerRefNo}} </span></div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\"> <span class=\\\"text-muted\\\">Booking No</span></div>\\r\\n                  <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\"><span> {{data.BookingNo}} </span></div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\"> <span class=\\\"text-muted\\\">Vessel</span></div>\\r\\n                  <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\"><span> {{data.VesselName}} </span></div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\"> <span class=\\\"text-muted\\\">Bill of Lading</span></div>\\r\\n                  <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\"><span> {{data.BillofLading}} </span></div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\"> <span class=\\\"text-muted\\\">Cut-Off Date</span></div>\\r\\n                  <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\"><span> {{data.CutOffDate|date}} </span></div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <hr style=\\\"color: slategray;\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                    <span class=\\\"text-muted\\\">Bill to</span>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                    <div style=\\\"word-wrap: break-word;\\\">\\r\\n                      {{data.BillToAddr}}\\r\\n                      {{data.BillToAddressBO.Address1}}, {{data.BillToAddressBO.Address2}}\\r\\n                      {{data.BillToAddressBO.City}} - {{data.BillToAddressBO.Zip}}\\r\\n                      {{data.BillToAddressBO.State}}\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                    <span class=\\\"text-muted\\\">Pickup</span>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                    <div style=\\\"word-wrap: break-word;\\\">\\r\\n                      {{data.SourceAddr}}\\r\\n                      {{data.SourceAddressBO.Address1}}, {{data.SourceAddressBO.Address2}}\\r\\n                      {{data.SourceAddressBO.City}} - {{data.SourceAddressBO.Zip}}\\r\\n                      {{data.SourceAddressBO.State}}\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                    <span class=\\\"text-muted\\\">Delivery</span>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                    <div style=\\\"word-wrap: break-word;\\\">\\r\\n                      {{data.DestinationAddr}}\\r\\n                      {{data.DestinationAddressBO.Address1}}, {{data.DestinationAddressBO.Address2}}\\r\\n                      {{data.DestinationAddressBO.City}} - {{data.DestinationAddressBO.Zip}}\\r\\n                      {{data.DestinationAddressBO.State}}\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                    <span class=\\\"text-muted\\\">Return</span>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                    <div style=\\\"word-wrap: break-word;\\\">                     \\r\\n                      {{data.ReturnAddressBO.Address1}}, {{data.ReturnAddressBO.Address2}}\\r\\n                      {{data.ReturnAddressBO.City}} - {{data.ReturnAddressBO.Zip}}\\r\\n                      {{data.ReturnAddressBO.State}}\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div> \\r\\n            <hr style=\\\"color: slategray;\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                <div class=\\\"panel panel-warning\\\">\\r\\n                  <div class=\\\"panel-body\\\">\\r\\n                    <h6 class=\\\"text-muted\\\">Container</h6>\\r\\n                    <table class=\\\"table table-sm small table-striped\\\">\\r\\n                      <thead class=\\\"thead-light\\\">\\r\\n                        <tr>\\r\\n                          <th scope=\\\"col\\\" style=\\\"display:none\\\">OrderDetailKey</th>\\r\\n                          <th scope=\\\"col\\\" class=\\\"text-muted\\\">Id</th>\\r\\n                          <th scope=\\\"col\\\" class=\\\"text-muted\\\">No</th>\\r\\n                          <th scope=\\\"col\\\" class=\\\"text-muted\\\">Size</th>\\r\\n                          <th scope=\\\"col\\\" class=\\\"text-muted\\\">Seal#</th>\\r\\n                          <th scope=\\\"col\\\" class=\\\"text-muted\\\">Weight</th>\\r\\n                          <th scope=\\\"col\\\" class=\\\"text-muted\\\">Comment</th>\\r\\n                        </tr>\\r\\n                      </thead>\\r\\n                      <tbody>\\r\\n                        <tr>\\r\\n                          <td hidden=\\\"true\\\" style=\\\"display:none\\\">\\r\\n                            {{data.OrderDetails.OrderDetailKey}}\\r\\n                          </td>\\r\\n                          <td>\\r\\n                            {{data.OrderDetails.containerid}}\\r\\n                          </td>\\r\\n                          <td>\\r\\n                            {{data.OrderDetails.ContainerNo}}\\r\\n                          </td>\\r\\n                          <td>\\r\\n                            {{data.OrderDetails.ContainerSizeDesc}}\\r\\n                          </td>\\r\\n                          <td>\\r\\n                            {{data.OrderDetails.SealNo}}\\r\\n                          </td>\\r\\n                          <td>\\r\\n                            {{data.OrderDetails.Weight}}\\r\\n                          </td>\\r\\n                          <td>\\r\\n                            {{data.OrderDetails.Comments}}\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                      </tbody>\\r\\n                    </table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div> \\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                <h6 class=\\\"text-muted\\\">Scheduler</h6>\\r\\n                <table class=\\\"table table-sm small table-striped\\\">\\r\\n                  <thead class=\\\"thead-light\\\">\\r\\n                    <tr>\\r\\n                      <th scope=\\\"col\\\" class=\\\"text-muted\\\">Appointment Date</th>\\r\\n                      <th scope=\\\"col\\\" class=\\\"text-muted\\\">Pickup DateTime</th>\\r\\n                      <th scope=\\\"col\\\" class=\\\"text-muted\\\">DropOff Date/Time</th>\\r\\n                      <th scope=\\\"col\\\" class=\\\"text-muted\\\">Last Free Day</th>\\r\\n                      <th scope=\\\"col\\\" class=\\\"text-muted\\\">Notes</th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody  >\\r\\n                    <tr >\\r\\n                      <td>\\r\\n                        {{data.OrderDetails.AppDateFrom}} - {{data.OrderDetails.AppDateTo}}\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        {{data.OrderDetails.PickupDateTime}}\\r\\n                      </td>\\r\\n\\r\\n                      <td>\\r\\n                        {{data.OrderDetails.DropOffDateTime}}\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        {{data.OrderDetails.LastFreeDay}}\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        {{data.OrderDetails.SchedulerNotes}}\\r\\n                      </td>\\r\\n\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                <div class=\\\"panel-heading\\\">\\r\\n                  <h6 class=\\\"text-muted\\\">Comments</h6>\\r\\n                </div>\\r\\n                <p><small> {{dispatchList.Comment}}</small></p>\\r\\n              </div>\\r\\n            </div> \\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n            <div class=\\\"card text-dark alert-warning\\\">\\r\\n              <div class=\\\"card-body text-dark border-light \\\">\\r\\n                \\r\\n                <div class=\\\"row\\\">   \\r\\n                                \\r\\n                    <table class=\\\"table table-custom  table-sm table-hover table-striped table-warning \\\">\\r\\n                      <thead>\\r\\n                        <tr>                          \\r\\n                          <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\" hidden=\\\"true\\\">routekey</th>\\r\\n                          <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\" hidden=\\\"true\\\">OrderDetailKey</th>\\r\\n                          <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\"><small> Appointment No  </small></th>\\r\\n                          <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\"> <small>Chassis</small></th>\\r\\n                          <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\"><small>Legno</small></th>\\r\\n                          <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\"><small>Leg Type</small></th>\\r\\n                          <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\"><small>Wait From/to at Port</small></th>\\r\\n                          <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\"><small>Wait From/to at Customer</small></th>\\r\\n                          <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\"><small>Pickup-Drop</small></th>                         \\r\\n                          <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\"><small>Driver</small></th>\\r\\n                          <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\"> <small>Drivernotes</small></th>                         \\r\\n                          <th scope=\\\"col\\\" class=\\\"text-center text-muted\\\"></th>\\r\\n                        </tr>\\r\\n                      </thead>\\r\\n                      <tbody >\\r\\n                        <tr *ngFor=\\\"let data of dispatchDetails;let i = index\\\">\\r\\n                        \\r\\n                          <td hidden=\\\"true\\\" style=\\\"color: darkslategrey;\\\">\\r\\n                            {{data.routekey}}\\r\\n                          </td>\\r\\n                          <td hidden=\\\"true\\\" style=\\\"color: darkslategrey;\\\">\\r\\n                            {{data.OrderDetailKey}}\\r\\n                          </td>\\r\\n                          <td class=\\\"text-center\\\" style=\\\"color: darkslategrey;\\\">\\r\\n                            <small> {{data.appointmentno}}</small>\\r\\n                          </td>\\r\\n\\r\\n                          <td class=\\\"text-center\\\" style=\\\"color: darkslategrey;\\\">\\r\\n                            <small>{{data.Chassis}}</small>\\r\\n                          </td>\\r\\n                          <td class=\\\"text-center\\\" style=\\\"color: darkslategrey;\\\">\\r\\n                            <small> {{data.legno}}</small>\\r\\n                          </td>\\r\\n                          <td class=\\\"text-left\\\" style=\\\"color: darkslategrey;\\\">\\r\\n                            <small> {{data.legtype}}</small>\\r\\n                          </td>\\r\\n                          <td class=\\\"text-left\\\" style=\\\"color: darkslategrey;\\\">\\r\\n                            <small> {{ data.portwaitingtimefrom}} - {{data.portwaitingtimeto}}</small>\\r\\n\\r\\n                          </td>\\r\\n                          <td class=\\\"text-left\\\" style=\\\"color: darkslategrey;\\\">\\r\\n                            <small> {{ data.customerwaitingtimefrom}} - {{data.customerwaitingtimeto}}</small>\\r\\n                          </td>\\r\\n                          <td class=\\\"text-left\\\" style=\\\"color: darkslategrey;\\\">\\r\\n                            <small> {{data.actualarrival}}-{{data.actualdeparture}}</small>\\r\\n                          </td>\\r\\n                          <td class=\\\"text-left\\\" style=\\\"color: darkslategrey;\\\">\\r\\n\\r\\n                          </td>\\r\\n                          <td class=\\\"text-left\\\" style=\\\"color: darkslategrey;\\\">\\r\\n                            <small> {{data.drivernotes}}</small>\\r\\n                          </td>\\r\\n                         \\r\\n                          <td class=\\\"text-center\\\" style=\\\"color: darkslategrey;\\\">\\r\\n                            <a tooltip=\\\"Upload file\\\" (click)=\\\"editRow(data,i)\\\">\\r\\n                              <i class=\\\"fa fa-pencil\\\"></i>\\r\\n                            </a> &nbsp;&nbsp;\\r\\n\\r\\n                            <a tooltip=\\\"Remove/Delete Container\\\" (click)=\\\"deleteRow(data,i)\\\">\\r\\n                              <i class=\\\"fa fa-trash\\\"></i>\\r\\n                            </a>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                      </tbody>\\r\\n                    </table>\\r\\n                 \\r\\n                  <!-- <ng-container *ngIf=\\\"dispatchList.dispatchDetails.length==0\\\">\\r\\n                    <h5 style=\\\"color: darkred;\\\">No records found!</h5>\\r\\n                  </ng-container> -->\\r\\n                </div> \\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"showaddupdateEntryDiv\\\">\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\r\\n              <div class=\\\"form-group\\\" hidden=\\\"true\\\">\\r\\n                <h6 class=\\\"text-muted\\\">Routekey </h6>\\r\\n                <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" name=\\\"routekey\\\" [(ngModel)]=\\\"routekey\\\"\\r\\n                  placeholder=\\\"\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <h6 class=\\\"text-muted\\\">Appointment No </h6>\\r\\n                <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" name=\\\"AppointmentNo\\\"\\r\\n                  [(ngModel)]=\\\"appointmentNo\\\" placeholder=\\\"\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <h6 class=\\\"text-muted\\\">Chassis</h6>\\r\\n                <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" name=\\\"Chassis\\\" [(ngModel)]=\\\"Chassis\\\"\\r\\n                  placeholder=\\\"\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <h6 class=\\\"text-muted\\\">Leg</h6>\\r\\n                <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" name=\\\"legno\\\" [(ngModel)]=\\\"legno\\\"\\r\\n                  placeholder=\\\"\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <h6 class=\\\"text-muted\\\">Leg Type</h6>\\r\\n                <select id=\\\"drpStatus\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Legtype\\\" name=\\\"Legtype\\\"\\r\\n                  [(ngModel)]=\\\"legtype\\\">\\r\\n                  <option [value]='1'>L</option>\\r\\n                  <option [value]=\\\"2\\\">D</option>\\r\\n                  <option [value]=\\\"3\\\">D/S</option>\\r\\n\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <h6 class=\\\"text-muted\\\">Driver</h6>\\r\\n                <select id=\\\"drpdriver\\\" class=\\\"form-control form-control-sm\\\" name=\\\"driverkey\\\"\\r\\n                  [(ngModel)]=\\\"driverkey\\\">\\r\\n                  <option [value]=\\\"driver.DriverKey\\\" *ngFor=\\\"let driver of driverList\\\">{{driver.DriverId}}\\r\\n                  </option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\r\\n              <textarea class=\\\"form-control\\\" id=\\\"txtNotes\\\" placeholder=\\\"Driver Notes\\\" name=\\\"drivernotes\\\"\\r\\n                [(ngModel)]=\\\"drivernotes\\\"></textarea>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <h6 class=\\\"text-muted\\\">Port waiting time </h6>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                    <tbody>\\r\\n                      <tr>\\r\\n                        <td>\\r\\n                          <div class=\\\"input-group input-group-sm\\\">\\r\\n                            <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" name=\\\"dtPortWaitingTimeFrom\\\"\\r\\n                              [(ngModel)]=\\\"PortWaitingTimeFrom\\\" placeholder=\\\"From\\\"\\r\\n                              [owlDateTimeTrigger]=\\\"dtPortWaitingTimeFrom\\\" [owlDateTime]=\\\"dtPortWaitingTimeFrom\\\"\\r\\n                              required />\\r\\n                            <owl-date-time [pickerType]=\\\"'both'\\\" #dtPortWaitingTimeFrom [hour12Timer]=\\\"false\\\">\\r\\n                            </owl-date-time>\\r\\n                          </div>\\r\\n                        </td>\\r\\n                        <td>:</td>\\r\\n                        <td>\\r\\n                          <div class=\\\"input-group input-group-sm\\\">\\r\\n                            <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" name=\\\"dtPortWaitingTimeTo\\\"\\r\\n                              [(ngModel)]=\\\"PortWaitingTimeTo\\\" placeholder=\\\"to\\\"\\r\\n                              [owlDateTimeTrigger]=\\\"dtPortWaitingTimeTo\\\" [owlDateTime]=\\\"dtPortWaitingTimeTo\\\"\\r\\n                              required />\\r\\n                            <owl-date-time [pickerType]=\\\"'both'\\\" #dtPortWaitingTimeTo [hour12Timer]=\\\"false\\\">\\r\\n                            </owl-date-time>\\r\\n                          </div>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </tbody>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <h6 class=\\\"text-muted\\\">Customer waiting time </h6>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                    <tbody>\\r\\n                      <tr>\\r\\n                        <td>\\r\\n                          <div class=\\\"input-group input-group-sm\\\">\\r\\n                            <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" name=\\\"CustomerWaitingTimeFrom\\\"\\r\\n                              [(ngModel)]=\\\"CustomerWaitingTimeFrom\\\" placeholder=\\\"From\\\"\\r\\n                              [owlDateTimeTrigger]=\\\"dtCustomerWaitingTimeFrom\\\"\\r\\n                              [owlDateTime]=\\\"dtCustomerWaitingTimeFrom\\\" required />\\r\\n                            <owl-date-time [pickerType]=\\\"'both'\\\" #dtCustomerWaitingTimeFrom [hour12Timer]=\\\"false\\\">\\r\\n                            </owl-date-time>\\r\\n                          </div>\\r\\n                        </td>\\r\\n                        <td>:</td>\\r\\n                        <td>\\r\\n                          <div class=\\\"input-group input-group-sm\\\">\\r\\n                            <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" name=\\\"dtPortWaitingTimeFrom\\\"\\r\\n                              [(ngModel)]=\\\"CustomerWaitingTimeTo\\\" placeholder=\\\"to\\\"\\r\\n                              [owlDateTimeTrigger]=\\\"dtCustomerWaitingTimeTo\\\"\\r\\n                              [owlDateTime]=\\\"dtCustomerWaitingTimeTo\\\" required />\\r\\n                            <owl-date-time [pickerType]=\\\"'both'\\\" #dtCustomerWaitingTimeTo [hour12Timer]=\\\"false\\\">\\r\\n                            </owl-date-time>\\r\\n                          </div>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </tbody>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <h6 class=\\\"text-muted\\\">Actual Pickup/Drop </h6>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                    <tbody>\\r\\n                      <tr>\\r\\n                        <td>\\r\\n                          <div class=\\\"input-group input-group-sm\\\">\\r\\n                            <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" name=\\\"actualarrival\\\"\\r\\n                              [(ngModel)]=\\\"actualarrival\\\" placeholder=\\\"Pickup\\\"\\r\\n                              [owlDateTimeTrigger]=\\\"dtactualarrival\\\" [owlDateTime]=\\\"dtactualarrival\\\" required />\\r\\n                            <owl-date-time [pickerType]=\\\"'both'\\\" #dtactualarrival [hour12Timer]=\\\"false\\\">\\r\\n                            </owl-date-time>\\r\\n                          </div>\\r\\n                        </td>\\r\\n                        <td>:</td>\\r\\n                        <td>\\r\\n                          <div class=\\\"input-group input-group-sm\\\">\\r\\n                            <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" name=\\\"actualdeparture\\\"\\r\\n                              [(ngModel)]=\\\"actualdeparture\\\" placeholder=\\\"Drop\\\"\\r\\n                              [owlDateTimeTrigger]=\\\"dtactualdeparture\\\" [owlDateTime]=\\\"dtactualdeparture\\\"\\r\\n                              required />\\r\\n                            <owl-date-time [pickerType]=\\\"'both'\\\" #dtactualdeparture [hour12Timer]=\\\"false\\\">\\r\\n                            </owl-date-time>\\r\\n                          </div>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </tbody>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n              <div class=\\\"text-right\\\">\\r\\n\\r\\n                <a type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"clear()\\\">Clear</a>&nbsp;&nbsp;\\r\\n                <button type=\\\"button\\\" class=\\\"btn alert-dark btn-sm\\\" style=\\\"border-radius: 1rem;\\\"\\r\\n                  (click)=\\\"addupdateDispatch()\\\"> <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i> Add</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\"","export default \"<br>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\r\\n    <div class=\\\"scrollbar\\\" id=\\\"scrollbar-style\\\" style=\\\"position:relative;width:100%;height:100%;\\\">\\r\\n      <ul class=\\\"list-unstyled\\\">\\r\\n        <li>\\r\\n          <h5>Containers <span class=\\\"badge badge-warning\\\">Recent</span></h5><br>\\r\\n        </li>\\r\\n        <li>\\r\\n          <div class=\\\"container text-left\\\" *ngIf=\\\"ContainerDetails.length>0\\\">\\r\\n            <div class=\\\"form-group input-group input-group-sm\\\">\\r\\n              <div class=\\\"img-group-prepend\\\">\\r\\n                <img src=\\\"assets/img/brand/search16px.png\\\" /> &nbsp;\\r\\n              </div>\\r\\n              <input [(ngModel)]=\\\"SearchRecentContainer\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                style=\\\"border-radius: 1rem;\\\" type=\\\"text\\\" placeholder=\\\"Search..\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"ContainerDetails.length === 0\\\">\\r\\n            <h6 style=\\\"color: darkorange;\\\">No Containers for Dispatch! </h6>\\r\\n          </div>\\r\\n          <br>\\r\\n        </li>\\r\\n        <li\\r\\n          *ngFor=\\\"let order of ContainerDetails| grdFilter: {containerid: SearchRecentContainer,ContainerNo: SearchRecentContainer} ; let ind=index;\\\">\\r\\n          <ul class=\\\"list-unstyled\\\">\\r\\n            <li>\\r\\n              <p style=\\\"font-family:calibri;\\\"> <a [routerLink]=\\\"\\\" (click)=\\\"rowclickEvent(order)\\\">\\r\\n                  {{order.containerid}}<br> <small class=\\\"text-muted\\\"> - {{ order.ContainerNo }} </small>\\r\\n                  <span class=\\\"badge\\\" *ngIf=\\\"selectedKey===order.OrderDetailKey\\\">\\r\\n                    <img src=\\\"assets/img/brand/symbol-check16px.png\\\" /> </span>\\r\\n                </a> </p>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </li>\\r\\n\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-sm-10 col-md-10 col-lg-10\\\">\\r\\n    <div *ngIf=\\\"showaddupdatedispatchitems\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n          <!-- <h5 class=\\\"card-subtitle mb-2\\\" style=\\\"color:cornflowerblue\\\">\\r\\n            <img src=\\\"assets/img/brand/lorry24px.png\\\" /> Dispatch Delivery</h5> -->\\r\\n\\r\\n          <button class=\\\"btn btn-success\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#Orderdata\\\"\\r\\n            aria-expanded=\\\"false\\\" aria-controls=\\\"Orderdata\\\">\\r\\n            Delivery ID - <b>{{HeaderData.OrderNo}} </b>\\r\\n          </button>\\r\\n\\r\\n          &nbsp;\\r\\n          <button id=\\\"AddDispatchEntry\\\" class=\\\"btn btn-outline-warning btn-sm small\\\" type=\\\"button\\\"\\r\\n            (click)=\\\"showaddupdateEntry()\\\">\\r\\n            Add Entry\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n          <div class=\\\"container text-right\\\">         \\r\\n            <button class=\\\"btn btn-outline-primary btn-sm small\\\" type=\\\"button\\\" (click)=\\\"hold_Dispatch()\\\"> <i class=\\\"fa fa-pause-circle-o\\\" aria-hidden=\\\"true\\\"></i> Hold Dispatch</button> &nbsp;\\r\\n            &nbsp;\\r\\n            <button class=\\\"btn btn-outline-primary btn-sm small\\\" type=\\\"button\\\" (click)=\\\"onSubmit()\\\"><i class=\\\"fa fa-floppy-o\\\" aria-hidden=\\\"true\\\"></i> Save</button> &nbsp;\\r\\n            &nbsp;\\r\\n            <button class=\\\"btn btn-outline-primary btn-sm small\\\" type=\\\"button\\\" (click)=\\\"Complete_Dispatch()\\\" [disabled]=\\\"btnCompleteScheduleDisabled\\\"> <i class=\\\"fa fa-check-circle-o\\\" aria-hidden=\\\"true\\\"></i> Complete Dispacth</button> &nbsp;\\r\\n            &nbsp;\\r\\n            <button class=\\\"btn btn-outline-danger btn-sm small\\\" type=\\\"button\\\" (click)=\\\"Cancel()\\\"> <i class=\\\"fa fa-ban\\\"\\r\\n                aria-hidden=\\\"true\\\"></i>&nbsp;Cancel</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <br>\\r\\n\\r\\n      <div class=\\\"collapse show\\\" id=\\\"Orderdata\\\">\\r\\n        <div class=\\\"card card-body\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\"> <span class=\\\"text-muted\\\">Date</span></div>\\r\\n                <div class=\\\"col-sm-9 col-md-9 col-lg-9\\\"><span>{{HeaderData.OrderDate|date}} </span></div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\"> <span class=\\\"text-muted\\\">Type</span></div>\\r\\n                <div class=\\\"col-sm-9 col-md-9 col-lg-9\\\"><span> {{HeaderData.ordertypedescription}} </span></div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\"> <span class=\\\"text-muted\\\">Broker</span></div>\\r\\n                <div class=\\\"col-sm-9 col-md-9 col-lg-9\\\"><span> {{HeaderData.BrokerName}} </span></div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\"> <span class=\\\"text-muted\\\">Broker Ref</span></div>\\r\\n                <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\"><span> {{HeaderData.BrokerRefNo}} </span></div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\"> <span class=\\\"text-muted\\\">Booking No</span></div>\\r\\n                <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\"><span> {{HeaderData.BookingNo}} </span></div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\"> <span class=\\\"text-muted\\\">Vessel</span></div>\\r\\n                <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\"><span> {{HeaderData.VesselName}} </span></div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\"> <span class=\\\"text-muted\\\">Bill of Lading</span></div>\\r\\n                <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\"><span> {{HeaderData.BillofLading}} </span></div>\\r\\n              </div>\\r\\n              <!-- <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\"> <span class=\\\"text-muted\\\">Cut-Off Date</span></div>\\r\\n                <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\"><span> {{HeaderData.CutOffDate|date}} </span></div>\\r\\n              </div> -->\\r\\n            </div>\\r\\n          </div>\\r\\n          <hr style=\\\"color: slategray;\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                  <span class=\\\"text-muted\\\">Bill to</span>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                  <div style=\\\"word-wrap: break-word;\\\">\\r\\n                    {{HeaderData.BillToAddressBO.Name}}\\r\\n                    {{HeaderData.BillToAddressBO.Address1}} {{HeaderData.BillToAddressBO.Address2}}\\r\\n                    {{HeaderData.BillToAddressBO.City}} {{HeaderData.BillToAddressBO.Zip}}\\r\\n                    {{HeaderData.BillToAddressBO.State}}\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                  <span class=\\\"text-muted\\\">Pickup</span>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                  <div style=\\\"word-wrap: break-word;\\\">\\r\\n                    {{HeaderData.SourceAddressBO.Name}}\\r\\n                    {{HeaderData.SourceAddressBO.Address1}} {{HeaderData.SourceAddressBO.Address2}}\\r\\n                    {{HeaderData.SourceAddressBO.City}} {{HeaderData.SourceAddressBO.Zip}}\\r\\n                    {{HeaderData.SourceAddressBO.State}}\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                  <span class=\\\"text-muted\\\">Delivery</span>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                  <div style=\\\"word-wrap: break-word;\\\">\\r\\n                    {{HeaderData.DestinationAddressBO.Name}}\\r\\n                    {{HeaderData.DestinationAddressBO.Address1}} {{HeaderData.DestinationAddressBO.Address2}}\\r\\n                    {{HeaderData.DestinationAddressBO.City}} {{HeaderData.DestinationAddressBO.Zip}}\\r\\n                    {{HeaderData.DestinationAddressBO.State}}\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                  <span class=\\\"text-muted\\\">Return</span>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                  <div style=\\\"word-wrap: break-word;\\\">\\r\\n                    {{HeaderData.ReturnAddressBO.Name}}\\r\\n                    {{HeaderData.ReturnAddressBO.Address1}} {{HeaderData.ReturnAddressBO.Address2}}\\r\\n                    {{HeaderData.ReturnAddressBO.City}} {{HeaderData.ReturnAddressBO.Zip}}\\r\\n                    {{HeaderData.ReturnAddressBO.State}}\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <hr style=\\\"color: slategray;\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n              <div class=\\\"panel panel-warning\\\">\\r\\n                <div class=\\\"panel-body\\\">\\r\\n                  <h6 class=\\\"text-muted\\\">Container</h6>\\r\\n                  <table class=\\\"table table-sm small table-striped\\\">\\r\\n                    <thead class=\\\"thead-light\\\">\\r\\n                      <tr>\\r\\n                        <th scope=\\\"col\\\" style=\\\"display:none\\\">OrderDetailKey</th>\\r\\n                        <th scope=\\\"col\\\" class=\\\"text-muted\\\">Id</th>\\r\\n                        <th scope=\\\"col\\\" class=\\\"text-muted\\\">No</th>\\r\\n                        <th scope=\\\"col\\\" class=\\\"text-muted\\\">Size</th>\\r\\n                        <th scope=\\\"col\\\" class=\\\"text-muted\\\">Seal#</th>\\r\\n                        <th scope=\\\"col\\\" class=\\\"text-muted\\\">Weight</th>\\r\\n                        <th scope=\\\"col\\\" class=\\\"text-muted\\\">Comment</th>\\r\\n                      </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                      <tr>\\r\\n                        <td hidden=\\\"true\\\" style=\\\"display:none\\\">\\r\\n                          {{DetailsData.OrderDetailKey}}\\r\\n                        </td>\\r\\n                        <td>\\r\\n                          {{DetailsData.containerid}}\\r\\n                        </td>\\r\\n                        <td>\\r\\n                          {{DetailsData.ContainerNo}}\\r\\n                        </td>\\r\\n                        <td>\\r\\n                          {{DetailsData.ContainerSizeDesc}}\\r\\n                        </td>\\r\\n                        <td>\\r\\n                          {{DetailsData.SealNo}}\\r\\n                        </td>\\r\\n                        <td>\\r\\n                          {{DetailsData.Weight}}\\r\\n                        </td>\\r\\n                        <td>\\r\\n                          {{DetailsData.Comments}}\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </tbody>\\r\\n                  </table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n              <h6 class=\\\"text-muted\\\">Scheduler</h6>\\r\\n              <table class=\\\"table table-sm small table-striped\\\">\\r\\n                <thead class=\\\"thead-light\\\">\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-muted\\\">Appointment Date</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-muted\\\">Pickup DateTime</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-muted\\\">DropOff Date/Time</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-muted\\\">Last Free Day</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-muted\\\">Notes</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr>\\r\\n                    <td>\\r\\n                      {{DetailsData.AppDateFrom|date}} - {{DetailsData.AppDateTo|date}}\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      {{DetailsData.PickupDateTime|date: 'dd/MM/yyyy hh:mm a'}}\\r\\n                    </td>\\r\\n\\r\\n                    <td>\\r\\n                      {{DetailsData.DropOffDateTime|date: 'dd/MM/yyyy hh:mm a'}}\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      {{DetailsData.LastFreeDay|date}}\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      {{DetailsData.SchedulerNotes}}\\r\\n                    </td>\\r\\n\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n              </table>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n              <div class=\\\"panel-heading\\\">\\r\\n                <h6 class=\\\"text-muted\\\">Comments</h6>\\r\\n              </div>\\r\\n              <p><small> {{HeaderData.Comment}}</small></p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n          <div class=\\\"card text-dark alert-warning\\\">\\r\\n            <div class=\\\"card-body text-dark border-light \\\">\\r\\n              <!-- <h5>Containers </h5> -->\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"table-responsive\\\" style=\\\"overflow-x: auto\\\">\\r\\n                  <table id=\\\"DISPATCH\\\"\\r\\n                    class=\\\"table table-custom table-sm table-hover table-striped table-warning scrollbar \\\">\\r\\n                    <thead>\\r\\n                      <tr>\\r\\n                        <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\">Appointment#</th>\\r\\n                        <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\"> Chassis</th>\\r\\n                        <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\">Leg#</th>\\r\\n                        <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\">Leg Type</th>\\r\\n                        <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\">Wait time at Port</th>\\r\\n                        <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\">Wait time at Customer</th>\\r\\n                        <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\">Pickup-Drop</th>\\r\\n                        <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\">Driver</th>\\r\\n                        <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\"> Driver notes</th>\\r\\n                        <!-- <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\"> Status</th> -->\\r\\n                        <th scope=\\\"col\\\" class=\\\"text-center text-muted\\\">Action</th>\\r\\n                      </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                      <tr *ngFor=\\\"let data of dispatchDetails;let i = index\\\">\\r\\n                        <td style=\\\"color: darkslategrey;\\\">\\r\\n                          {{data.appointmentno}}\\r\\n                        </td>\\r\\n                        <td style=\\\"color: darkslategrey;\\\">\\r\\n                          {{data.Chassis}}\\r\\n                        </td>\\r\\n                        <td style=\\\"color: darkslategrey;\\\">\\r\\n                          {{data.legno}}\\r\\n                        </td>\\r\\n                        <td style=\\\"color: darkslategrey;\\\">\\r\\n                          {{data.legtype}}\\r\\n                        </td>\\r\\n                        <td style=\\\"color: darkslategrey;\\\">\\r\\n                          {{ data.portwaitingtimefrom|date}} - {{data.portwaitingtimeto|date}}\\r\\n\\r\\n                        </td>\\r\\n                        <td style=\\\"color: darkslategrey;\\\">\\r\\n                          {{ data.customerwaitingtimefrom|date}} - {{data.customerwaitingtimeto|date}}\\r\\n                        </td>\\r\\n                        <td style=\\\"color: darkslategrey;\\\">\\r\\n                          {{data.actualarrival|date}}-{{data.actualdeparture|date}}\\r\\n                        </td>\\r\\n                        <td style=\\\"color: darkslategrey;\\\">\\r\\n                          {{data.driver}}\\r\\n                        </td>\\r\\n                        <td style=\\\"color: darkslategrey;\\\">\\r\\n                          {{data.drivernotes}}\\r\\n                        </td>\\r\\n                        <td style=\\\"color: darkslategrey;\\\">\\r\\n                          <a tooltip=\\\"Upload file\\\" (click)=\\\"editRow(data,i)\\\">\\r\\n                            <i class=\\\"fa fa-pencil\\\"></i>\\r\\n                          </a> &nbsp;&nbsp;\\r\\n\\r\\n                          <a tooltip=\\\"Remove/Delete Container\\\" (click)=\\\"deleteRow(data,i)\\\">\\r\\n                            <i class=\\\"fa fa-trash\\\"></i>\\r\\n                          </a>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </tbody>\\r\\n                  </table>\\r\\n\\r\\n                </div>\\r\\n                <!-- <ng-container *ngIf=\\\"dispatchDetails.length==0\\\">\\r\\n                  <h5 style=\\\"color: darkred;\\\">No records found!</h5>\\r\\n                </ng-container> -->\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"showaddupdateEntryDiv\\\">\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\r\\n            <div class=\\\"form-group\\\" hidden=\\\"true\\\">\\r\\n              <h6 class=\\\"text-muted\\\">Routekey </h6>\\r\\n              <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" name=\\\"routekey\\\" [(ngModel)]=\\\"routekey\\\"\\r\\n                placeholder=\\\"\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <h6 class=\\\"text-muted\\\">Appointment No </h6>\\r\\n              <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" name=\\\"AppointmentNo\\\" [(ngModel)]=\\\"appointmentNo\\\"\\r\\n                placeholder=\\\"\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <h6 class=\\\"text-muted\\\">Driver</h6>\\r\\n              <select id=\\\"drpdriver\\\" class=\\\"form-control form-control-sm\\\" name=\\\"driverkey\\\" [(ngModel)]=\\\"driverkey\\\"\\r\\n                (change)=\\\"drpdriver_ChangedEvent($event.target.value)\\\">\\r\\n                <option [value]=\\\"driver.DriverKey\\\" *ngFor=\\\"let driver of driverList\\\">{{driver.DriverId}}\\r\\n                </option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\r\\n            <textarea class=\\\"form-control\\\" id=\\\"txtNotes\\\" placeholder=\\\"Driver Notes\\\" name=\\\"drivernotes\\\"\\r\\n              [(ngModel)]=\\\"drivernotes\\\"></textarea>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <h6 class=\\\"text-muted\\\">Chassis</h6>\\r\\n              <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"  id=\\\"dynamicchassis\\\" name=\\\"Chassis\\\" [(ngModel)]=\\\"Chassis\\\"\\r\\n                placeholder=\\\"Search\\\"  (keyup)=\\\"getChassis($event)\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <h6 class=\\\"text-muted\\\">Leg</h6>\\r\\n              <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" name=\\\"legno\\\" [(ngModel)]=\\\"legno\\\" placeholder=\\\"\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <h6 class=\\\"text-muted\\\">Leg Type</h6>\\r\\n              <select id=\\\"drpStatus\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Legtype\\\" name=\\\"Legtype\\\"\\r\\n                [(ngModel)]=\\\"legtype\\\">\\r\\n                <option [value]='1'>L</option>\\r\\n                <option [value]=\\\"2\\\">D</option>\\r\\n                <option [value]=\\\"3\\\">D/S</option>\\r\\n\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <h6 class=\\\"text-muted\\\">Port waiting time </h6>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                  <tbody>\\r\\n                    <tr>\\r\\n                      <td>\\r\\n                        <div class=\\\"input-group input-group-sm\\\">\\r\\n                          <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" name=\\\"dtPortWaitingTimeFrom\\\"\\r\\n                            [(ngModel)]=\\\"PortWaitingTimeFrom\\\" placeholder=\\\"From\\\"\\r\\n                            [owlDateTimeTrigger]=\\\"dtPortWaitingTimeFrom\\\" [owlDateTime]=\\\"dtPortWaitingTimeFrom\\\"\\r\\n                            required />\\r\\n                          <owl-date-time [pickerType]=\\\"'both'\\\" #dtPortWaitingTimeFrom [hour12Timer]=\\\"false\\\">\\r\\n                          </owl-date-time>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                      <td>:</td>\\r\\n                      <td>\\r\\n                        <div class=\\\"input-group input-group-sm\\\">\\r\\n                          <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" name=\\\"dtPortWaitingTimeTo\\\"\\r\\n                            [(ngModel)]=\\\"PortWaitingTimeTo\\\" placeholder=\\\"to\\\" [owlDateTimeTrigger]=\\\"dtPortWaitingTimeTo\\\"\\r\\n                            [owlDateTime]=\\\"dtPortWaitingTimeTo\\\" required />\\r\\n                          <owl-date-time [pickerType]=\\\"'both'\\\" #dtPortWaitingTimeTo [hour12Timer]=\\\"false\\\">\\r\\n                          </owl-date-time>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <h6 class=\\\"text-muted\\\">Customer waiting time </h6>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                  <tbody>\\r\\n                    <tr>\\r\\n                      <td>\\r\\n                        <div class=\\\"input-group input-group-sm\\\">\\r\\n                          <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" name=\\\"CustomerWaitingTimeFrom\\\"\\r\\n                            [(ngModel)]=\\\"CustomerWaitingTimeFrom\\\" placeholder=\\\"From\\\"\\r\\n                            [owlDateTimeTrigger]=\\\"dtCustomerWaitingTimeFrom\\\" [owlDateTime]=\\\"dtCustomerWaitingTimeFrom\\\"\\r\\n                            required />\\r\\n                          <owl-date-time [pickerType]=\\\"'both'\\\" #dtCustomerWaitingTimeFrom [hour12Timer]=\\\"false\\\">\\r\\n                          </owl-date-time>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                      <td>:</td>\\r\\n                      <td>\\r\\n                        <div class=\\\"input-group input-group-sm\\\">\\r\\n                          <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" name=\\\"dtPortWaitingTimeFrom\\\"\\r\\n                            [(ngModel)]=\\\"CustomerWaitingTimeTo\\\" placeholder=\\\"to\\\"\\r\\n                            [owlDateTimeTrigger]=\\\"dtCustomerWaitingTimeTo\\\" [owlDateTime]=\\\"dtCustomerWaitingTimeTo\\\"\\r\\n                            required />\\r\\n                          <owl-date-time [pickerType]=\\\"'both'\\\" #dtCustomerWaitingTimeTo [hour12Timer]=\\\"false\\\">\\r\\n                          </owl-date-time>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <h6 class=\\\"text-muted\\\">Actual Pickup/Drop </h6>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                  <tbody>\\r\\n                    <tr>\\r\\n                      <td>\\r\\n                        <div class=\\\"input-group input-group-sm\\\">\\r\\n                          <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" name=\\\"actualarrival\\\"\\r\\n                            [(ngModel)]=\\\"actualarrival\\\" placeholder=\\\"Pickup\\\" [owlDateTimeTrigger]=\\\"dtactualarrival\\\"\\r\\n                            [owlDateTime]=\\\"dtactualarrival\\\" required />\\r\\n                          <owl-date-time [pickerType]=\\\"'both'\\\" #dtactualarrival [hour12Timer]=\\\"false\\\"></owl-date-time>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                      <td>:</td>\\r\\n                      <td>\\r\\n                        <div class=\\\"input-group input-group-sm\\\">\\r\\n                          <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" name=\\\"actualdeparture\\\"\\r\\n                            [(ngModel)]=\\\"actualdeparture\\\" placeholder=\\\"Drop\\\" [owlDateTimeTrigger]=\\\"dtactualdeparture\\\"\\r\\n                            [owlDateTime]=\\\"dtactualdeparture\\\" required />\\r\\n                          <owl-date-time [pickerType]=\\\"'both'\\\" #dtactualdeparture [hour12Timer]=\\\"false\\\"></owl-date-time>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n            <div class=\\\"text-right\\\">\\r\\n              <label>.</label>\\r\\n              <a type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"clear()\\\">Clear</a>&nbsp;&nbsp;\\r\\n              <button type=\\\"button\\\" class=\\\"btn alert-dark btn-sm\\\" style=\\\"border-radius: 1rem;\\\"\\r\\n                (click)=\\\"addupdateDispatch()\\\"> <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i> Add</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"showdispatchitemlist\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-8 col-sm-8 col-md-8\\\"> </div>\\r\\n        <div class=\\\"col-4 col-sm-4 col-md-4\\\">\\r\\n          <div class=\\\"container text-right\\\">\\r\\n            <div class=\\\"form-group input-group input-group-sm\\\">\\r\\n              <div class=\\\"img-group-prepend\\\">\\r\\n                <img src=\\\"assets/img/brand/search16px.png\\\" /> &nbsp;\\r\\n              </div>\\r\\n              <input [(ngModel)]=\\\"searchText\\\" class=\\\"form-control form-control-sm\\\" style=\\\"border-radius: 1rem;\\\"\\r\\n                type=\\\"text\\\" placeholder=\\\"Search..\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <table class=\\\"table table-sm table-borderless \\\">\\r\\n          <thead class=\\\"thead-dark shadow\\\">\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-muted\\\">ID</th>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-muted\\\">Container</th>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-muted\\\" colspan=\\\"8\\\"></th>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-muted\\\">Status</th>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-muted\\\">Next Action</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody *ngFor=\\\"let data of dispatchList| \\r\\n          grdFilter: {containerid: searchText,ContainerNo: searchText,appointmentno: searchText,legno: searchText} ; \\r\\n          let ind=index;\\\">\\r\\n            <tr>\\r\\n              <td> <small> {{data.OrderDetails.containerid}}</small>\\r\\n              </td>\\r\\n              <td> <small style=\\\"color: cornflowerblue;\\\" > {{data.OrderDetails.ContainerNo}} </small>\\r\\n              </td>\\r\\n              <td colspan=\\\"8\\\">\\r\\n                <table class=\\\"table table-sm table-striped table-borderless\\\">\\r\\n                  <thead class=\\\"thead-light\\\">\\r\\n                    <tr>\\r\\n                      <th scope=\\\"col\\\" class=\\\"text-muted\\\"> <small>Appointment no</small></th>\\r\\n                      <th scope=\\\"col\\\" class=\\\"text-muted\\\"><small>Legno </small></th>\\r\\n                      <th scope=\\\"col\\\" class=\\\"text-muted\\\"><small>Leg type </small></th>\\r\\n                      <th scope=\\\"col\\\" class=\\\"text-muted\\\"><small>Driver </small></th>\\r\\n                      <th scope=\\\"col\\\" class=\\\"text-muted\\\"><small>Driver notes </small></th>\\r\\n                      <th scope=\\\"col\\\" class=\\\"text-muted\\\"><small>Pickup </small></th>\\r\\n                      <th scope=\\\"col\\\" class=\\\"text-muted\\\"> <small> Delivery </small></th>\\r\\n                      <th scope=\\\"col\\\" class=\\\"text-muted\\\"> <small> Wait time at Port </small></th>\\r\\n                      <th scope=\\\"col\\\" class=\\\"text-muted\\\"> <small> Wait time at Customer </small></th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <tr *ngFor=\\\"let dispatch of data.dispatchdetails\\\">\\r\\n                      <td><small> {{dispatch.appointmentno}}</small>\\r\\n                      </td>\\r\\n                      <td><small>{{dispatch.legno}}</small>\\r\\n                      </td>\\r\\n                      <td><small>{{dispatch.legtypeDesc}}</small>\\r\\n                      </td>\\r\\n                      <td><small>{{dispatch.driverid}}</small>\\r\\n                      </td>\\r\\n                      <td><small>{{dispatch.drivernotes}}</small>\\r\\n                      </td>\\r\\n                      <td><small>{{dispatch.actualarrival}}</small>\\r\\n                      </td>\\r\\n                      <td><small>{{dispatch.actualdeparture}}</small>\\r\\n                      </td>\\r\\n                      <td><small>{{dispatch.portwaitingtimefrom}} - {{dispatch.portwaitingtimeto}}</small>\\r\\n                      </td>\\r\\n                      <td><small>{{dispatch.customerwaitingtimefrom}} - {{dispatch.customerwaitingtimeto}}</small>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n\\r\\n              </td>\\r\\n              <td>\\r\\n                <small *ngIf=\\\"data.OrderDetails.StatusDesc == 'Dispatch inprogress'\\\" style=\\\"color:olivedrab;\\\"> {{data.OrderDetails.StatusDesc}} </small>\\r\\n                <small  *ngIf=\\\"data.OrderDetails.StatusDesc != 'Dispatch inprogress'\\\" style=\\\"color: cornflowerblue;\\\"> {{data.OrderDetails.StatusDesc}} </small>\\r\\n              </td>\\r\\n              <td>\\r\\n                <!-- <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\" style=\\\"border-radius: 1rem;\\\"\\r\\n                data-toggle=\\\"modal\\\"  data-target=\\\".modal-editdispatch\\\"  (click)=\\\"updateclick(data)\\\">\\r\\n                  <i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  Update\\r\\n                </button> -->              \\r\\n\\r\\n                <strong> <i class=\\\"cil-chevron-circle-right-alt\\\" style=\\\"color: yellowgreen;\\\"></i></strong>\\r\\n                &nbsp;\\r\\n                <small  *ngIf=\\\"data.OrderDetails.StatusDesc == 'Dispatch inprogress'\\\"  class=\\\"font-weight-normal\\\" style=\\\"color: orange;\\\">\\r\\n                  Proceed to Complete </small>\\r\\n                <small  *ngIf=\\\"data.OrderDetails.StatusDesc != 'Dispatch inprogress'\\\" class=\\\"font-weight-normal\\\" style=\\\"color: green;\\\">\\r\\n                  Proceed to UnHold</small>\\r\\n                &nbsp;\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\" style=\\\"border-radius: 1rem;\\\"\\r\\n                (click)=\\\"load_DispatchForEdit(data)\\\">\\r\\n                  <i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                </button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n          <tr *ngIf=\\\"dispatchList.length===0\\\">\\r\\n            <td colspan=\\\"3\\\">\\r\\n              <h4 style=\\\"color: darkorange;\\\">No records found! </h4>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal fade modal-editdispatch\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n      aria-hidden=\\\"true\\\" data-backdrop=\\\"static\\\">\\r\\n      <div class=\\\"modal-dialog modal-xl\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n          <div class=\\\"modal-header\\\">\\r\\n            <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Modal title</h5>\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n            </button>\\r\\n          </div>\\r\\n          <div class=\\\"modal-body\\\">\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <!-- <tr\\r\\n              *ngFor=\\\"let data of dispatchList | groupBy:'OrderDetailKey'| \\r\\n            grdFilter: {containerid: searchText,ContainerNo: searchText,appointmentno: searchText,legno: searchText} ; let ind=index;\\\">\\r\\n              <td> {{data.containerid}}\\r\\n              </td>\\r\\n              <td>{{data.containerno}}\\r\\n              </td>\\r\\n              <td>{{data.appointmentno}}\\r\\n              </td>\\r\\n              <td>{{data.legno}}\\r\\n              </td>\\r\\n              <td>{{data.legtypeDesc}}\\r\\n              </td>\\r\\n              <td>{{data.driverid}}\\r\\n              </td>\\r\\n              <td>{{data.drivernotes}}\\r\\n              </td>\\r\\n              <td>{{data.actualarrival}}\\r\\n              </td>\\r\\n              <td>{{data.actualdeparture}}\\r\\n              </td>\\r\\n              <td>{{data.portwaitingtimefrom}} - {{data.portwaitingtimeto}}\\r\\n              </td>\\r\\n              <td>{{data.customerwaitingtimefrom}} - {{data.customerwaitingtimeto}}\\r\\n              </td>\\r\\n              <td>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\" style=\\\"border-radius: 1rem;\\\"\\r\\n                data-toggle=\\\"modal\\\" data-target=\\\".modal-editdispatch\\\">\\r\\n                  <i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  Update\\r\\n                </button>\\r\\n\\r\\n              </td>\\r\\n            </tr> -->\"","export default \"<br>\\r\\n<div id=\\\"accordion\\\" *ngIf=\\\"ShowOrderList\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-7 col-sm-7 col-md-7\\\">\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-3 col-sm-3 col-md-3\\\">\\r\\n      <div class=\\\"form-group input-group input-group-sm\\\">\\r\\n        <div class=\\\"img-group-prepend\\\">\\r\\n          <img src=\\\"assets/img/brand/search16px.png\\\" /> &nbsp;\\r\\n        </div>\\r\\n        <input [(ngModel)]=\\\"searchText\\\" class=\\\"form-control form-control-sm\\\" style=\\\"border-radius: 0.5rem;\\\" type=\\\"text\\\"\\r\\n          placeholder=\\\"Search..\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- <div class=\\\"col-3 col-sm-3 col-md-3\\\">\\r\\n      <tr>\\r\\n        <td>\\r\\n          <select id=\\\"filterOrderType\\\" class=\\\"form-control form-control-sm text-muted\\\">\\r\\n            <option [value]=\\\"0\\\">Type</option>\\r\\n            <option [value]=\\\"otype.Value\\\" *ngFor=\\\"let otype of ordertypelist\\\">{{otype.Name}}</option>\\r\\n          </select>\\r\\n        </td>\\r\\n        &nbsp;\\r\\n        <td>\\r\\n          <select id=\\\"filterPriority\\\" class=\\\"form-control form-control-sm text-muted\\\">\\r\\n            <option [value]=\\\"0\\\">Priority</option>\\r\\n            <option [value]=\\\"priority.Value\\\" *ngFor=\\\"let priority of prioritylist\\\">{{priority.Name}}\\r\\n            </option>\\r\\n          </select>\\r\\n          &nbsp;\\r\\n        <td>\\r\\n          <select id=\\\"filterStatus\\\" class=\\\"form-control form-control-sm text-muted\\\">\\r\\n            <option [value]=\\\"0\\\">Status</option>\\r\\n            <option [value]=\\\"status.status\\\" *ngFor=\\\"let status of statuslist\\\">{{status.description}}</option>\\r\\n          </select>\\r\\n        </td>\\r\\n      </tr>\\r\\n      \\r\\n    </div> -->\\r\\n\\r\\n    <div class=\\\"col-2 col-sm-2 col-md-2\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary \\\" style=\\\"border-radius: 1rem;\\\" (click)=\\\"createNewOrder()\\\"> <i\\r\\n          class=\\\"fa fa-plus-circle\\\" aria-hidden=\\\"true\\\"></i> New </button>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" id=\\\"style-10\\\">\\r\\n    <!-- <div class=\\\"col-sm-2 col-md-2 col-lg-2 scrollbar\\\" id=\\\"style-10\\\">\\r\\n      <table class=\\\"table table-sm table-striped  table-dark\\\">\\r\\n        <tbody>\\r\\n          <tr>\\r\\n            <br>\\r\\n            <h5>&nbsp; Delivery Orders <span class=\\\"badge badge-warning\\\">Recent</span></h5>\\r\\n          </tr>\\r\\n          <tr\\r\\n            *ngFor=\\\"let order of Orderlist| grdFilter: {OrderNo: searchText,ordertypedescription: searchText} ; let ind=index;\\\">\\r\\n\\r\\n            <td>\\r\\n              <br>\\r\\n              <span class=\\\"font-weight-bold\\\" style=\\\"color:olivedrab\\\">\\r\\n                {{ order.OrderNo }} <br>\\r\\n                <small style=\\\"color:lightslategray\\\"> <i class=\\\"fa fa-commenting-o\\\"></i> {{order.ordertypedescription}}\\r\\n                </small>\\r\\n              </span>\\r\\n            </td>\\r\\n            <td class=\\\"text-right\\\" style=\\\"width: 40%;\\\">\\r\\n              <br>\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\" data-toggle=\\\"modal\\\"\\r\\n                data-target=\\\".bd-example-modal-lg\\\" (click)=\\\"view(order.OrderKey)\\\"> <i class=\\\"fa fa-bullseye\\\"\\r\\n                  aria-hidden=\\\"true\\\"></i> View</button></td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n\\r\\n    </div> -->\\r\\n    <!-- <div class=\\\"col-sm-10 col-md-10 col-lg-10  scrollbar\\\" id=\\\"style-10\\\"> -->\\r\\n    <table class=\\\"table table-sm table-borderless\\\">\\r\\n      <thead class=\\\"thead-dark shadow\\\">\\r\\n        <tr style=\\\"border: 2px;\\\">\\r\\n          <th scope=\\\"col\\\" scope=\\\"col\\\"  (click)=\\\"sort('OrderNo')\\\"  class=\\\"pointer text-muted text-left border-right\\\">Order &nbsp;<i class=\\\"fa fa-sort\\\" aria-hidden=\\\"true\\\"></i>          \\r\\n          </th>\\r\\n          <th scope=\\\"col\\\" scope=\\\"col\\\"  (click)=\\\"sort('ordertypedescription')\\\"  class=\\\" pointertext-muted text-left\\\">Type  &nbsp;<i class=\\\"fa fa-sort\\\" aria-hidden=\\\"true\\\"></i>          \\r\\n          </th>\\r\\n          <th scope=\\\"col\\\" scope=\\\"col\\\"  (click)=\\\"sort('BillToAddr')\\\"      class=\\\" pointer text-muted text-left\\\">Customer &nbsp;<i class=\\\"fa fa-sort\\\" aria-hidden=\\\"true\\\"></i>          \\r\\n          </th>\\r\\n          <th scope=\\\"col\\\" scope=\\\"col\\\"  (click)=\\\"sort('SourceAddr')\\\"    class=\\\"pointer text-muted text-left\\\">Pickup &nbsp;<i class=\\\"fa fa-sort\\\" aria-hidden=\\\"true\\\"></i></th> \\r\\n          \\r\\n          <th scope=\\\"col\\\" scope=\\\"col\\\"  (click)=\\\"sort('DestinationAddr')\\\"    class=\\\" pointer text-muted text-left\\\">Delivery &nbsp;<i class=\\\"fa fa-sort\\\" aria-hidden=\\\"true\\\"></i></th>\\r\\n          <th scope=\\\"col\\\"  scope=\\\"col\\\" (click)=\\\"sort('statusdescription')\\\"  class=\\\" pointer text-muted text-left\\\" >Status &nbsp;<i class=\\\"fa fa-sort\\\" aria-hidden=\\\"true\\\"></i>           \\r\\n          </th>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-muted text-left\\\">Edit/View</th>\\r\\n          <!-- <th scope=\\\"col\\\" class=\\\"text-muted text-left border-left\\\">Next Action</th> -->\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr style=\\\" height: 10px\\\">\\r\\n          <td colspan=\\\"8\\\"></td>\\r\\n        </tr>\\r\\n        <tr\\r\\n          *ngFor=\\\"let order of Orderlist| grdFilter: {OrderNo: searchText,ordertypedescription: searchText,statusdescription:searchText \\r\\n            ,BillToAddr: searchText,\\r\\n            SourceAddr: searchText,\\r\\n            DestinationAddr: searchText}|paginate:{itemsPerPage:4,currentPage:p,totalItems: count} ; let ind=index;\\\">\\r\\n          <td scope=\\\"row\\\" class=\\\"text-left border-right\\\">\\r\\n            <small class=\\\"font-weight-bold\\\">\\r\\n              {{ order.OrderNo }} <br>\\r\\n              <span class=\\\"badge badge-pill badge-primary\\\"><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                <small> <b> {{order.OrderDate  | date}}</b></small>\\r\\n              </span>\\r\\n            </small>\\r\\n          </td>\\r\\n\\r\\n          <td scope=\\\"row\\\" class=\\\"text-left\\\">\\r\\n            <small class=\\\"font-weight-normal\\\">\\r\\n              {{order.ordertypedescription}} </small>\\r\\n          </td>\\r\\n          <td class=\\\"text-left\\\">\\r\\n            <small> {{ order.BillToAddr }}</small> <br>\\r\\n            <small style=\\\"color: cornflowerblue;\\\">\\r\\n              {{ order.BillToAddressBO.Address1 }},{{ order.BillToAddressBO.Address2 }}<br>\\r\\n              {{ order.BillToAddressBO.City }}, {{ order.BillToAddressBO.State}}-{{ order.BillToAddressBO.Zip}}\\r\\n            </small>\\r\\n          </td>\\r\\n          <td>\\r\\n            <small> {{ order.SourceAddr }}</small> <br>\\r\\n            <small style=\\\"color: cornflowerblue;\\\">\\r\\n              {{ order.SourceAddressBO.Address1 }},{{ order.SourceAddressBO.Address2 }}<br>\\r\\n              {{ order.SourceAddressBO.City }}, {{ order.SourceAddressBO.State}}-{{ order.SourceAddressBO.Zip}}\\r\\n            </small>\\r\\n          </td>\\r\\n          <td>\\r\\n            <span> <small> {{ order.DestinationAddr }}</small> <br>\\r\\n              <small style=\\\"color: cornflowerblue;\\\">\\r\\n                {{ order.DestinationAddressBO.Address1 }},{{ order.DestinationAddressBO.Address2 }} <br>\\r\\n                {{ order.DestinationAddressBO.City }},\\r\\n                {{ order.DestinationAddressBO.State}}-{{ order.DestinationAddressBO.Zip}} </small> </span>\\r\\n          </td>\\r\\n          <td> <small> {{ order.statusdescription }} </small></td>\\r\\n          <td>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-info btn-sm\\\" style=\\\"border-radius: 0.5rem;\\\"\\r\\n              (click)=\\\"update(order.OrderKey)\\\">\\r\\n              <i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i>\\r\\n              Update\\r\\n            </button>\\r\\n            &nbsp; &nbsp;\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-info btn-sm\\\" style=\\\"border-radius: 0.5rem;\\\" data-toggle=\\\"modal\\\"\\r\\n              data-target=\\\".bd-example-modal-lg\\\" (click)=\\\"view(order.OrderKey)\\\"> <i class=\\\"fa fa-bullseye\\\"\\r\\n                aria-hidden=\\\"true\\\"></i> View</button>\\r\\n          </td>\\r\\n          <!-- <td class=\\\"border-left\\\">\\r\\n            <div *ngIf=\\\"order.nextaction == '! '\\\">\\r\\n              <i class=\\\"cil-chevron-circle-right-alt\\\"></i>\\r\\n              &nbsp;         <small > {{ order.nextaction }}</small> &nbsp;\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-outline-success btn-sm\\\" style=\\\"border-radius: 1rem;\\\"\\r\\n                data-toggle=\\\"modal\\\" data-target=\\\".bd-example-modal-lg\\\" (click)=\\\"view(order.OrderKey)\\\" > Submit </button>  \\r\\n            </div>          \\r\\n          </td> -->\\r\\n        </tr>\\r\\n        <tr *ngIf=\\\"Orderlist.length===0\\\">\\r\\n          <td colspan=\\\"3\\\">\\r\\n            <h4 style=\\\"color: darkorange;\\\">No records found! </h4>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n    <div class=\\\"container text-right\\\"> \\r\\n      <pagination-controls \\r\\n      (pageChange)=\\\"p=$event\\\"\\r\\n      autoHide=\\\"true\\\"\\r\\n      responsive=\\\"true\\\"> </pagination-controls>     \\r\\n    </div>\\r\\n    <!-- </div> -->\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"modal fade bd-example-modal-lg\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\" data-keyboard=\\\"false\\\" data-backdrop=\\\"static\\\" [ngStyle]=\\\"{'display':display}\\\" style=\\\"width:90%\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Order</h5>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" (click)=\\\"closeModalDialog()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n            <div class=\\\"card \\\">\\r\\n              <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-3\\\">\\r\\n                    <!-- <span style=\\\"color: white\\\">Order no </span><br> -->\\r\\n                    <div class=\\\"panel-heading\\\">\\r\\n                      <span class=\\\"panel-title\\\" style=\\\"color:black\\\">Order No :</span>\\r\\n                      <span style=\\\"color:black\\\"> <b> {{doHeader.OrderNo}}</b> </span>\\r\\n                    </div>\\r\\n\\r\\n                    <!-- <span style=\\\"color:white\\\"> Date </span><br> -->\\r\\n                    <div class=\\\"panel-heading\\\">\\r\\n                      <span class=\\\"panel-title\\\" style=\\\"color:black\\\">Date :</span>\\r\\n                      <span style=\\\"color:black\\\"> <b> {{doHeader.OrderDate|date}}</b></span>\\r\\n                    </div>\\r\\n                    <!-- <span style=\\\"color: white\\\"> Type </span><br> -->\\r\\n                    <div class=\\\"panel-heading\\\">\\r\\n                      <span class=\\\"panel-title\\\" style=\\\"color:black\\\">Type :</span>\\r\\n                      <span style=\\\"color: black\\\"> <b> {{doHeader.ordertypedescription}}</b></span>\\r\\n                    </div>\\r\\n\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-3\\\">\\r\\n                    <!-- <span style=\\\"color:white\\\"> Broker </span><br> -->\\r\\n                    <div class=\\\"panel-heading\\\">\\r\\n                      <span class=\\\"panel-title\\\" style=\\\"color:black\\\">Broker :</span>\\r\\n                      <span style=\\\"color: black\\\"> <b> {{doHeader.BrokerName}} </b></span>\\r\\n                    </div>\\r\\n                    <!-- <span style=\\\"color:white\\\"> Broker Ref# </span><br> -->\\r\\n                    <div class=\\\"panel-heading\\\">\\r\\n                      <span class=\\\"panel-title\\\" style=\\\"color:black\\\">Broker Reference :</span>\\r\\n                      <span style=\\\"color: black\\\"> <b> {{doHeader.BrokerRefNo}} </b></span>\\r\\n                    </div>\\r\\n                    <!-- <span style=\\\"color:white\\\"> Booking# </span><br> -->\\r\\n                    <div class=\\\"panel-heading\\\">\\r\\n                      <span class=\\\"panel-title\\\" style=\\\"color:black\\\">Booking No :</span>\\r\\n                      <span style=\\\"color: black\\\"> <b> {{doHeader.BookingNo}} </b></span>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"col-sm-3\\\">\\r\\n                    <!-- <span style=\\\"color:white\\\"> Vessel </span><br> -->\\r\\n                    <div class=\\\"panel-heading\\\">\\r\\n                      <span class=\\\"panel-title\\\" style=\\\"color:black\\\">Vessel :</span>\\r\\n                      <span> <b> {{doHeader.VesselName}} </b></span>\\r\\n                    </div>\\r\\n                    <!-- <span style=\\\"color:white\\\"> Bill of Lading </span><br> -->\\r\\n                    <div class=\\\"panel-heading\\\">\\r\\n                      <span class=\\\"panel-title\\\">Bill of Lading : </span>\\r\\n                      <span> <b> {{doHeader.BillofLading}} </b></span>\\r\\n                    </div>\\r\\n                    <!-- <span style=\\\"color:white\\\"> Cut-Off Date </span><br> -->\\r\\n                    <!-- <div class=\\\"panel-heading\\\">\\r\\n                      <span class=\\\"panel-title\\\" style=\\\"color:black\\\">Cut-Off Date :</span>\\r\\n                      <span> <b> {{doHeader.CutOffDate|date}} </b></span>\\r\\n                    </div> -->\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-3 text-right\\\">\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n                <br>\\r\\n                <div class=\\\"row\\\">\\r\\n\\r\\n                  <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n                    <!-- <div class=\\\"card text-white bg-secondary mb-3\\\" style=\\\"max-width: 18rem;\\\">\\r\\n                       <div class=\\\"card-header\\\">BillTo</div>\\r\\n                      <div class=\\\"card-body\\\">\\r\\n                         <span> {{doHeader.BillToAddr}}</span> \\r\\n                        <br>\\r\\n                        <span> {{doHeader.BillToAddressBO.Address1}}, {{doHeader.BillToAddressBO.Address2}} </span>\\r\\n                        <br>\\r\\n                        <span> {{doHeader.BillToAddressBO.City}} - {{doHeader.BillToAddressBO.Zip}} </span>\\r\\n                        <br>\\r\\n                        <span> {{doHeader.BillToAddressBO.State}}</span>\\r\\n                      </div>\\r\\n                    </div> -->\\r\\n\\r\\n\\r\\n                    <div class=\\\"panel-heading\\\">\\r\\n                      <h6 class=\\\"panel-title\\\">BillTo</h6>\\r\\n                    </div>\\r\\n                    <div class=\\\"card alert-secondary text-center p-3\\\">\\r\\n                      <!-- <blockquote class=\\\"blockquote mb-0\\\"> -->\\r\\n                      <!-- <span> {{doHeader.BillToAddressBO.Name}}</span> -->\\r\\n                      <!-- <span> {{doHeader.BillToAddressBO.Address1}}, {{doHeader.BillToAddressBO.Address2}} </span>\\r\\n                      <span> {{doHeader.BillToAddressBO.City}} - {{doHeader.BillToAddressBO.Zip}} </span>\\r\\n                      <span> {{doHeader.BillToAddressBO.State}}</span> -->\\r\\n                      <!-- </blockquote> -->\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n                    <!-- <div class=\\\"card text-white bg-secondary mb-3\\\" style=\\\"max-width: 18rem;\\\">\\r\\n                      <div class=\\\"card-header\\\">Pickup</div>\\r\\n                      <div class=\\\"card-body\\\">\\r\\n                        <span> {{doHeader.SourceAddressBO.Name}}</span>\\r\\n                        <br>\\r\\n                        <span> {{doHeader.SourceAddressBO.Address1}}, {{doHeader.SourceAddressBO.Address2}} </span>\\r\\n                        <br>\\r\\n                        <span> {{doHeader.SourceAddressBO.City}} - {{doHeader.SourceAddressBO.Zip}} </span>\\r\\n                        <br>\\r\\n                        <span> {{doHeader.SourceAddressBO.State}}</span>\\r\\n                      </div>\\r\\n                    </div> -->\\r\\n                    <div class=\\\"panel-heading\\\">\\r\\n                      <h6 class=\\\"panel-title\\\" style=color:black>Pickup</h6>\\r\\n                    </div>\\r\\n                    <div class=\\\"card alert-primary text-center p-3\\\">\\r\\n                      <!-- <blockquote class=\\\"blockquote mb-0\\\"> -->\\r\\n                      <!-- <span> {{doHeader.SourceAddressBO.Name}}</span>\\r\\n                      <span> {{doHeader.SourceAddressBO.Address1}}, {{doHeader.SourceAddressBO.Address2}} </span>\\r\\n                      <span> {{doHeader.SourceAddressBO.City}} - {{doHeader.SourceAddressBO.Zip}} </span>\\r\\n                      <span> {{doHeader.SourceAddressBO.State}}</span> -->\\r\\n                      <!-- </blockquote> -->\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n                    <!-- <div class=\\\"card text-white bg-secondary mb-3\\\" style=\\\"max-width: 18rem;\\\">\\r\\n                      <div class=\\\"card-header\\\">Delivery</div>\\r\\n                      <div class=\\\"card-body\\\">\\r\\n                        <span> {{doHeader.DestinationAddressBO.Name}}</span>\\r\\n                        <br>\\r\\n                        <span> {{doHeader.DestinationAddressBO.Address1}}, {{doHeader.DestinationAddressBO.Address2}}\\r\\n                        </span>\\r\\n                        <br>\\r\\n                        <span> {{doHeader.DestinationAddressBO.City}} - {{doHeader.DestinationAddressBO.Zip}} </span>\\r\\n                        <br>\\r\\n                        <span> {{doHeader.DestinationAddressBO.State}}</span>\\r\\n                      </div>\\r\\n                    </div> -->\\r\\n                    <div class=\\\"panel-heading\\\">\\r\\n                      <h6 class=\\\"panel-title\\\" style=color:black>Delivery</h6>\\r\\n                    </div>\\r\\n                    <div class=\\\"card alert-secondary text-center p-3\\\">\\r\\n                      <!-- <blockquote class=\\\"blockquote mb-0\\\"> -->\\r\\n                      <!-- <span> {{doHeader.DestinationAddressBO.Name}}</span>\\r\\n                      <span> {{doHeader.DestinationAddressBO.Address1}}, {{doHeader.DestinationAddressBO.Address2}}\\r\\n                      </span>\\r\\n                      <span> {{doHeader.DestinationAddressBO.City}} - {{doHeader.DestinationAddressBO.Zip}} </span>\\r\\n                      <span> {{doHeader.DestinationAddressBO.State}}</span> -->\\r\\n                      <!-- </blockquote> -->\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n                    <!-- <div class=\\\"card text-white bg-secondary mb-3\\\" style=\\\"max-width: 18rem;\\\">\\r\\n                      <div class=\\\"card-header\\\">Return</div>\\r\\n                      <div class=\\\"card-body\\\">\\r\\n\\r\\n                        <span> {{doHeader.ReturnAddressBO.Name}}</span>\\r\\n                        <br>\\r\\n                        <span> {{doHeader.ReturnAddressBO.Address1}}, {{doHeader.ReturnAddressBO.Address2}} </span>\\r\\n                        <br>\\r\\n                        <span> {{doHeader.ReturnAddressBO.City}} - {{doHeader.ReturnAddressBO.Zip}} </span>\\r\\n                        <br>\\r\\n                        <span> {{doHeader.ReturnAddressBO.State}}</span>\\r\\n                      </div>\\r\\n                    </div> -->\\r\\n                    <div class=\\\"panel-heading\\\">\\r\\n                      <h5 class=\\\"panel-title\\\" style=color:black>Return</h5>\\r\\n                    </div>\\r\\n                    <div class=\\\"card alert-primary text-center p-3\\\">\\r\\n                      <!-- <blockquote class=\\\"blockquote mb-0\\\"> -->\\r\\n                      <!-- <span> {{doHeader.ReturnAddressBO.Name}}</span>\\r\\n                      <span> {{doHeader.ReturnAddressBO.Address1}}, {{doHeader.ReturnAddressBO.Address2}} </span>\\r\\n                      <span> {{doHeader.ReturnAddressBO.City}} - {{doHeader.ReturnAddressBO.Zip}} </span>\\r\\n                      <span> {{doHeader.ReturnAddressBO.State}}</span> -->\\r\\n                      <!-- </blockquote> -->\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"panel panel-warning\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                    <h6 class=\\\"panel-title\\\" style=color:black>Container(s)</h6>\\r\\n                  </div>\\r\\n                  <div class=\\\"panel-body\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col-sm-10 col-md-10 col-lg-10\\\">\\r\\n                        <!-- <div class=\\\"card bg-success text-white text-center p-3\\\">\\r\\n                                    <blockquote class=\\\"blockquote mb-0\\\">\\r\\n              \\r\\n                                      <span class=\\\"badge badge-pill badge-secondary\\\">Container Detail</span> <br><br>\\r\\n              \\r\\n                                      <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\r\\n                                          <span class=\\\"text-muted\\\"> Container </span><br>\\r\\n                                        </div>\\r\\n              \\r\\n                                        <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\r\\n                                          <span class=\\\"text-muted\\\"> Size </span><br>\\r\\n                                        </div>\\r\\n              \\r\\n                                        <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\r\\n                                          <span class=\\\"text-muted\\\"> Chassis </span><br>\\r\\n                                        </div>\\r\\n              \\r\\n                                        <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\r\\n                                          <span class=\\\"text-muted\\\"> Seal# </span><br>\\r\\n                                        </div>\\r\\n              \\r\\n                                        <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\r\\n                                          <span class=\\\"text-muted\\\"> Weight </span><br>\\r\\n                                        </div>\\r\\n                                      </div>\\r\\n                                      <ng-container *ngFor=\\\"let field of doHeader.orderdetails; index as i\\\">\\r\\n              \\r\\n                                        <div class=\\\"row\\\">\\r\\n                                          <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\r\\n                                            <span><b>{{field.ContainerNo}}</b></span>\\r\\n                                          </div>\\r\\n              \\r\\n                                          <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\r\\n                                            <span><b>{{field.ContainerSizeDesc}} </b></span>\\r\\n                                          </div>\\r\\n              \\r\\n                                          <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\r\\n                                            <span><b>{{field.Chassis}}</b></span>\\r\\n                                          </div>\\r\\n              \\r\\n                                          <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\r\\n                                            <span><b>{{field.SealNo}} </b></span>\\r\\n                                          </div>\\r\\n              \\r\\n                                          <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\r\\n                                            <span><b> {{field.Weight}}</b></span>\\r\\n                                          </div>\\r\\n                                        </div>\\r\\n                                      </ng-container>\\r\\n              \\r\\n                                    </blockquote>\\r\\n                                  </div> -->\\r\\n\\r\\n                        <!-- <div class=\\\"card bg-secondary text-center p-3\\\"> -->\\r\\n                        <table class=\\\"table table-sm alert-warning\\\">\\r\\n                          <thead>\\r\\n                            <tr>\\r\\n                              <th scope=\\\"col\\\">Container</th>\\r\\n                              <th scope=\\\"col\\\">Size</th>\\r\\n                              <th scope=\\\"col\\\">Chassis</th>\\r\\n                              <th scope=\\\"col\\\">SealNo</th>\\r\\n                              <th scope=\\\"col\\\">Weight</th>\\r\\n                              <th scope=\\\"col\\\">Comments</th>\\r\\n                            </tr>\\r\\n                          </thead>\\r\\n                          <tbody>\\r\\n                            <tr *ngFor=\\\"let field of doHeader.orderdetails; index as i\\\">\\r\\n                              <td>{{field.ContainerNo}}</td>\\r\\n                              <td>{{field.ContainerSizeDesc}} </td>\\r\\n                              <td>{{field.Chassis}}</td>\\r\\n                              <td>{{field.SealNo}}</td>\\r\\n                              <td>{{field.Weight}}</td>\\r\\n                              <td>{{field.Comments}}</td>\\r\\n                            </tr>\\r\\n                          </tbody>\\r\\n                        </table>\\r\\n                        <!-- </div> -->\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <!-- <span style=\\\"color:black\\\"> Comments </span><br> -->\\r\\n                <div class=\\\"panel-heading\\\">\\r\\n                  <h6 class=\\\"panel-title\\\" style=color:black>Comments</h6>\\r\\n                </div>\\r\\n                <div class=\\\"card alert-success text-center p-3\\\">\\r\\n                  <blockquote class=\\\"blockquote mb-0\\\">\\r\\n                    <small>{{doHeader.Comment}}</small>\\r\\n                    <!-- <footer class=\\\"blockquote-footer\\\">\\r\\n                      <small>\\r\\n                        Someone famous in <cite title=\\\"Source Title\\\">Source Title</cite>\\r\\n                      </small>\\r\\n                    </footer> -->\\r\\n                  </blockquote>\\r\\n                </div>\\r\\n                <!-- <div class=\\\"card-columns\\\">\\r\\n                  <div class=\\\"card bg-primary text-white text-center p-3\\\">\\r\\n                    <blockquote class=\\\"blockquote mb-0\\\">\\r\\n                      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat.</p>\\r\\n                      <footer class=\\\"blockquote-footer text-white\\\">\\r\\n                        <small>\\r\\n                          Someone famous in <cite title=\\\"Source Title\\\">Source Title</cite>\\r\\n                        </small>\\r\\n                      </footer>\\r\\n                    </blockquote>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"card bg-primary text-white text-center p-3\\\">\\r\\n                    <blockquote class=\\\"blockquote mb-0\\\">\\r\\n                      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat.</p>\\r\\n                      <footer class=\\\"blockquote-footer text-white\\\">\\r\\n                        <small>\\r\\n                          Someone famous in <cite title=\\\"Source Title\\\">Source Title</cite>\\r\\n                        </small>\\r\\n                      </footer>\\r\\n                    </blockquote>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"card bg-primary text-white text-center p-3\\\">\\r\\n                    <blockquote class=\\\"blockquote mb-0\\\">\\r\\n                      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat.</p>\\r\\n                      <footer class=\\\"blockquote-footer text-white\\\">\\r\\n                        <small>\\r\\n                          Someone famous in <cite title=\\\"Source Title\\\">Source Title</cite>\\r\\n                        </small>\\r\\n                      </footer>\\r\\n                    </blockquote>\\r\\n                  </div>\\r\\n                </div> -->\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeModalDialog()\\\">Close</button>\\r\\n      </div> -->\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"row\\\" *ngIf=\\\"CreateOrEditOrder\\\">\\r\\n  <!-- [class.disabled]=\\\"editmode\\\" -->\\r\\n  <div class=\\\"card card-body\\\">\\r\\n    <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n      <form (ngSubmit)=\\\"f.form.valid && OnSubmit(f)\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n        <!-- <hr style=\\\"border: none; border-bottom: 3px solid slategray;\\\"> -->\\r\\n        <div class=\\\"row \\\">\\r\\n          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">          \\r\\n              <h4 style=\\\"color: yellowgreen;\\\"><b >Order</b>  <span *ngIf=\\\"!doHeader.OrderNo==' '\\\"> <b> #{{doHeader.OrderNo}}</b>\\r\\n                <span class=\\\"badge badge-pill badge-success\\\"><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  <small style=\\\"color:black\\\"> <b> {{doHeader.OrderDate | date}}</b></small>\\r\\n                </span>\\r\\n              </span>\\r\\n              </h4>             \\r\\n             \\r\\n\\r\\n            <input type=\\\"text\\\" id=\\\"OrderKey\\\" readonly class=\\\"form-control\\\" name=\\\"OrderKey\\\" tooltip=\\\"OrderKey\\\"\\r\\n              [(ngModel)]=\\\"doHeader.OrderKey\\\" #OrderKey=\\\"ngModel\\\" hidden=\\\"true\\\" />\\r\\n            <input type=\\\"text\\\" id=\\\"OrderNo\\\" readonly class=\\\"form-control\\\" name=\\\"OrderNo\\\" tooltip=\\\"Order No\\\"\\r\\n              [(ngModel)]=\\\"doHeader.OrderNo\\\" #OrderNo=\\\"ngModel\\\" hidden=\\\"true\\\" />\\r\\n            <input type=\\\"text\\\" class=\\\"form-control \\\" name=\\\"OrderDate\\\" id=\\\"OrderDate\\\" readonly [owlDateTimeTrigger]=\\\"dt3\\\"\\r\\n              [owlDateTime]=\\\"dt3\\\" placeholder=\\\"Order Date\\\" [(ngModel)]=\\\"doHeader.OrderDate\\\" #OrderDate=\\\"ngModel\\\"\\r\\n              hidden=\\\"true\\\" />\\r\\n            <owl-date-time [pickerType]=\\\"'calendar'\\\" #dt3 [hour12Timer]=\\\"false\\\"></owl-date-time>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-2 col-md-2 col-lg-2 text-right\\\">\\r\\n            <!-- <div class=\\\"container text-right\\\"> -->\\r\\n            <button class=\\\"btn btn-primary btn-sm\\\" type=\\\"submit\\\">\\r\\n              <i class=\\\"fa fa-floppy-o\\\" aria-hidden=\\\"true\\\"></i>&nbsp; {{lblCreateOrEdit}}</button>\\r\\n            &nbsp;&nbsp;\\r\\n            <button class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"cancel()\\\">\\r\\n              <i class=\\\"fa fa-ban\\\" aria-hidden=\\\"true\\\"></i>&nbsp; Cancel</button>\\r\\n            <!-- </div> -->\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- <div class=\\\"row \\\">  \\r\\n        <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </div> -->\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n            <app-customer name=\\\"CustKey\\\" [(ngModel)]=\\\"doHeader.CustKey\\\" #CustKey=\\\"ngModel\\\"\\r\\n              (CustomerSelectedOutput)=\\\"onSelectedCustKeyAddress($event)\\\" [Type]=1 [AddressType]=1\\r\\n              [customerKeyTobind]=\\\"doHeader.CustKey\\\" (OrdernoGenerated)=\\\"onOrdernoGenerated($event)\\\" [editmode]=\\\"editmode\\\">\\r\\n            </app-customer>\\r\\n          </div>\\r\\n          <!-- <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n          <app-company id=\\\"BillToAddress\\\" name=\\\"BillToAddress\\\" [(ngModel)]=\\\"doHeader.BillToAddress\\\"\\r\\n            #BillToAddress=\\\"ngModel\\\" (CustomerSelectedOutput)=\\\"onSelectedBilltoAddress($event)\\\" [Type]=2\\r\\n            [AddressType]=1 [addressKeyTobind]=\\\"doHeader.BillToAddress\\\">\\r\\n          </app-company>\\r\\n         \\r\\n        </div> -->\\r\\n          <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n            <app-company id=\\\"SourceAddress\\\" name=\\\"SourceAddress\\\" [(ngModel)]=\\\"doHeader.SourceAddress\\\"\\r\\n              (CustomerSelectedOutput)=\\\"onSelectedPickupAddress($event)\\\" [Type]=2 [AddressType]=2\\r\\n              [addressKeyTobind]=\\\"doHeader.SourceAddress\\\">\\r\\n            </app-company>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n            <app-company id=\\\"DestinationAddress\\\" name=\\\"DestinationAddress\\\" [(ngModel)]=\\\"doHeader.DestinationAddress\\\"\\r\\n              (CustomerSelectedOutput)=\\\"onSelectedConsigneeAddress($event)\\\" [Type]=2 [AddressType]=3\\r\\n              [addressKeyTobind]=\\\"doHeader.DestinationAddress\\\">\\r\\n            </app-company>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n            <app-company id=\\\"ReturnAddress\\\" name=\\\"ReturnAddress\\\" [(ngModel)]=\\\"doHeader.ReturnAddress\\\"\\r\\n              (CustomerSelectedOutput)=\\\"onSelectedReturnAddress($event)\\\" [Type]=2 [AddressType]=4\\r\\n              [addressKeyTobind]=\\\"doHeader.ReturnAddress\\\">\\r\\n            </app-company>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row \\\">\\r\\n          <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n            <div class=\\\"card-body text-dark\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"input-group input-group-sm\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Type </span>\\r\\n                  </div>\\r\\n                  <select id=\\\"cboOrderType\\\" class=\\\"form-control\\\" name=\\\"OrderType\\\" [(ngModel)]=\\\"doHeader.OrderType\\\"\\r\\n                    #OrderType=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && OrderType.invalid }\\\" required>\\r\\n                    <option [value]=\\\"otype.Value\\\" *ngFor=\\\"let otype of ordertypelist\\\">{{otype.Name}}</option>\\r\\n                  </select>\\r\\n                  <div *ngIf=\\\"f.submitted && OrderType.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"OrderType.errors.required\\\"> Order Type is required</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"input-group input-group-sm \\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Priority</span>\\r\\n                  </div>\\r\\n                  <select id=\\\"drpPriority\\\" class=\\\"form-control form-control-sm\\\" name=\\\"Priority\\\"\\r\\n                    [(ngModel)]=\\\"doHeader.Priority\\\" #Priority=\\\"ngModel\\\"\\r\\n                    [ngClass]=\\\"{ 'is-invalid': f.submitted && Priority.invalid }\\\" required>\\r\\n                    <option [value]=\\\"priority.Value\\\" *ngFor=\\\"let priority of prioritylist\\\">{{priority.Name}}\\r\\n                    </option>\\r\\n                  </select>\\r\\n\\r\\n                  <div *ngIf=\\\"f.submitted && Priority.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"Priority.errors.required\\\"> Priority is required</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"input-group input-group-sm\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Status</span>\\r\\n                  </div>\\r\\n                  <select id=\\\"drpStatus\\\" class=\\\"form-control form-control-sm\\\" name=\\\"Status\\\"\\r\\n                    (change)=\\\"StatusDropDownChanged($event.target.value)\\\" [(ngModel)]=\\\"doHeader.Status\\\"\\r\\n                    #Status=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && Status.invalid }\\\" required>\\r\\n                    <option [value]=\\\"status.status\\\" *ngFor=\\\"let status of statuslist\\\">{{status.description}}</option>\\r\\n                  </select>\\r\\n                  <div *ngIf=\\\"f.submitted && Status.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"Status.errors.required\\\"> Status is required</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"input-group input-group-sm mb-3\\\" *ngIf=\\\"HolddropdownVisible\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Reason</span>\\r\\n                  </div>\\r\\n                  <select id=\\\"drpHoldReason\\\" class=\\\"form-control form-control-sm\\\" name=\\\"HoldReason\\\"\\r\\n                    [(ngModel)]=\\\"doHeader.HoldReason\\\">\\r\\n                    <option [value]=\\\"reason.Value\\\" *ngFor=\\\"let reason of holdreasonlist\\\">{{reason.Name}}</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>\\r\\n              <br>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"input-group input-group-sm\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"> Booking</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" id=\\\"txtBookingNumBooking #\\\" class=\\\"form-control form-control-sm\\\" name=\\\"BookingNo\\\"\\r\\n                    [(ngModel)]=\\\"doHeader.BookingNo\\\" #BookingNo=\\\"ngModel\\\">\\r\\n                  <!-- [ngClass]=\\\"{ 'is-invalid': f.submitted && BookingNo.invalid }\\\" required />\\r\\n\\r\\n                      <div *ngIf=\\\"f.submitted && BookingNo.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"BookingNo.errors.required\\\"> Booking No is required</div>\\r\\n                      </div> -->\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- <div class=\\\"row\\\">\\r\\n                <div class=\\\"input-group input-group-sm\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Cut-off Date</span>\\r\\n                  </div>\\r\\n\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"CutOffDate\\\"\\r\\n                    [(ngModel)]=\\\"doHeader.CutOffDate\\\" #CutOffDate=\\\"ngModel\\\" placeholder=\\\"Cut-Off Date\\\"\\r\\n                    [ngClass]=\\\"{ 'is-invalid': f.submitted && CutOffDate.invalid }\\\" [owlDateTimeTrigger]=\\\"dt1\\\"\\r\\n                    [owlDateTime]=\\\"dt1\\\" required/>\\r\\n                  <owl-date-time [pickerType]=\\\"'calendar'\\\" #dt1></owl-date-time>\\r\\n                  <div *ngIf=\\\"f.submitted && CutOffDate.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"CutOffDate.errors.required\\\"> Cut-Off Date is required</div>\\r\\n                        </div>\\r\\n                </div>\\r\\n              </div> -->\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"input-group input-group-sm\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Load Port</span>\\r\\n                  </div>\\r\\n                  <select id=\\\"drpSource\\\" class=\\\"form-control form-control-sm\\\" name=\\\"PortofOriginKey\\\"\\r\\n                    [(ngModel)]=\\\"doHeader.PortofOriginKey\\\" #PortofOriginKey=\\\"ngModel\\\">\\r\\n                    <option [value]=\\\"src.AddrKey\\\" *ngFor=\\\"let src of LoadDischargePortList\\\">{{src.Name}}\\r\\n                    </option>\\r\\n                  </select>\\r\\n                  <!-- [ngClass]=\\\"{ 'is-invalid': f.submitted && PortofOriginKey.invalid }\\\" > required\\r\\n                          \\r\\n                          <div *ngIf=\\\"f.submitted && PortofOriginKey.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"PortofOriginKey.errors.required\\\">Load Port is required</div>\\r\\n                        </div> -->\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"input-group input-group-sm\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Dis Port</span>\\r\\n                  </div>\\r\\n                  <select id=\\\"drpPortofDestinationKey\\\" class=\\\"form-control form-control-sm\\\" name=\\\"PortofDestinationKey\\\"\\r\\n                    [(ngModel)]=\\\"doHeader.PortofDestinationKey\\\" #PortofDestinationKey=\\\"ngModel\\\">\\r\\n                    <option [value]=\\\"dest.AddrKey\\\" *ngFor=\\\"let dest of LoadDischargePortList\\\">{{dest.Name}}\\r\\n                    </option>\\r\\n                  </select>\\r\\n\\r\\n                  <!-- [ngClass]=\\\"{ 'is-invalid': f.submitted && PortofDestinationKey.invalid }\\\" required\\r\\n                        <div *ngIf=\\\"f.submitted && PortofDestinationKey.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"PortofDestinationKey.errors.required\\\"> Port of Destination is required</div>\\r\\n                        </div> -->\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"input-group input-group-sm\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Bill of lading</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" id=\\\"txtBLNo\\\" class=\\\"form-control form-control-sm\\\" name=\\\"BillofLading\\\"\\r\\n                    [(ngModel)]=\\\"doHeader.BillofLading\\\" #BillofLading=\\\"ngModel\\\">\\r\\n                  <!-- [ngClass]=\\\"{ 'is-invalid': f.submitted && BillofLading.invalid }\\\" required />\\r\\n  \\r\\n                        <div *ngIf=\\\"f.submitted && BillofLading.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"BillofLading.errors.required\\\"> Bill of Loading is required</div>\\r\\n                        </div> -->\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"input-group input-group-sm\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Carrier</span>\\r\\n                  </div>\\r\\n                  <select id=\\\"drpCarrier\\\" class=\\\"form-control form-control-sm\\\" name=\\\"CarrierKey\\\"\\r\\n                    [(ngModel)]=\\\"doHeader.CarrierKey\\\" #CarrierKey=\\\"ngModel\\\">\\r\\n                    <option [value]=\\\"carrier.CarrierKey\\\" *ngFor=\\\"let carrier of carrierlist\\\">\\r\\n                      {{carrier.CarrierId}}\\r\\n                    </option>\\r\\n                  </select>\\r\\n\\r\\n                  <!-- [ngClass]=\\\"{ 'is-invalid': f.submitted && CarrierKey.invalid }\\\" required\\r\\n                        <div *ngIf=\\\"f.submitted && CarrierKey.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"CarrierKey.errors.required\\\"> Carrier is required</div>\\r\\n                        </div> -->\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"input-group input-group-sm\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"> Vessel</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" id=\\\"txtVesselName\\\" class=\\\"form-control form-control-sm\\\" name=\\\"VesselName\\\"\\r\\n                    [(ngModel)]=\\\"doHeader.VesselName\\\" #VesselName=\\\"ngModel\\\">\\r\\n                  <!-- [ngClass]=\\\"{ 'is-invalid': f.submitted && VesselName.invalid }\\\" required />\\r\\n  \\r\\n                        <div *ngIf=\\\"f.submitted && VesselName.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"VesselName.errors.required\\\">Vessel Name is required</div>\\r\\n                        </div> -->\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"input-group input-group-sm\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Broker Ref</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"txtBrokerRefNo\\\" name=\\\"BrokerRefNo\\\"\\r\\n                    placeholder=\\\"Broker Ref no\\\" #BrokerRefNo=\\\"ngModel\\\" [(ngModel)]=\\\"doHeader.BrokerRefNo\\\">\\r\\n                  <!-- [ngClass]=\\\"{ 'is-invalid': f.submitted && BrokerRefNo.invalid }\\\" required />\\r\\n                          <div *ngIf=\\\"f.submitted && BrokerRefNo.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"BrokerRefNo.errors.required\\\">Broker Ref No is required</div>\\r\\n                          </div> -->\\r\\n                </div>\\r\\n              </div>\\r\\n              <br>\\r\\n              <div class=\\\"row\\\">\\r\\n                <app-broker id=\\\"Brokerkey\\\" name=\\\"Brokerkey\\\" [(ngModel)]=\\\"doHeader.Brokerkey\\\" #Brokerkey=\\\"ngModel\\\"\\r\\n                  (BrokerSelectedOutput)=\\\"onSelectedBroker($event)\\\" [brokerKeyTobind]=\\\"doHeader.Brokerkey\\\">\\r\\n                </app-broker>\\r\\n              </div>\\r\\n              <br><br>\\r\\n              <div class=\\\"row\\\">\\r\\n                <label>Comment</label>\\r\\n                <textarea class=\\\"form-control\\\" rows=\\\"6\\\" id=\\\"txtcomment\\\" placeholder=\\\"Comment\\\"\\r\\n                  [(ngModel)]=\\\"doHeader.Comment\\\" name=\\\"Comment\\\" #Comment=\\\"ngModel\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-9 col-md-9 col-lg-9\\\"> <br>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"card text-dark alert-warning\\\">\\r\\n                <div class=\\\"card-body text-dark border-light \\\">\\r\\n                  <h5>Containers </h5>\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"table-responsive\\\" style=\\\"overflow-x: auto\\\">\\r\\n                      <table id=\\\"containerAttributes\\\"\\r\\n                        class=\\\"table table-custom table-sm table-hover table-striped table-warning \\\" cellspacing=\\\"0\\\"\\r\\n                        width=\\\"100%\\\">\\r\\n                        <thead>\\r\\n                          <tr>\\r\\n                            <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\" hidden=\\\"true\\\">OrderDetailKey</th>\\r\\n                            <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\">Id</th>\\r\\n                            <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\">Container</th>\\r\\n                            <th scope=\\\"col\\\" class=\\\"text-center text-muted\\\" hidden=\\\"true\\\"> Size</th>\\r\\n                            <th scope=\\\"col\\\" class=\\\"text-center text-muted\\\"> Size</th>\\r\\n                            <th scope=\\\"col\\\" class=\\\"text-center text-muted\\\" hidden=\\\"true\\\">Chassis</th>\\r\\n                            <th scope=\\\"col\\\" class=\\\"text-center text-muted\\\">Seal</th>\\r\\n                            <th scope=\\\"col\\\" class=\\\"text-center text-muted\\\">Weight</th>\\r\\n                            <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\">Comment</th>\\r\\n                            <th scope=\\\"col\\\" class=\\\"text-center text-muted\\\">Actions</th>\\r\\n                          </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                          <tr *ngFor=\\\"let field of doHeader.orderdetails; let i = index\\\">\\r\\n                            <td class=\\\"text-left\\\" style=\\\"color: darkslategrey;\\\">\\r\\n                              {{field.containerid}}\\r\\n                            </td>\\r\\n                            <td class=\\\"text-left\\\" style=\\\"color: darkslategrey;\\\">\\r\\n                              <!-- <input [(ngModel)]=\\\"field.ContainerNo\\\" class=\\\"form-control form-control-sm \\\" type=\\\"text\\\"\\r\\n                        name=\\\"{{field.ContainerNo}}\\\" /> -->\\r\\n                              {{field.ContainerNo}} </td>\\r\\n                            <td hidden=\\\"true\\\" style=\\\"color: darkslategrey;\\\">\\r\\n\\r\\n                              <!-- <input [(ngModel)]=\\\"field.ContainerSize\\\" class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"\\r\\n                        name=\\\"{{field.ContainerSize}}\\\" /> -->\\r\\n                              {{field.ContainerSize}}\\r\\n                            </td>\\r\\n                            <td class=\\\"text-center\\\" style=\\\"color: darkslategrey;\\\">\\r\\n                              <!-- <input [(ngModel)]=\\\"field.containerSizeDesc\\\" class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"\\r\\n                        name=\\\"{{field.containerSizeDesc}}\\\" /> -->\\r\\n                              {{field.ContainerSizeDesc}}\\r\\n                            </td>\\r\\n                            <td hidden=\\\"true\\\" style=\\\"color: darkslategrey;\\\">\\r\\n                              <!--  <input [(ngModel)]=\\\"field.Chassis\\\" class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"\\r\\n                        name=\\\"{{field.Chassis}}\\\" /> -->\\r\\n                              {{field.Chassis}}</td>\\r\\n                            <td class=\\\"text-center\\\" style=\\\"color: darkslategrey;\\\">\\r\\n                              <!-- <input [(ngModel)]=\\\"field.SealNo\\\" class=\\\"form-control form-control-sm \\\" type=\\\"text\\\"\\r\\n                        name=\\\"{{field.SealNo}}\\\" /> -->\\r\\n                              {{field.SealNo}}</td>\\r\\n                            <td class=\\\"text-center\\\" style=\\\"color: darkslategrey;\\\">\\r\\n                              <!-- <input [(ngModel)]=\\\"field.Weight\\\" class=\\\"form-control form-control-sm \\\" type=\\\"text\\\"\\r\\n                        name=\\\"{{field.Weight}}\\\" /> -->\\r\\n                              {{field.Weight}}</td>\\r\\n                            <td class=\\\"text-left\\\" style=\\\"color: darkslategrey;\\\">\\r\\n                              <!-- <input [(ngModel)]=\\\"field.Comments\\\" class=\\\"form-control form-control-sm \\\" type=\\\"text\\\"\\r\\n                        name=\\\"{{field.Comments}}\\\" /> -->\\r\\n                              {{field.Comments}}\\r\\n                            </td>\\r\\n                            <td class=\\\"text-center\\\" style=\\\"color: darkslategrey;\\\">\\r\\n                              <a tooltip=\\\"Upload file\\\" (click)=\\\"edit(field,i)\\\">\\r\\n                                <i class=\\\"fa fa-pencil\\\"></i>\\r\\n                              </a> &nbsp;&nbsp;\\r\\n\\r\\n                              <a tooltip=\\\"Remove/Delete Container\\\" (click)=\\\"deleteFieldValue(i)\\\">\\r\\n                                <i class=\\\"fa fa-trash\\\"></i>\\r\\n                              </a>\\r\\n                            </td>\\r\\n                          </tr>\\r\\n\\r\\n                        </tbody>\\r\\n                      </table>\\r\\n                      <table>\\r\\n                        <thead>\\r\\n                          <tr>\\r\\n                            <th scope=\\\"col\\\" class=\\\"text-left\\\" hidden=\\\"true\\\">OrderDetailKey</th>\\r\\n                            <th scope=\\\"col\\\" class=\\\"text-left\\\" hidden=\\\"true\\\">Id</th>\\r\\n                            <th scope=\\\"col\\\" class=\\\"text-left\\\" hidden=\\\"true\\\">Container</th>\\r\\n                            <th scope=\\\"col\\\" class=\\\"text-center\\\" hidden=\\\"true\\\"> Size</th>\\r\\n                            <th scope=\\\"col\\\" class=\\\"text-center\\\" hidden=\\\"true\\\"> Size</th>\\r\\n                            <th scope=\\\"col\\\" class=\\\"text-center\\\" hidden=\\\"true\\\">Chassis</th>\\r\\n                            <th scope=\\\"col\\\" class=\\\"text-center\\\" hidden=\\\"true\\\">Seal</th>\\r\\n                            <th scope=\\\"col\\\" class=\\\"text-center\\\" hidden=\\\"true\\\">Weight</th>\\r\\n                            <th scope=\\\"col\\\" class=\\\"text-left\\\" hidden=\\\"true\\\">Comment</th>\\r\\n                            <th scope=\\\"col\\\" class=\\\"text-right\\\" hidden=\\\"true\\\">Actions</th>\\r\\n                          </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                          <tr>\\r\\n                            <td hidden=\\\"true\\\">\\r\\n                              <input class=\\\"form-control form-control-sm \\\" type=\\\"text\\\" placeholder=\\\"OrderDetailKey\\\"\\r\\n                                [(ngModel)]=\\\"OrderDetailKey\\\" name=\\\"OrderDetailKey\\\" />\\r\\n                            </td>\\r\\n                            <td hidden=\\\"true\\\">\\r\\n                              <input class=\\\"form-control form-control-sm \\\" type=\\\"text\\\" placeholder=\\\"containerid\\\"\\r\\n                                [(ngModel)]=\\\"containerid\\\" name=\\\"containerid\\\" />\\r\\n                            </td>\\r\\n                            <td>\\r\\n                              <input class=\\\"form-control form-control-sm \\\" type=\\\"text\\\" placeholder=\\\"Container\\\"\\r\\n                                [(ngModel)]=\\\"ContainerNo\\\" name=\\\"ContainerNo\\\" />\\r\\n                            </td>\\r\\n                            <td>\\r\\n                              <select id=\\\"drpcontainerType\\\" class=\\\"form-control form-control-sm \\\"\\r\\n                                aria-placeholder=\\\"ContainerSize\\\" [(ngModel)]=\\\"ContainerSize\\\" name=\\\"ContainerSize\\\"\\r\\n                                (change)=\\\"drpcontainersizeChanged($event.target.value)\\\">\\r\\n                                <option [value]=\\\"container.containersize\\\" *ngFor=\\\"let container of containersizelist\\\">\\r\\n                                  {{container.description}}</option>\\r\\n                              </select>\\r\\n\\r\\n                            </td>\\r\\n                            <td hidden=\\\"true\\\">\\r\\n                              <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" placeholder=\\\"Chassis\\\"\\r\\n                                [(ngModel)]=\\\"Chassis\\\" name=\\\"Chassis\\\" />\\r\\n                            </td>\\r\\n                            <td>\\r\\n                              <input class=\\\"form-control form-control-sm \\\" type=\\\"text\\\" placeholder=\\\"SealNo\\\"\\r\\n                                [(ngModel)]=\\\"SealNo\\\" name=\\\"SealNo\\\" />\\r\\n                            </td>\\r\\n                            <td>\\r\\n                              <input class=\\\"form-control form-control-sm \\\" type=\\\"number\\\" placeholder=\\\"Weight\\\"\\r\\n                                [(ngModel)]=\\\"Weight\\\" name=\\\"Weight\\\" />\\r\\n                            </td>\\r\\n                            <td colspan=\\\"5\\\">\\r\\n                              &nbsp; <input type=\\\"checkbox\\\" [(ngModel)]=\\\"IsHazardChecked\\\"\\r\\n                                [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"Checkbox1_Change($event)\\\" />\\r\\n                              <small class=\\\"badge badge-pill badge-secondary\\\">Hazard</small>\\r\\n\\r\\n                              &nbsp;<input type=\\\"checkbox\\\" value=\\\"Over weight\\\" [(ngModel)]=\\\"IsOverweightChecked\\\"\\r\\n                                [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"Checkbox2_Change($event)\\\" />\\r\\n                              <small class=\\\"badge badge-pill badge-secondary\\\">Over weight</small>\\r\\n\\r\\n                              &nbsp;<input type=\\\"checkbox\\\" value=\\\"Triaxle\\\" [(ngModel)]=\\\"IsTrixaleChecked\\\"\\r\\n                                [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"Checkbox3_Change($event)\\\" />\\r\\n                              <small class=\\\"badge badge-pill badge-secondary\\\">Triaxle</small>\\r\\n\\r\\n                              &nbsp;<input type=\\\"checkbox\\\" value=\\\"Needs to be scaled\\\"\\r\\n                                [(ngModel)]=\\\"IsNeedstobescaledChecked\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                (change)=\\\"Checkbox4_Change($event)\\\" />\\r\\n                              <small class=\\\"badge badge-pill badge-secondary\\\">Needs to be scaled</small>\\r\\n                            </td>\\r\\n                            <td>\\r\\n                              <button type=\\\"button\\\" class=\\\"btn alert-dark btn-sm\\\" style=\\\"border-radius: 1rem;\\\"\\r\\n                                (click)=\\\"add()\\\"> <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i> Add</button>\\r\\n                            </td>\\r\\n                          </tr>\\r\\n                        </tbody>\\r\\n                      </table>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"card text-dark alert-primary\\\">\\r\\n                <div class=\\\"card-body text-dark border-light\\\">\\r\\n                  <app-file-upload (onCompleteItem)=\\\"onCompleteItem($event)\\\" [orderno]=\\\"doHeader.OrderNo\\\"\\r\\n                    [queue]=\\\"doHeader.file\\\" [CreatedBy]=\\\"doHeader.CreatedBy\\\"></app-file-upload>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n      <!-- \\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4 col-md-4 col-lg-4 \\\">\\r\\n        <label>Comment</label>\\r\\n        <textarea class=\\\"form-control\\\" rows=\\\"5\\\" id=\\\"txtcomment\\\" placeholder=\\\"Comment\\\" [(ngModel)]=\\\"doHeader.Comment\\\"\\r\\n          name=\\\"Comment\\\" #Comment=\\\"ngModel\\\"></textarea>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n        <div class=\\\"card text-dark alert-primary\\\">\\r\\n          <div class=\\\"card-body text-dark border-light\\\">\\r\\n            <app-file-upload (onCompleteItem)=\\\"onCompleteItem($event)\\\" [orderno]=\\\"doHeader.OrderNo\\\"\\r\\n              [queue]=\\\"doHeader.file\\\" [CreatedBy]=\\\"doHeader.CreatedBy\\\"></app-file-upload>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div> -->\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"showImage\\\">\\r\\n  <div class=\\\"row \\\"> </div>\\r\\n  <div class=\\\"row \\\"> </div>\\r\\n  <div class=\\\"row \\\">\\r\\n    <div class=\\\"col-md-4\\\"> </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <!-- <img src=\\\"assets/img/brand/Actions-gear-icon128px.png\\\" /> -->\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\"> </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"row\\\">\\r\\n\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t<h5>Documents</h5>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"col-md-6\\\">\\r\\n\\t\\t<!--<h5>Choose files to upload</h5>\\r\\n\\t\\t <input type=\\\"file\\\" #fileInput multiple (change)=\\\"addToQueue()\\\" /> -->\\r\\n\\r\\n\\t\\t<div class=\\\"input-group input-group-sm\\\">\\r\\n\\t\\t\\t<input type=\\\"file\\\" class=\\\"custom-file-input form-control-sm\\\" multiple (change)=\\\"addToQueue($event)\\\">\\r\\n\\t\\t\\t<div class=\\\"input-group-prepend\\\">\\r\\n\\t\\t\\t\\t<span class=\\\"custom-file-label\\\" placeholder=\\\"Choose files to upload\\\"> {{ fileUploadcount }} file(s)\\r\\n\\t\\t\\t\\t\\tselected</span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"col-md-3 text-right\\\">\\r\\n\\t\\t<a type=\\\"button\\\" class=\\\"btn alert-dark btn-sm\\\" (click)=\\\"clear()\\\">Clear</a>&nbsp;&nbsp;\\r\\n\\t\\t<a type=\\\"button\\\" class=\\\"btn alert-dark btn-sm\\\" (click)=\\\"upload()\\\">\\r\\n\\t\\t\\t<i class=\\\"fa fa-cloud-upload\\\" aria-hidden=\\\"true\\\"></i> &nbsp;Upload</a>\\r\\n\\t</div>\\r\\n</div>\\r\\n<br>\\r\\n<div class=\\\"row\\\">\\r\\n\\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t<div class=\\\"table-responsive\\\" style=\\\"overflow-x: auto\\\">\\r\\n\\t\\t\\t<table class=\\\"table table-custom table-sm table-hover table-primary \\\" cellspacing=\\\"0\\\" width=\\\"100%\\\">\\r\\n\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<th class=\\\"text-left text-muted\\\">File</th>\\r\\n\\t\\t\\t\\t\\t\\t<th class=\\\"text-left text-muted\\\" hidden=\\\"true\\\">FilePath</th>\\r\\n\\t\\t\\t\\t\\t\\t<th class=\\\"text-right text-muted\\\">Size</th>\\r\\n\\t\\t\\t\\t\\t\\t<th class=\\\"text-center text-muted\\\" style=\\\"width: 100px;\\\">Progress</th>\\r\\n\\t\\t\\t\\t\\t\\t<th class=\\\"text-center text-muted\\\" style=\\\"width: 100px;\\\">Status</th>\\r\\n\\t\\t\\t\\t\\t\\t<th class=\\\"text-left text-muted\\\" style=\\\"width: 100px;\\\">Actions</th>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t\\t<tr *ngFor=\\\"let item of queue | async\\\">\\r\\n\\t\\t\\t\\t\\t\\t<td hidden=\\\"true\\\"> {{ item?.file?.name }} </td>\\r\\n\\t\\t\\t\\t\\t\\t<td style=\\\"color: midnightblue;\\\"> {{ item?.file?.name }}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t<td class=\\\"text-right\\\" style=\\\"color: midnightblue;\\\"> <small>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ item?.file?.size/1024/1024 | number:'.2' }} MB\\r\\n\\t\\t\\t\\t\\t\\t\\t</small></td>\\r\\n\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\" style=\\\"width: 100px; color: midnightblue;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- <div class=\\\"progress\\\" *ngIf=\\\"item.isNew\\\"> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"progress-bar progress-bar-striped bg-primary\\\" role=\\\"progressbar\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t[style.width.%]=\\\"item.progress\\\" aria-valuenow=\\\"0\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{item.progress}}%</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<small *ngIf=\\\"!item.isNew\\\">100%</small> -->\\r\\n\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\" style=\\\"width: 100px; color: midnightblue;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<small *ngIf=\\\"item.isPending() && item.isNew\\\" class=\\\"tag tag-default\\\"></small>\\r\\n\\t\\t\\t\\t\\t\\t\\t<small *ngIf=\\\"item.isSuccess() && item.isNew\\\" class=\\\"tag tag-success\\\"></small>\\r\\n\\t\\t\\t\\t\\t\\t\\t<small *ngIf=\\\"item.inProgress() && item.isNew\\\" class=\\\"tag tag-warning\\\"></small>\\r\\n\\t\\t\\t\\t\\t\\t\\t<small *ngIf=\\\"item.isError() && item.isNew\\\" class=\\\"tag tag-danger\\\"></small>\\r\\n\\t\\t\\t\\t\\t\\t\\t<small *ngIf=\\\"!item.isNew\\\" class=\\\"tag tag-success\\\"></small>\\r\\n\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\" style=\\\"width: 100px; color: black;\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<button [attr.disabled]=\\\"item.file.FileType !=='PDF' ? 'true' : null\\\" type=\\\"text\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"btn btn-outline-dark btn-sm\\\" style=\\\"border:none;\\\" data-toggle=\\\"modal\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tdata-target=\\\".bd-view-modal-lg\\\" type=\\\"button\\\" (click)=\\\"viewFile()\\\"> <i\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"fa fa-eye\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t&nbsp;\\r\\n\\t\\t\\t\\t\\t\\t\\t<a data-toggle=\\\"tooltip\\\" title=\\\"Download file\\\" type=\\\"button\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"DownLoadFiles(item?.file?.name)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-arrow-circle-o-down\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t&nbsp;\\r\\n\\t\\t\\t\\t\\t\\t\\t<a data-toggle=\\\"tooltip\\\" title=\\\"Cancel upload\\\" type=\\\"button\\\" (click)=\\\"item.cancel()\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t*ngIf=\\\"item.inProgress()\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-times-circle\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- <a data-toggle=\\\"tooltip\\\" title=\\\"View file\\\" (click)=\\\"viewFile()\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-eye\\\"></i> </a>-->\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- <a data-toggle=\\\"tooltip\\\" title=\\\"Upload file\\\" (click)=\\\"item.upload()\\\" *ngIf=\\\"item.isUploadable()\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-upload\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t</a> &nbsp; -->\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- <a data-toggle=\\\"tooltip\\\" title=\\\"Remove from queue\\\" (click)=\\\"item.remove()\\\" *ngIf=\\\"!item.inProgress()\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-trash\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t</a> -->\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<td colspan=\\\"6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- <app-pdfviewcomponent></app-pdfviewcomponent></td> -->\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t</table>\\r\\n\\t\\t\\t<!-- <div>\\r\\n\\t\\t\\t<a type=\\\"button\\\" class=\\\"btn alert-dark btn-sm\\\" (click)=\\\"clear()\\\">Clear</a>&nbsp;&nbsp;\\r\\n\\t\\t\\t<a type=\\\"button\\\" class=\\\"btn alert-dark btn-sm\\\" (click)=\\\"upload()\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fa fa-cloud-upload\\\" aria-hidden=\\\"true\\\"></i> &nbsp;Upload</a>\\r\\n\\t\\t</div> -->\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n<div class=\\\"modal fade bd-view-modal-lg\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" id=\\\"myLargeModalLabel\\\"\\r\\n\\taria-labelledby=\\\"myLargeModalLabel\\\" aria-hidden=\\\"true\\\" data-keyboard=\\\"false\\\" data-backdrop=\\\"static\\\"\\r\\n\\t[ngStyle]=\\\"{'display':display}\\\" style=\\\"height: 80%;\\\">\\r\\n\\r\\n\\t<div class=\\\"modal-dialog modal-xl\\\">\\r\\n\\t\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t\\t<div class=\\\"modal-header\\\" style=\\\"height: 40px; color: yellowgreen;\\\">\\r\\n\\t\\t\\t\\t<h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">File</h5>\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"\\r\\n\\t\\t\\t\\t\\t(click)=\\\"closeModalDialog()\\\">\\r\\n\\t\\t\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t\\t\\t<app-pdfviewcomponent></app-pdfviewcomponent>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","export default \"<div class=\\\"row\\\"> \\r\\n    <div class=\\\"col-md-8\\\">      \\r\\n          <div class=\\\"input-group input-group-sm mb-3\\\">             \\r\\n              <input type=\\\"file\\\" class=\\\"custom-file-input form-control-sm\\\" multiple (change)=\\\"onSelectedFile($event)\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"custom-file-label\\\"> {{ myFiles.length }} file(s) selected</span>\\r\\n                   \\r\\n                    </div>\\r\\n            </div>\\r\\n      </div>  \\r\\n      <div class=\\\"col-md-4\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"onSubmit()\\\">\\r\\n          <i class=\\\"fa fa-cloud-upload\\\" aria-hidden=\\\"true\\\"></i> &nbsp; Upload </button>\\r\\n        </div> \\r\\n        \\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n    <div *ngIf=\\\"fileUpload.status==='progress'\\\">\\r\\n        <div class=\\\"progress\\\" style=\\\"height: 20px;margin-bottom:20px;\\\">\\r\\n          <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [style.width.%]=\\\"fileUpload.message\\\" aria-valuenow=\\\"25\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\">{{fileUpload.message}}%</div>\\r\\n        </div>\\r\\n    </div> \\r\\n  </div> \\r\\n  <div class=\\\"col-md-6\\\">\\r\\n    <!-- <div *ngIf=\\\"fileUpload.status==='error'\\\">\\r\\n            <div [innerHTML]=\\\"fileUpload.message\\\"></div>\\r\\n        </div> -->\\r\\n           \\r\\n    <div *ngIf=\\\"fileUpload.status==='success'\\\">\\r\\n     <p>{{ fileUploadcount }} files uploaded. </p>\\r\\n    </div>\\r\\n  </div> \\r\\n    <!-- <p>{{ fileUpload.error }}</p> -->\\r\\n</div>\\r\\n\"","export default \"<br>\\r\\n<div class=\\\"row\\\" *ngIf=\\\"showInvoiceList\\\">\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 scrollbar\\\" id=\\\"style\\\">\\r\\n        <h5>&nbsp; Invoice<span class=\\\"badge badge-warning\\\"> New</span></h5>\\r\\n        <br>\\r\\n        <div class=\\\"form-group input-group input-group-sm\\\" *ngIf=\\\"Data.length != 0\\\">\\r\\n            <div class=\\\"img-group-prepend\\\">\\r\\n                <img src=\\\"assets/img/brand/search16px.png\\\" /> &nbsp;\\r\\n            </div>\\r\\n            <input [(ngModel)]=\\\"searchText\\\" class=\\\"form-control form-control-sm\\\" style=\\\"border-radius: 1rem;\\\"\\r\\n                type=\\\"text\\\" placeholder=\\\"Search..\\\">\\r\\n        </div>\\r\\n\\r\\n        <table class=\\\"table table-sm table-dark\\\">\\r\\n            <tbody>\\r\\n                <tr *ngFor=\\\"let field of Data; let ind=index;\\\">\\r\\n                    <td>\\r\\n                        <span class=\\\"font-weight-bold\\\" style=\\\"color:olivedrab\\\">\\r\\n                            Invoice ({{field.order.OrderNo}})\\r\\n                        </span>\\r\\n                    </td>\\r\\n                    <td class=\\\"text-right\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-outline-success btn-sm\\\"\\r\\n                            (click)=\\\"getOrderdata(field.order.OrderKey)\\\"> Create</button></td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n        <div *ngIf=\\\"Data.length === 0\\\">\\r\\n            <h6 style=\\\"color: darkorange;\\\">No Orders for Invoice! </h6>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-10 col-md-10 col-lg-10 \\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-8 col-sm-8 col-md-8\\\"> </div>\\r\\n            <div class=\\\"col-4 col-sm-4 col-md-4\\\">\\r\\n                <div class=\\\"container text-right\\\">\\r\\n                    <div class=\\\"form-group input-group input-group-sm\\\">\\r\\n                        <div class=\\\"img-group-prepend\\\">\\r\\n                            <img src=\\\"assets/img/brand/search16px.png\\\" /> &nbsp;\\r\\n                        </div>\\r\\n                        <input [(ngModel)]=\\\"searchText\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                            style=\\\"border-radius: 1rem;\\\" type=\\\"text\\\" placeholder=\\\"Search..\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <table class=\\\"table table-sm table-borderless \\\">\\r\\n            <thead class=\\\"thead-dark shadow\\\">\\r\\n                <tr>\\r\\n                    <th scope=\\\"col\\\" class=\\\"pointer text-muted\\\" hidden=\\\"true\\\">invoiceKey</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"pointer text-muted\\\" (click)=\\\"sort('InvoiceNo')\\\">Invoice &nbsp;<i\\r\\n                            class=\\\"fa fa-sort\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                    </th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"pointer text-muted\\\" (click)=\\\"sort('CustName')\\\">Customer &nbsp;<i\\r\\n                            class=\\\"fa fa-sort\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                    </th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"pointer text-muted\\\" (click)=\\\"sort('InvoiceAmt')\\\">Amount &nbsp;<i\\r\\n                            class=\\\"fa fa-sort\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                    </th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"pointer text-muted\\\" (click)=\\\"sort('DueDate')\\\">Duedate &nbsp;<i\\r\\n                            class=\\\"fa fa-sort\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                    </th>\\r\\n                    <!-- <th scope=\\\"col\\\" class=\\\"pointer text-muted\\\" (click)=\\\"sort('StatusDesc')\\\">Status &nbsp;<i\\r\\n                            class=\\\"fa fa-sort\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                    </th> -->\\r\\n                    <th scope=\\\"col\\\" class=\\\"pointer text-muted\\\">Next Action</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr *ngFor=\\\"let inv of invoiceHeaderList| grdFilter: {InvoiceNo: searchText,CustName: searchText\\r\\n                            ,InvoiceAmt: searchText,DueDate: searchText,StatusDesc: searchText}\\r\\n                        |paginate:{itemsPerPage:5,currentPage:p,totalItems: count}\\r\\n                         ; let ind=index;\\\">\\r\\n                    <td class=\\\"text-left\\\" hidden=\\\"true\\\"> {{ inv.Invoicekey }}</td>\\r\\n                    <td>\\r\\n                        <span class=\\\"font-weight-bold\\\">\\r\\n                            #{{ inv.InvoiceNo }} &nbsp;\\r\\n                            <span><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                <small> <b> {{inv.InvoiceDate  | date}}</b></small>\\r\\n                            </span>\\r\\n                        </span>\\r\\n                    </td>\\r\\n\\r\\n                    <td>\\r\\n                        <span> <b> {{ inv.CustName }}</b> <br>\\r\\n                            <!-- <small style=\\\"color: cornflowerblue;\\\">\\r\\n                            {{ inv.BillToAddressBO.Address1 }},{{ inv.BillToAddressBO.Address2 }}<br>\\r\\n                            {{ inv.BillToAddressBO.City }} {{ inv.BillToAddressBO.State}} {{ inv.BillToAddressBO.Zip}}\\r\\n                          </small> -->\\r\\n                        </span>\\r\\n                    </td>\\r\\n\\r\\n                    <td class=\\\"text-left\\\"> ${{ inv.InvoiceAmt |number: '1.1-2'}}</td>\\r\\n                    <td class=\\\"text-left\\\"> {{ inv.DueDate |date}}</td>\\r\\n                    <!-- <td class=\\\"text-left\\\"> </td> -->\\r\\n                    <td>\\r\\n                        <strong> <i class=\\\"cil-chevron-circle-right-alt\\\" style=\\\"color: yellowgreen;\\\"></i></strong>\\r\\n                        &nbsp;\\r\\n                        <small *ngIf=\\\"inv.StatusDesc == 'Schedule onhold'\\\" class=\\\"font-weight-normal\\\"\\r\\n                            style=\\\"color: orange;\\\">\\r\\n                           Proceed Invoice</small>\\r\\n                        <small *ngIf=\\\"inv.StatusDesc == 'Schedule inprogress'\\\" class=\\\"font-weight-normal\\\"\\r\\n                            style=\\\"color: green;\\\">\\r\\n                             Proceed Invoice </small> Proceed Invoice\\r\\n                        &nbsp;\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\" style=\\\"border-radius: 1rem;\\\"\\r\\n                            (click)=\\\"load_invoiceHeaderandDetailData(inv)\\\">\\r\\n                            <i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </button>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr *ngIf=\\\"invoiceHeaderList.length===0\\\">\\r\\n                    <td colspan=\\\"3\\\">\\r\\n                        <h4 style=\\\"color: darkorange;\\\">No records found! </h4>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n        <div class=\\\"container text-right\\\">\\r\\n            <pagination-controls (pageChange)=\\\"p=$event\\\" autoHide=\\\"true\\\" responsive=\\\"true\\\"> </pagination-controls>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\" *ngIf=\\\"showInvoice\\\">\\r\\n    <div class=\\\"col-sm-12 col-md-12 col-lg-12 \\\">\\r\\n        <div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6 col-md-6 col-lg-6 border-right\\\">\\r\\n                    <h4>Invoice #<b>{{InvoiceNo}}</b></h4>\\r\\n                    <br>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                            <div class=\\\"input-group input-group-sm\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <span class=\\\"input-group-text\\\"> <b>Date </b></span>\\r\\n                                </div>\\r\\n                                <input type=\\\"text\\\" name=\\\"invoiceDate\\\" [(ngModel)]=\\\"invoiceDate\\\" style=\\\"width:100px\\\"\\r\\n                                    class=\\\"form-control form-control-sm bg-secondary\\\" [owlDateTimeTrigger]=\\\"dt1\\\"\\r\\n                                    [owlDateTime]=\\\"dt1\\\" />\\r\\n                                <owl-date-time [pickerType]=\\\"'calendar'\\\" #dt1></owl-date-time>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                            <div class=\\\"input-group input-group-sm\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <span class=\\\"input-group-text\\\"> <b>Due</b></span>\\r\\n                                </div>\\r\\n                                <input type=\\\"text\\\" name=\\\"DueDate\\\" [(ngModel)]=\\\"dueDate\\\" style=\\\"width:100px\\\"\\r\\n                                    class=\\\"form-control form-control-sm bg-secondary\\\" [owlDateTimeTrigger]=\\\"dt2\\\"\\r\\n                                    [owlDateTime]=\\\"dt2\\\" />\\r\\n                                <owl-date-time [pickerType]=\\\"'calendar'\\\" #dt2></owl-date-time>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <br>\\r\\n                    <!-- <img src=\\\"assets/img/brand/circle-black16px.png\\\" /> <span> <span class=\\\"text-muted\\\"> Bill from\\r\\n                        </span> <b>\\r\\n                            {{this.invoiceModel.BillFrom[\\\"Name\\\"]}}</b></span>\\r\\n                    <br>\\r\\n                    <span> {{invoiceModel.BillFrom[\\\"Address1\\\"]}} {{invoiceModel.BillFrom[\\\"Address2\\\"]}}\\r\\n                        {{invoiceModel.BillFrom[\\\"City\\\"]}} {{invoiceModel.BillFrom[\\\"State\\\"]}}\\r\\n                        {{invoiceModel.BillFrom[\\\"Zip\\\"]}}\\r\\n                    </span>\\r\\n                    <br> -->\\r\\n                    <img src=\\\"assets/img/brand/circle-black16px.png\\\" /> <span><span style=\\\"color:  #659CEF;\\\"> Bill\\r\\n                            to </span>\\r\\n                        <b>{{invoiceModel.order.BillToAddr}}</b>\\r\\n                    </span>\\r\\n                    <br>\\r\\n                    <span>\\r\\n                        <!-- {{invoiceModel.BillToAddressBO[\\\"Address1\\\"]}} \\r\\n                         {{invoiceModel.BillToAddressBO.Address2}}\\r\\n                        {{invoiceModel.BillToAddressBO.City}} {{invoiceModel.BillToAddressBO.State}}\\r\\n                        {{invoiceModel.BillToAddressBO.Zip}} -->\\r\\n                    </span>\\r\\n                    <br>\\r\\n                    <br>\\r\\n\\r\\n                    <div>\\r\\n                        <span><b> <u> Route</u> </b></span>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n                                <span style=\\\"color:  #659CEF;\\\">Pickup </span><br>\\r\\n                                <span> {{invoiceModel.order.SourceAddr}}</span>\\r\\n                                <br>\\r\\n                                <!-- <span> {{invoiceModel.Pickup[\\\"Address1\\\"]}}, {{invoiceModel.Pickup[\\\"Address2\\\"]}}\\r\\n                                </span>\\r\\n                                <br>\\r\\n                                <span>\\r\\n                                    {{invoiceModel.Pickup[\\\"City\\\"]}} - {{invoiceModel.Pickup[\\\"Zip\\\"]}}\\r\\n                                </span>\\r\\n                                <br>\\r\\n                                <span> {{invoiceModel.Pickup[\\\"State\\\"]}}\\r\\n                                </span> -->\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n                                <span style=\\\"color:  #659CEF;\\\">Delivery </span>\\r\\n                                <br>\\r\\n                                <span>{{invoiceModel.order.DestinationAddr}}</span>\\r\\n                                <br>\\r\\n                                <!-- <span> {{invoiceModel.Delivery[\\\"Address1\\\"]}}, {{invoiceModel.Delivery[\\\"Address2\\\"]}}\\r\\n                                </span>\\r\\n                                <br>\\r\\n                                <span>\\r\\n                                    {{invoiceModel.Delivery[\\\"City\\\"]}} - {{invoiceModel.Delivery[\\\"Zip\\\"]}}\\r\\n                                </span>\\r\\n                                <br>\\r\\n                                <span> {{invoiceModel.Delivery[\\\"State\\\"]}}\\r\\n                                </span> -->\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <br>\\r\\n                    <span> <b><u>Shipment</u> </b></span>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                            <span class=\\\"text-muted\\\">Carrier </span>\\r\\n                            <br>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                            <span class=\\\"text-muted\\\">Vessel Name </span>\\r\\n                            <br>\\r\\n                            {{invoiceModel.order.VesselName}}\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\"> </div>\\r\\n                    </div>\\r\\n\\r\\n                    <br>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                            <table class=\\\"table table-sm table-striped table-borderless\\\">\\r\\n                                <thead class=\\\"thead-light\\\">\\r\\n                                    <tr>\\r\\n                                        <th scope=\\\"col\\\" class=\\\"text-muted\\\">Container</th>\\r\\n                                        <th scope=\\\"col\\\" class=\\\"text-muted\\\">Size</th>\\r\\n                                        <th scope=\\\"col\\\" class=\\\"text-muted\\\">Chassis</th>\\r\\n                                        <th scope=\\\"col\\\" class=\\\"text-muted\\\">SealNo</th>\\r\\n                                        <th scope=\\\"col\\\" class=\\\"text-muted\\\">Weight</th>\\r\\n                                        <th scope=\\\"col\\\" class=\\\"text-muted\\\">Delivery Date</th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <tr *ngFor=\\\"let field of invoiceModel.containers\\\">\\r\\n                                        <td> <small>{{field.ContainerNo}} </small></td>\\r\\n                                        <td> <small>{{field.ContainerSizeDesc}} </small> </td>\\r\\n                                        <td> <small>{{field.Chassis}} </small></td>\\r\\n                                        <td> <small>{{field.SealNo}} </small></td>\\r\\n                                        <td> <small>{{field.Weight}} </small></td>\\r\\n                                        <td> <small></small></td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                            <div class=\\\"container text-left\\\">\\r\\n                                <!-- <button class=\\\"btn  btn-outline-secondary btn-sm small\\\" type=\\\"button\\\"><i\\r\\n                                        class=\\\"fa fa-bars\\\" aria-hidden=\\\"true\\\"></i> Actions </button>\\r\\n                                &nbsp; -->\\r\\n                                <button class=\\\"btn btn-outline-secondary btn-sm small\\\" type=\\\"button\\\"> <i\\r\\n                                        class=\\\"fa fa-envelope\\\" aria-hidden=\\\"true\\\"></i> Send</button>\\r\\n                                &nbsp;\\r\\n                                <button class=\\\"btn btn-outline-primary btn-sm small\\\" type=\\\"button\\\"\\r\\n                                    (click)=\\\"createPDF()\\\"><i class=\\\"fa fa-file-pdf-o\\\" aria-hidden=\\\"true\\\"></i> Export to\\r\\n                                    PDF</button>\\r\\n                                &nbsp;\\r\\n                                <button class=\\\"btn btn-outline-primary btn-sm small\\\" type=\\\"button\\\"\\r\\n                                    (click)=\\\"downloadPDF()\\\"> <i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Download\\r\\n                                    PDF</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                            <div class=\\\"container text-right\\\">\\r\\n                                <button class=\\\"btn btn-primary btn-sm small\\\" type=\\\"button\\\" (click)=\\\"submit()\\\">\\r\\n                                    <i class=\\\"fa fa-floppy-o\\\" aria-hidden=\\\"true\\\"></i> {{lblInvoice}}</button>\\r\\n                                &nbsp;&nbsp;&nbsp;\\r\\n                                <button class=\\\"btn btn-outline-danger btn-sm small\\\" type=\\\"button\\\"\\r\\n                                    (click)=\\\"CancelCreateInvoice()\\\"><i class=\\\"fa fa-ban\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                    Cancel</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <br> <br>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <span> <b> &nbsp;&nbsp;&nbsp; <u> Invoice Details </u></b></span>\\r\\n                        <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                            <table class=\\\"table table-sm table-hover table-striped\\\">\\r\\n                                <thead>\\r\\n                                    <tr class=\\\"thead-light\\\">\\r\\n                                        <th scope=\\\"col\\\" hidden=\\\"true\\\">InvoiceLineKey</th>\\r\\n                                        <th scope=\\\"col\\\" hidden=\\\"true\\\">InvoiceKey</th>\\r\\n                                        <th scope=\\\"col\\\" hidden=\\\"true\\\">Itemkey</th>\\r\\n                                        <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\">Container</th>\\r\\n                                        <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\">Item</th>\\r\\n                                        <th scope=\\\"col\\\" class=\\\"text-left text-muted\\\">Quantity</th>\\r\\n                                        <th scope=\\\"col\\\" class=\\\"text-center text-muted\\\">Rate</th>\\r\\n                                        <th scope=\\\"col\\\" class=\\\"text-center text-muted\\\">Charge(s)</th>\\r\\n                                        <th scope=\\\"col\\\" class=\\\"text-right text-muted\\\">Action</th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <tr *ngFor=\\\"let invDet of invoiceDetail; let i = index\\\">\\r\\n\\r\\n                                        <td height=\\\"30\\\" hidden=\\\"true\\\"> <span> {{invDet.InvoiceLineKey}} </span></td>\\r\\n                                        <td height=\\\"30\\\" hidden=\\\"true\\\"> <span> {{invDet.InvoiceKey}} </span></td>\\r\\n                                        <td height=\\\"30\\\" hidden=\\\"true\\\"> <span>{{invDet.Itemkey}} </span></td>\\r\\n                                        <td height=\\\"30\\\" class=\\\"text-left \\\"> <span><small style=\\\"color: #659CEF;\\\">\\r\\n                                                    {{invDet.Container}} </small> </span></td>\\r\\n                                        <td height=\\\"30\\\" class=\\\"text-left \\\"> <span>{{invDet.Description}} </span></td>\\r\\n                                        <!-- <td height=\\\"30\\\" class=\\\"text-center\\\" *ngIf=\\\"!item_editing ||i==rowIndex\\\">\\r\\n                                            <span *ngIf=\\\"Data.Quantity > 1 && Data.Description != 'Base Rate'\\\">\\r\\n                                                {{Data.Quantity}} container(s)\\r\\n                                                <br> <small style=\\\"color: #659CEF;\\\"> {{Data.Container}} </small>\\r\\n                                            </span>\\r\\n                                            <span *ngIf=\\\"Data.Quantity == 1 && Data.Description != 'Base Rate'\\\">\\r\\n                                                {{Data.Quantity}} container\\r\\n                                                <br> <small style=\\\"color: #659CEF;\\\"> {{Data.Container}} </small>\\r\\n                                            </span>\\r\\n                                            {{invDet.Quantity}}\\r\\n                                        </td> -->\\r\\n                                        <td height=\\\"30\\\" class=\\\"text-center\\\">\\r\\n                                            <span *ngIf=\\\"!invDet.isEditable\\\">{{invDet.Quantity}}</span>\\r\\n                                           <input type=\\\"text\\\" class=\\\"form-control form-control-sm bg-secondary\\\" style=\\\"width: 50%;\\\" \\r\\n                                           [(ngModel)]=\\\"invDet.Quantity\\\" \\r\\n                                           *ngIf=\\\"invDet.isEditable\\\"/>\\r\\n                                        </td>\\r\\n                                        <td height=\\\"30\\\" class=\\\"text-center\\\"> <span>\\r\\n                                                ${{invDet.UnitPrice|number: '1.1-2'}}</span>\\r\\n                                        </td>\\r\\n                                        <!-- <td height=\\\"30\\\" class=\\\"text-right\\\" *ngIf=\\\"!item_editing || i==rowIndex\\\">\\r\\n                                            <span>${{invDet.Price|number: '1.1-2'}}\\r\\n                                            </span></td> -->\\r\\n                                        <td height=\\\"30\\\" class=\\\"text-center\\\">\\r\\n                                            <span *ngIf=\\\"!invDet.isEditable\\\">${{invDet.Price|number: '1.1-2'}}</span>\\r\\n                                            <input type=\\\"number\\\"class=\\\"form-control form-control-sm bg-secondary\\\" style=\\\"width: 100%;\\\"  [(ngModel)]=\\\"invDet.Price\\\"  *ngIf=\\\"invDet.isEditable\\\"/>\\r\\n                                        </td>\\r\\n                                        <td height=\\\"30\\\" class=\\\"text-right\\\">\\r\\n                                            <div *ngIf=\\\"!invDet.isEditable\\\">\\r\\n                                                <!-- <a tooltip=\\\" file\\\" (click)=\\\"editItem(invDet,i)\\\">\\r\\n                                                    <i class=\\\"fa fa-pencil\\\" style=\\\"color: darkorange\\\"></i>\\r\\n                                                </a> -->\\r\\n                                                <a (click)=\\\"invDet.isEditable=!invDet.isEditable\\\">\\r\\n                                                    <i class=\\\"fa fa-pencil\\\" style=\\\"color: darkorange\\\"></i>\\r\\n                                                </a>\\r\\n                                              \\r\\n                                            </div>\\r\\n\\r\\n                                            <div *ngIf=\\\"invDet.isEditable\\\">\\r\\n                                                <a tooltip=\\\" file\\\" (click)=\\\"invDet.isEditable=!invDet.isEditable ; updateRow(invDet,i)\\\">\\r\\n                                                    <i class=\\\"fa fa-floppy-o\\\" aria-hidden=\\\"true\\\"\\r\\n                                                        style=\\\"color:royalblue;\\\"></i>\\r\\n                                                </a>\\r\\n                                                &nbsp;&nbsp;\\r\\n                                                <a tooltip=\\\" file\\\" (click)=\\\"invDet.isEditable=!invDet.isEditable\\\">\\r\\n                                                    <i class=\\\"fa fa-ban\\\" aria-hidden=\\\"true\\\" style=\\\"color:lightsalmon;\\\"></i>\\r\\n                                                </a>\\r\\n                                            </div>\\r\\n\\r\\n                                        </td>\\r\\n\\r\\n\\r\\n                                        <!-- <div *ngIf=\\\"editing\\\">\\r\\n                                            <input [required]=\\\"required\\\" (blur)=\\\"onBlur($event)\\\" [name]=\\\"value\\\"\\r\\n                                                [(ngModel)]=\\\"value\\\" [placeholder]=\\\"label\\\" />\\r\\n                                        </div> -->\\r\\n                                    </tr>\\r\\n\\r\\n                                    <tr>\\r\\n                                        <td hidden=\\\"true\\\"> </td>\\r\\n                                        <td hidden=\\\"true\\\"> </td>\\r\\n                                        <td hidden=\\\"true\\\"> </td>\\r\\n                                        <td>\\r\\n                                            <span class=\\\"nav-link text-success\\\" (click)=\\\"showChargeDiv()\\\">Add new\\r\\n                                                charge</span>\\r\\n                                            <!-- <span class=\\\"nav-link text-success\\\" data-toggle=\\\"collapse\\\"\\r\\n                                                data-target=\\\"#AddNewCharge\\\" aria-expanded=\\\"false\\\"\\r\\n                                                aria-controls=\\\"AddNewCharge\\\" (click)=\\\"showChargeDiv()\\\"> Add new charge\\r\\n                                            </span> -->\\r\\n                                            <!-- <span class=\\\"nav-link text-success\\\" data-toggle=\\\"collapse\\\"\\r\\n                                                data-target=\\\"#AddNewCharge\\\" aria-expanded=\\\"false\\\"\\r\\n                                                aria-controls=\\\"AddNewCharge\\\" (click)=\\\"showChargeDiv()\\\"> Add new charge\\r\\n                                            </span> -->\\r\\n                                        </td>\\r\\n                                        <td> </td>\\r\\n\\r\\n                                        <td colspan=\\\"3\\\">\\r\\n                                            <div class=\\\"container text-right\\\">\\r\\n                                                <div class=\\\"input-group input-group-sm\\\">\\r\\n                                                    <div class=\\\"input-group-prepend\\\">\\r\\n                                                        <span class=\\\"input-group-text\\\"> <b>Total $ </b></span>\\r\\n                                                    </div>\\r\\n                                                    <input type=\\\"text\\\" disabled\\r\\n                                                        style=\\\"font-size: 100%;color:yellow;font-weight: bolder;\\\"\\r\\n                                                        class=\\\"form-control bg-secondary text-right\\\" name=\\\"InvoiceAmt\\\"\\r\\n                                                        [(ngModel)]=\\\"InvoiceAmt\\\" />\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div id=\\\"AddNewCharge\\\" *ngIf=\\\"showAddUpdateDiv\\\">\\r\\n                        \\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                            <tbody>\\r\\n                                <tr>\\r\\n                                    <td>                                       \\r\\n                                            <div class=\\\"input-group input-group-sm\\\">\\r\\n                                                <div class=\\\"input-group-prepend\\\">\\r\\n                                                    <span class=\\\"input-group-text\\\"> <b>Item </b></span>\\r\\n                                                </div>\\r\\n                                                <select id=\\\"drprate\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]='drpCharge'\\r\\n                                                    (change)=\\\"drpAddnewCharge_ChangedEvent($event.target.value)\\\">\\r\\n                                                    <option [value]=\\\"0\\\"> No item selected\\r\\n                                                    </option>\\r\\n                                                    <option [value]=\\\"item.itemkey\\\" *ngFor=\\\"let item of Itemlist\\\">\\r\\n                                                        {{item.description}}\\r\\n                                                    </option>\\r\\n                                                </select>\\r\\n                                            </div>                                        \\r\\n                                    </td> &nbsp;  \\r\\n                                    <td style=\\\"width: 100px;\\\">\\r\\n                                        <div class=\\\"input-group input-group-sm\\\">\\r\\n                                                <div class=\\\"input-group-prepend\\\">\\r\\n                                                    <span class=\\\"input-group-text\\\"> <b>Qty </b></span>\\r\\n                                                </div>\\r\\n                                                <input type=\\\"text\\\" name=\\\"ContainerQuantity\\\" [(ngModel)]=\\\"ContainerQuantity\\\"\\r\\n                                                    class=\\\"form-control form-control-sm bg-secondary\\\" />\\r\\n                                            </div>\\r\\n                                       \\r\\n                                    </td> &nbsp;  \\r\\n                                    <td style=\\\"width: 150px;\\\">                                        \\r\\n                                        <div class=\\\"input-group input-group-sm\\\">\\r\\n                                                <div class=\\\"input-group-prepend\\\">\\r\\n                                                    <span class=\\\"input-group-text\\\"> <b>Rate($)</b></span>\\r\\n                                                </div>\\r\\n                                                <input type=\\\"number\\\" name=\\\"ItemRate\\\" [(ngModel)]=\\\"ItemRate\\\"\\r\\n                                                    class=\\\"form-control form-control-sm bg-secondary\\\" />\\r\\n                                            </div>                                        \\r\\n                                    </td>&nbsp; \\r\\n                                    <td> \\r\\n                                        <div >\\r\\n                                            <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\"\\r\\n                                                (click)=\\\"addupdateItem()\\\"><i class=\\\"fa fa-plus-circle\\\" aria-hidden=\\\"true\\\"></i> &nbsp;{{lblrowaddupdate}}</button>\\r\\n                                            &nbsp; \\r\\n                                            <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\"\\r\\n                                                (click)=\\\"ClearRow()\\\"><i class=\\\"fa fa-ban\\\" aria-hidden=\\\"true\\\"></i>&nbsp; Cancel</button>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    \\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                            <!-- <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                                <div class=\\\"input-group input-group-sm\\\">\\r\\n                                    <div class=\\\"input-group-prepend\\\">\\r\\n                                        <span class=\\\"input-group-text\\\"> <b>Item </b></span>\\r\\n                                    </div>\\r\\n                                    <select id=\\\"drprate\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]='drpCharge'\\r\\n                                        (change)=\\\"drpAddnewCharge_ChangedEvent($event.target.value)\\\">\\r\\n                                        <option [value]=\\\"0\\\"> No item selected\\r\\n                                        </option>\\r\\n                                        <option [value]=\\\"item.itemkey\\\" *ngFor=\\\"let item of Itemlist\\\">\\r\\n                                            {{item.description}}\\r\\n                                        </option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\r\\n                                <div class=\\\"input-group input-group-sm\\\">\\r\\n                                    <div class=\\\"input-group-prepend\\\">\\r\\n                                        <span class=\\\"input-group-text\\\"> <b>Qty </b></span>\\r\\n                                    </div>\\r\\n                                    <input type=\\\"text\\\" name=\\\"ContainerQuantity\\\" [(ngModel)]=\\\"ContainerQuantity\\\"\\r\\n                                        class=\\\"form-control form-control-sm bg-secondary\\\" />\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n                                <div class=\\\"input-group input-group-sm\\\">\\r\\n                                    <div class=\\\"input-group-prepend\\\">\\r\\n                                        <span class=\\\"input-group-text\\\"> <b>Rate($)</b></span>\\r\\n                                    </div>\\r\\n                                    <input type=\\\"number\\\" name=\\\"ItemRate\\\" [(ngModel)]=\\\"ItemRate\\\"\\r\\n                                        class=\\\"form-control form-control-sm bg-secondary\\\" />\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n                                <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\"\\r\\n                                    (click)=\\\"addupdateItem()\\\"><i class=\\\"fa fa-plus-circle\\\" aria-hidden=\\\"true\\\"></i> &nbsp;{{lblrowaddupdate}}</button>\\r\\n                                &nbsp; &nbsp;\\r\\n                                <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\"\\r\\n                                    (click)=\\\"ClearRow()\\\"><i class=\\\"fa fa-ban\\\" aria-hidden=\\\"true\\\"></i>&nbsp; Cancel</button>\\r\\n                            </div> -->\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<span class=\\\"border border-primary\\\">\\r\\n    <div class=\\\"jumbotron vertical-center\\\">\\r\\n    <div class=\\\"app-body\\\">\\r\\n        <main class=\\\"main d-flex align-items-center\\\" >  \\r\\n          <div class=\\\"container\\\">  \\r\\n            <div class=\\\"row\\\">  \\r\\n              <div class=\\\"col-md-8 mx-auto\\\" >  \\r\\n                <div class=\\\"card-group\\\">  \\r\\n                  <div class=\\\"card p-4\\\">  \\r\\n                    <div class=\\\"card-body\\\">  \\r\\n                      <form (ngSubmit) =\\\"onSubmit()\\\" novalidate>  \\r\\n                        <h1>Login</h1>  \\r\\n                        <p class=\\\"text-muted\\\">Sign In to your account</p>  \\r\\n                        \\r\\n                        <div class=\\\"input-group mb-3\\\">  \\r\\n                          <div class=\\\"input-group-prepend\\\">  \\r\\n                            <span class=\\\"input-group-text\\\"><i class=\\\"icon-user\\\"></i></span>  \\r\\n                          </div>  \\r\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"UserName\\\" autocomplete=\\\"UserName \\\" required \\r\\n                                 [(ngModel)]=\\\"model.username\\\" name=\\\"username\\\" >  \\r\\n                                 <div class=\\\"invalid-feedback\\\">\\r\\n                                  Please provide a valid zip.\\r\\n                                </div>                            \\r\\n                            </div>  \\r\\n    \\r\\n                        <div class=\\\"input-group mb-4\\\">  \\r\\n                          <div class=\\\"input-group-prepend\\\">  \\r\\n                            <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>  \\r\\n                          </div>  \\r\\n                          <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" autocomplete=\\\"current-password\\\" required \\r\\n                          [(ngModel)]=\\\"model.password\\\" name=\\\"password\\\" >\\r\\n                          </div>\\r\\n    \\r\\n                        <!-- <div class=\\\"input-group mb-3\\\">  \\r\\n                            <div class=\\\"input-group-prepend\\\">  \\r\\n                              <span class=\\\"input-group-text\\\"><i class=\\\"icon-globe\\\"></i></span>  \\r\\n                            </div>  \\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Company\\\" autocomplete=\\\"current-company\\\" required \\r\\n                            [(ngModel)]=\\\"model.company\\\" name=\\\"company\\\">  \\r\\n                          </div> -->\\r\\n\\r\\n                          <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger\\\">{{error}}</div>\\r\\n                          <!-- <div [hidden]=\\\"isContainerAttributeVisible\\\">\\r\\n                              <progressbar [value]=\\\"100\\\" type=\\\"danger\\\" [striped]=\\\"true\\\" [animate]=\\\"true\\\" ></progressbar>\\r\\n                          </div> -->\\r\\n                         <br>\\r\\n                        <div class=\\\"row\\\">  \\r\\n                          <div class=\\\"col-6\\\"> \\r\\n                            <button  class=\\\"btn btn-outline-primary\\\" style=\\\"border-radius: 1rem;\\\" type=\\\"submit\\\">\\r\\n                               <i class=\\\"fa fa-sign-in\\\"></i>\\r\\n                              \\r\\n                              Login</button>  \\r\\n                          </div>\\r\\n      \\r\\n                          <div class=\\\"col-6 text-right\\\">  \\r\\n                            <button  class=\\\"btn btn-link px-0\\\">Forgot password?</button>  \\r\\n                          </div>      \\r\\n                        </div>  \\r\\n                        \\r\\n                      </form>\\r\\n      \\r\\n                    </div>\\r\\n      \\r\\n                  </div>\\r\\n      \\r\\n                  <div class=\\\"card text-white bg-primary py-5 d-md-down-none\\\" style=\\\"width:20%\\\">  \\r\\n                    <div class=\\\"card-body text-center\\\">  \\r\\n                      <div> \\r\\n                      <img src=\\\"assets/img/brand/Group-icon.png\\\" class=\\\"img-fluid\\\" alt=\\\"Responsive image\\\">\\r\\n                        <!-- <h2>Sign up</h2>  \\r\\n                        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>  \\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary active mt-3\\\">Register Now!</button> -->  \\r\\n                      </div>  \\r\\n                    </div>  \\r\\n                  </div>  \\r\\n                </div>  \\r\\n              </div>  \\r\\n            </div>  \\r\\n          </div>  \\r\\n        </main>      \\r\\n      </div>\\r\\n    </div>\\r\\n    </span>\"","export default \"<span>\\r\\n        <span class=\\\"block m-t-xs\\\">\\r\\n\\r\\n            <strong class=\\\"font-bold\\\" style=\\\"color:cornflowerblue\\\"> &nbsp;&nbsp; Hi\\r\\n                {{currentUser.firstname}}\\r\\n                !</strong>\\r\\n        </span>\\r\\n        <!-- <div>                     \\r\\n              <span class=\\\"text-muted text-xs block\\\">Logged : {{currentUser.loggedinTime}}</span>\\r\\n          </div> -->\\r\\n    </span>\\r\\n\\r\\n<nav class=\\\"navbar-default navbar-static-side\\\" role=\\\"navigation\\\" *ngIf =\\\"Orderlist.length > 0 && show\\\">\\r\\n    <div class=\\\"sidebar-collapse\\\">\\r\\n        <ul class=\\\"nav metismenu\\\" id=\\\"side-menu\\\">\\r\\n            <li class=\\\"nav-header\\\">\\r\\n              \\r\\n            </li>\\r\\n\\r\\n            <!-- <li>\\r\\n                <a [routerLink]=\\\"['/dashboard']\\\"><i class=\\\"fa fa-dashboard\\\"></i> Dashboard</a>\\r\\n            </li> -->\\r\\n            <br>\\r\\n            <!-- <li>\\r\\n                &nbsp;&nbsp; <a [routerLink]=\\\"['/orderList']\\\">                            \\r\\n                    <img src=\\\"assets/img/brand/chromium-app-list-icon32px.png\\\" />\\r\\n                     &nbsp; Order\\r\\n                    List</a>\\r\\n            </li> -->\\r\\n            <li>\\r\\n                &nbsp;&nbsp;&nbsp; <span style=\\\"color:lightskyblue\\\"> Recent\\r\\n                    orders</span>\\r\\n\\r\\n            </li>\\r\\n            <li *ngFor=\\\"let order of Orderlist| slice:0:25; let ind=index;\\\">\\r\\n                <!-- <span>{{ order.OrderNo}} </span>   -->\\r\\n                <!-- <a [routerLink]=\\\"['./tab']\\\"><i class=\\\"fa fa-dashboard\\\"></i> <span class=\\\"nav-label\\\">Dashboards</span></a> -->\\r\\n\\r\\n                <!-- <i  style=\\\"width:20px;\\\"class=\\\"fa fa-circle-thin\\\" aria-hidden=\\\"true\\\"></i> -->\\r\\n                <!-- <i class=\\\"fa-li fa fa-check-square\\\"></i>\\r\\n                         <a   [routerLink]=\\\"['/tab', order.OrderKey]\\\" >&nbsp; {{ order.OrderNo }}</a>  -->\\r\\n\\r\\n                <ul class=\\\"fa-ul\\\">\\r\\n                    <li>\\r\\n                        <a [routerLink]=\\\"\\\" class=\\\"text-secondary small\\\" (click)=\\\"open(order.OrderKey)\\\">\\r\\n                            {{ order.OrderNo }} - {{order.ordertypedescription}}</a>\\r\\n                        <!-- <img src=\\\"assets/img/brand/bullet-black-icon.png\\\" /> -->\\r\\n                    </li>\\r\\n                </ul>\\r\\n\\r\\n            </li>\\r\\n        </ul>\\r\\n\\r\\n    </div>\\r\\n</nav>\\r\\n\\r\\n<nav class=\\\"navbar-default navbar-static-side\\\" role=\\\"navigation\\\" *ngIf =\\\"schedulerlist.length > 0\\\">\\r\\n        <div class=\\\"sidebar-collapse\\\">\\r\\n            <ul class=\\\"nav metismenu\\\" id=\\\"side-menu\\\">\\r\\n                <li class=\\\"nav-header\\\">\\r\\n                  \\r\\n                </li>\\r\\n    \\r\\n                <!-- <li>\\r\\n                    <a [routerLink]=\\\"['/dashboard']\\\"><i class=\\\"fa fa-dashboard\\\"></i> Dashboard</a>\\r\\n                </li> -->\\r\\n                <br>\\r\\n                <!-- <li>\\r\\n                    &nbsp;&nbsp; <a [routerLink]=\\\"['/orderList']\\\">                            \\r\\n                        <img src=\\\"assets/img/brand/chromium-app-list-icon32px.png\\\" />\\r\\n                         &nbsp; Order\\r\\n                        List</a>\\r\\n                </li> -->\\r\\n                <li>\\r\\n                    &nbsp;&nbsp;&nbsp; <span style=\\\"color:lightskyblue\\\"> Recent\\r\\n                        orders</span>\\r\\n    \\r\\n                </li>\\r\\n                <li *ngFor=\\\"let order of Orderlist| slice:0:25; let ind=index;\\\">\\r\\n                    <!-- <span>{{ order.OrderNo}} </span>   -->\\r\\n                    <!-- <a [routerLink]=\\\"['./tab']\\\"><i class=\\\"fa fa-dashboard\\\"></i> <span class=\\\"nav-label\\\">Dashboards</span></a> -->\\r\\n    \\r\\n                    <!-- <i  style=\\\"width:20px;\\\"class=\\\"fa fa-circle-thin\\\" aria-hidden=\\\"true\\\"></i> -->\\r\\n                    <!-- <i class=\\\"fa-li fa fa-check-square\\\"></i>\\r\\n                             <a   [routerLink]=\\\"['/tab', order.OrderKey]\\\" >&nbsp; {{ order.OrderNo }}</a>  -->\\r\\n    \\r\\n                    <ul class=\\\"fa-ul\\\">\\r\\n                        <li>\\r\\n                            <a [routerLink]=\\\"\\\" class=\\\"text-secondary small\\\" (click)=\\\"open(order.OrderKey)\\\">\\r\\n                                {{ order.OrderNo }} - {{order.ordertypedescription}}</a>\\r\\n                            <!-- <img src=\\\"assets/img/brand/bullet-black-icon.png\\\" /> -->\\r\\n                        </li>\\r\\n                    </ul>\\r\\n    \\r\\n                </li>\\r\\n            </ul>\\r\\n    \\r\\n        </div>\\r\\n    </nav>\"","export default \"\\r\\n<!-- <div *ngIf=\\\"!Orderlist\\\" class=\\\"row\\\">\\r\\n  No customer found\\r\\n</div> -->\\r\\n<br>\\r\\n<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <!-- <div class=\\\"col-sm-8\\\"> -->\\r\\n      <!-- <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Orders\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div *ngIf=\\\"Orderlist\\\" class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n             \\r\\n              <table class=\\\"table table-sm table-hover small\\\">\\r\\n                <thead class=\\\"thead-light\\\">\\r\\n                  <tr>\\r\\n                   <th scope=\\\"col\\\" hidden=\\\"true\\\">Key</th>\\r\\n                    <th scope=\\\"col\\\">Status</th>\\r\\n                    <th scope=\\\"col\\\" hidden=\\\"true\\\">View</th>\\r\\n                    <th scope=\\\"col\\\">Order No</th>\\r\\n                    <th scope=\\\"col\\\">Date</th>\\r\\n                    <th scope=\\\"col\\\">Order Type</th>\\r\\n                    <th scope=\\\"col\\\" hidden=\\\"true\\\">Action</th>\\r\\n                    <th scope=\\\"col\\\" hidden=\\\"true\\\">Testing</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>                 \\r\\n                  <tr *ngFor=\\\"let order of Orderlist\\\">\\r\\n                      <td hidden=\\\"true\\\">\\r\\n                          <span>{{ order.OrderKey}} </span>\\r\\n                        </td>\\r\\n\\r\\n                    <td *ngIf=\\\" order.statusdescription  == 'In Progress'\\\"><span\\r\\n                        class=\\\"badge badge-pill badge-primary\\\">{{ order.statusdescription }}</span></td>\\r\\n                    <td *ngIf=\\\" order.statusdescription  == 'On Hold'\\\"><span\\r\\n                        class=\\\"badge badge-pill badge-warning\\\">{{ order.statusdescription }}</span></td>\\r\\n                    <td *ngIf=\\\" order.statusdescription  == 'Completed'\\\"><span\\r\\n                        class=\\\"badge badge-pill badge-success\\\">{{ order.statusdescription }}</span></td>\\r\\n\\r\\n                    <td *ngIf=\\\"order.statusdescription  == 'Credit Denied'\\\"><span\\r\\n                        class=\\\"badge badge-pill badge-success\\\">{{ order.statusdescription }}</span></td>\\r\\n\\r\\n                    <td *ngIf=\\\" order.statusdescription  == 'Send to Scheduler'\\\">\\r\\n                      <span class=\\\"badge badge-pill badge-success\\\">{{ order.statusdescription }}</span></td>\\r\\n\\r\\n                    <td *ngIf=\\\" order.statusdescription  == 'Send to Dispatch'\\\">\\r\\n                      <span class=\\\"badge badge-pill badge-success\\\">{{ order.statusdescription }}</span></td>\\r\\n\\r\\n                    <td *ngIf=\\\" order.statusdescription  == 'Send to Billing'\\\"><span\\r\\n                        class=\\\"badge badge-pill badge-success\\\">{{ order.statusdescription }}</span></td>\\r\\n\\r\\n                    <td *ngIf=\\\"order.statusdescription  == 'Invoice Generated'\\\">\\r\\n                      <span class=\\\"badge badge-pill badge-success\\\">{{ order.statusdescription }}</span></td>\\r\\n\\r\\n                    <td *ngIf=\\\" order.statusdescription  == 'Review completed'\\\"><span\\r\\n                        class=\\\"badge badge-pill badge-success\\\">{{ order.statusdescription }}</span></td>\\r\\n\\r\\n                    <td hidden=\\\"true\\\">\\r\\n\\r\\n\\r\\n                      <button type=\\\"button\\\" class=\\\"btn \\\" label=\\\"Click\\\" (click)=\\\"viewOrderinfo1(order.OrderKey)\\\"\\r\\n                        data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\" tooltip=\\\"View Order information\\\"> <i\\r\\n                          class=\\\"fa fa-eye fa-1x\\\" style=\\\"color:slateblue\\\"></i>\\r\\n                      </button>\\r\\n                    </td>\\r\\n                    <td>                     \\r\\n                            {{ order.OrderNo }}\\r\\n                    </td>\\r\\n\\r\\n\\r\\n                    <td>{{ order.OrderDate |date}} </td>\\r\\n                    <td>{{ order.ordertypedescription}}</td>\\r\\n\\r\\n                    <td hidden=\\\"true\\\">\\r\\n                   \\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-link\\\" label=\\\"Click\\\" (click)=\\\"navigatetoTab(order.OrderKey)\\\">\\r\\n                        <i class=\\\"fa fa-pencil-square-o fa-2x\\\"></i>\\r\\n                      </button>\\r\\n\\r\\n                    </td>\\r\\n                    <td hidden=\\\"true\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn \\\" label=\\\"Click\\\" \\r\\n                      (click)=\\\"open(order.OrderKey,content)\\\"\\r\\n                        tooltip=\\\"Go to validate\\\"> <i\\r\\n                          class=\\\"fa fa-eye fa-1x\\\" style=\\\"color:slateblue\\\"></i>                     </button>\\r\\n\\r\\n                    \\r\\n                    </td>\\r\\n                  </tr>\\r\\n                  <tr *ngIf=\\\"Orderlist.length===0\\\">\\r\\n                    <td colspan=\\\"3\\\">\\r\\n                      <h4 style=\\\"color: darkorange;\\\">No records found! </h4>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n              </table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div> -->\\r\\n    <!-- </div> -->\\r\\n\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Order Status\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"chart-wrapper\\\">\\r\\n            <canvas baseChart class=\\\"chart\\\"  [data]=\\\"pieChartData\\\" [labels]=\\\"pieChartLabels\\\" [chartType]=\\\"pieChartType\\\"\\r\\n              (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-6\\\">     \\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Order Numbers\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"chart-wrapper\\\">\\r\\n            <canvas baseChart class=\\\"chart\\\" [datasets]=\\\"barChartData\\\" [labels]=\\\"barChartLabels\\\"\\r\\n              [options]=\\\"barChartOptions\\\" [legend]=\\\"barChartLegend\\\" [chartType]=\\\"barChartType\\\"\\r\\n              (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<!-- <div *ngIf=\\\"ModalOrderKey!=undefined\\\" class=\\\"modal fade\\\" id=\\\"myModaltesting\\\" style=\\\"width:100%;height: auto;\\\">\\r\\n  <div class=\\\"modal-dialog modal-dialog-top modal-xl\\\" style=\\\"width:100%;height: auto;\\\">\\r\\n    <div class=\\\"modal-content\\\" style=\\\"width:100%;height: auto;\\\">\\r\\n\\r\\n    \\r\\n      <div class=\\\"modal-header\\\" style=\\\"width:100%;height: auto;\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Delivery Order</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n      </div>\\r\\n\\r\\n     \\r\\n      <div class=\\\"modal-body\\\" style=\\\"width:100%;height: auto;\\\">\\r\\n       <app-tab [orderKeyinput] = \\\"ModalOrderKey\\\"> </app-tab>\\r\\n      </div>\\r\\n\\r\\n      \\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div> -->\\r\\n<!-- The Modal -->\\r\\n<!-- <div *ngIf=\\\"order!=undefined\\\" class=\\\"modal fade\\\" id=\\\"myModal\\\" style=\\\"width:100%;height: auto;\\\">\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered modal-xl\\\" style=\\\"width:100%;height: auto;\\\">\\r\\n    <div class=\\\"modal-content\\\" style=\\\"width:100%;height: auto;background-color: #5c6873\\\">\\r\\n\\r\\n     \\r\\n      <div class=\\\"modal-header\\\" style=\\\"width:100%;height: auto;\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Delivery Order</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n      </div>\\r\\n\\r\\n     \\r\\n      <div class=\\\"modal-body\\\" style=\\\"width:100%;height: auto;\\\">\\r\\n        <h4>\\r\\n          <p class=\\\"card-subtitle mb-2\\\"> Status :\\r\\n            <span *ngIf=\\\"order.statusdescription!=undefined\\\" style=\\\" font-style: oblique;color:yellowgreen\\\">\\r\\n              {{order.statusdescription}}</span> </p>\\r\\n        </h4>\\r\\n        <br>\\r\\n        <table class=\\\"table table-sm table-borderless\\\">\\r\\n          <tbody>\\r\\n            <tr>\\r\\n              <td>\\r\\n                <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:white\\\">Order No : <span\\r\\n                    class=\\\"badge badge-pill badge-primary\\\" style=\\\"color:white\\\">{{order.OrderNo}}</span> </p>\\r\\n\\r\\n              </td>\\r\\n              <td>\\r\\n                <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:white\\\"> Date : <span class=\\\"badge badge-pill badge-danger\\\"\\r\\n                    style=\\\"color:white\\\">{{order.OrderDate}}</span></p>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>\\r\\n                <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:white\\\"> VessalName : <span\\r\\n                    class=\\\"badge badge-pill badge-primary\\\" style=\\\"color:black\\\">{{order.VesselName}}</span></p>\\r\\n              </td>\\r\\n              <td>\\r\\n                <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:white\\\"> Billof Lading :<span\\r\\n                    class=\\\"badge badge-pill badge-primary\\\" style=\\\"color:black\\\">{{order.BillofLading}}</span></p>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>\\r\\n                <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:white\\\"> Broker Name : <span\\r\\n                    class=\\\"badge badge-pill badge-primary\\\" style=\\\"color:black\\\">{{order.BrokerName}}</span></p>\\r\\n              </td>\\r\\n              <td>\\r\\n                <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:white\\\"> Broker Ref No : <span\\r\\n                    class=\\\"badge badge-pill badge-primary\\\" style=\\\"color:black\\\">{{order.BrokerRefNo}}</span></p>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>\\r\\n                <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:white\\\"> Booking No : <span\\r\\n                    class=\\\"badge badge-pill badge-primary\\\" style=\\\"color:black\\\">{{order.BookingNo}}</span></p>\\r\\n              </td>\\r\\n              <td>\\r\\n                <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:white\\\"> Cut-Off Date : <span\\r\\n                    class=\\\"badge badge-pill badge-primary\\\" style=\\\"color:black\\\">{{order.CutOffDate}}</span></p>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n\\r\\n        <br>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-3\\\">\\r\\n            <div class=\\\"card text-white bg-primary mb-3\\\">\\r\\n              <div class=\\\"card-header\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-3\\\">\\r\\n                    <img src=\\\"assets/img/brand/user-identity2.png\\\" alt=\\\"My Image\\\" class=\\\"img-rounded\\\"\\r\\n                      style=\\\"width:100%;height:auto\\\">\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-5\\\">\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <label>Customer</label>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"card-body\\\">\\r\\n                <h5 class=\\\"card-title\\\">Maersk Line</h5>\\r\\n                <label class=\\\"card-text\\\"> Milestone Buildcon</label>\\r\\n                <label class=\\\"card-text\\\"> bhartiya city, Chokanahalli</label>\\r\\n                <label class=\\\"card-text\\\"> Bengaluru, Karnataka 560064 </label>\\r\\n                <label class=\\\"card-text\\\"> India 560064 </label>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"col-md-3\\\">\\r\\n            <div class=\\\"card text-white bg-secondary mb-3\\\">\\r\\n              <div class=\\\"card-header\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-3\\\">\\r\\n                    <img src=\\\"assets/img/brand/user-identity2.png\\\" alt=\\\"My Image\\\" class=\\\"img-rounded\\\"\\r\\n                      style=\\\"width:100%;height:auto\\\">\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-5\\\">\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <label>Pickup</label>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"card-body\\\">\\r\\n                <h5 class=\\\"card-title\\\">Maersk Line</h5>\\r\\n                <label class=\\\"card-text\\\"> Milestone Buildcon</label>\\r\\n                <label class=\\\"card-text\\\"> bhartiya city, Chokanahalli</label>\\r\\n                <label class=\\\"card-text\\\"> Bengaluru, Karnataka 560064 </label>\\r\\n                <label class=\\\"card-text\\\"> India 560064 </label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-3\\\">\\r\\n            <div class=\\\"card text-white bg-success  mb-3\\\">\\r\\n              <div class=\\\"card-header\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-3\\\">\\r\\n                    <img src=\\\"assets/img/brand/user-identity2.png\\\" alt=\\\"My Image\\\" class=\\\"img-rounded\\\"\\r\\n                      style=\\\"width:100%;height:auto\\\">\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-5\\\">\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <label>Consignee</label>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"card-body\\\">\\r\\n                <h5 class=\\\"card-title\\\">Maersk Line</h5>\\r\\n                <label class=\\\"card-text\\\"> Milestone Buildcon</label>\\r\\n                <label class=\\\"card-text\\\"> bhartiya city, Chokanahalli</label>\\r\\n                <label class=\\\"card-text\\\"> Bengaluru, Karnataka 560064 </label>\\r\\n                <label class=\\\"card-text\\\"> India 560064 </label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-3\\\">\\r\\n            <div class=\\\"card text-white bg-info mb-3\\\">\\r\\n              <div class=\\\"card-header\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-3\\\">\\r\\n                    <img src=\\\"assets/img/brand/user-identity2.png\\\" alt=\\\"My Image\\\" class=\\\"img-rounded\\\"\\r\\n                      style=\\\"width:100%;height:auto\\\">\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-5\\\">\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <label>Return</label>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"card-body\\\">\\r\\n                <h5 class=\\\"card-title\\\">Maersk Line</h5>\\r\\n                <label class=\\\"card-text\\\"> Milestone Buildcon</label>\\r\\n                <label class=\\\"card-text\\\"> bhartiya city, Chokanahalli</label>\\r\\n                <label class=\\\"card-text\\\"> Bengaluru, Karnataka 560064 </label>\\r\\n                <label class=\\\"card-text\\\"> India 560064 </label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <br>\\r\\n        <div class=\\\"card card-accent-warning bg-secondary mb-3\\\">\\r\\n          <div class=\\\"card-header \\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-2\\\">\\r\\n                <img src=\\\"assets/img/brand/shipping-container.png\\\" alt=\\\"My Image\\\" class=\\\"img-rounded\\\"\\r\\n                  style=\\\"max-width:100%;height:auto\\\">\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"col-md-8\\\">\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"col-md-2\\\">\\r\\n                <h5> Container details</h5>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"table-responsive\\\" style=\\\"overflow-x: auto\\\">\\r\\n              <table id=\\\"containerAttributes\\\" class=\\\"table table-sm\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\">\\r\\n                <thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\"><label style=\\\"text-decoration: underline;\\\">Container No </label> </th>\\r\\n                    <th scope=\\\"col\\\"><label style=\\\"text-decoration: underline;\\\">Container Size</label></th>\\r\\n                    <th scope=\\\"col\\\"><label style=\\\"text-decoration: underline;\\\">Chassis</label></th>\\r\\n                    <th scope=\\\"col\\\"><label style=\\\"text-decoration: underline;\\\">Seal</label> </th>\\r\\n                    <th scope=\\\"col\\\"><label style=\\\"text-decoration: underline;\\\">Weight in lbs</label></th>\\r\\n                    <th scope=\\\"col\\\"><label style=\\\"text-decoration: underline;\\\">Appointment From</label></th>\\r\\n                    <th scope=\\\"col\\\"><label style=\\\"text-decoration: underline;\\\">Appointment To</label></th>\\r\\n                    <th scope=\\\"col\\\"><label style=\\\"text-decoration: underline;\\\">Status</label></th>\\r\\n\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let field of orderinfo; let i = index\\\">\\r\\n                    <td>{{field.ContainerSize}} </td>\\r\\n                    <td>\\r\\n                      <select id=\\\"drpcontainerType\\\" class=\\\"form-control form-control-sm text-primary\\\"\\r\\n                        aria-placeholder=\\\"containerNo\\\" name=\\\"{{field.ContainerNo}}\\\" [(ngModel)]=\\\"field.ContainerNo\\\">\\r\\n                        <option value=1>20DRY</option>\\r\\n                        <option value=2>40DRY</option>\\r\\n                        <option value=3>40HDRY</option>\\r\\n                        <option value=4>45HDRY</option>\\r\\n                        <option value=5>20OPEN</option>\\r\\n                        <option value=6>40OPEN</option>\\r\\n                        <option value=7>20FLAT</option>\\r\\n                        <option value=8>40FLAT</option>\\r\\n                      </select>\\r\\n                    </td>\\r\\n                    <td> {{field.Chassis}}</td>\\r\\n                    <td> {{field.SealNo}}</td>\\r\\n                    <td> {{field.Weight}}</td>\\r\\n                    <td> {{field.AppDateFrom}}</td>\\r\\n                    <td> {{field.ApptDateTo}} </td>\\r\\n                    <td> {{field.Status}}</td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n              </table>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div  class=\\\"modal fade\\\" id=\\\"myModaltesting\\\" style=\\\"width:100%;height: auto;\\\">\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered modal-xl\\\" style=\\\"width:100%;height: auto;\\\">\\r\\n    <div class=\\\"modal-content\\\" style=\\\"width:100%;height: auto;\\\">\\r\\n\\r\\n     \\r\\n      <div class=\\\"modal-header\\\" style=\\\"width:100%;height: auto;\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Delivery Order</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n      </div>\\r\\n\\r\\n     <app-tab [orderKey]=\\\"ModalOrderKey\\\"> </app-tab>\\r\\n  \\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div> -->\\r\\n\\r\\n<router-outlet></router-outlet>\"","export default \"<div class=\\\"pdf-container\\\" >\\r\\n  <input (change)=\\\"onFileSelected()\\\" type=\\\"file\\\" id=\\\"file\\\">\\r\\n<pdf-viewer [src]=\\\"pdfSrc\\\"\\r\\n      [render-text]=\\\"true\\\"\\r\\n      [page]=\\\"page\\\" \\r\\n      [show-all]=\\\"true\\\"\\r\\n      style=\\\"display: block;\\\">\\r\\n    </pdf-viewer>\\r\\n  </div>\\r\\n\\r\\n  \\r\\n  \\r\\n  \\r\\n\\r\\n\"","export default \"<div class=\\\"modal-header\\\">\\r\\n  <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n      <h4 class=\\\"modal-title\\\">{{OrderDetail.containerid}}</h4>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n      <div class=\\\"container text-right\\\">\\r\\n        <button class=\\\"btn btn-info btn-sm small\\\" type=\\\"button\\\" style=\\\"border-radius: 1rem;\\\"\\r\\n          (click)=\\\"onSubmit()\\\">  <i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i> Update</button>\\r\\n        &nbsp; <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.dismiss('Cross click')\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span> </button>\\r\\n\\r\\n          <!-- <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.dismiss('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span> </button> -->\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    \\r\\n    <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n          <!-- <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"SealNo\\\">Appointment date</label>\\r\\n           \\r\\n        </div>  -->\\r\\n          <div class=\\\"input-group input-group-sm\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\">From</span>\\r\\n            </div>\\r\\n            <input type=\\\"text\\\" placeholder=\\\"ApptDate From\\\" class=\\\"form-control form-control-sm\\\" name=\\\"AppDateFrom\\\"\\r\\n              [(ngModel)]=\\\"AppDateFrom\\\" [owlDateTimeTrigger]=\\\"dt1\\\" [owlDateTime]=\\\"dt1\\\" />\\r\\n            <owl-date-time [pickerType]=\\\"'calendar'\\\" #dt1></owl-date-time>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n          <div class=\\\"input-group input-group-sm\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\">To</span>\\r\\n            </div>\\r\\n            <input type=\\\"text\\\" placeholder=\\\"ApptDate To\\\" class=\\\"form-control form-control-sm\\\" name=\\\"AppDateTo\\\"\\r\\n              [(ngModel)]=\\\"AppDateTo\\\" [owlDateTimeTrigger]=\\\"dt2\\\" [owlDateTime]=\\\"dt2\\\" />\\r\\n            <owl-date-time [pickerType]=\\\"'calendar'\\\" #dt2></owl-date-time>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <br>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n          <div class=\\\"input-group input-group-sm\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\">Pickup</span>\\r\\n            </div>\\r\\n            <input class=\\\"form-control form-control-sm\\\" placeholder=\\\"Pickup DateTime\\\" type=\\\"text\\\" name=\\\"PickupDateTime\\\"\\r\\n              [(ngModel)]=\\\"PickupDateTime\\\" [owlDateTimeTrigger]=\\\"dt3\\\" [owlDateTime]=\\\"dt3\\\" required />\\r\\n            <owl-date-time [pickerType]=\\\"'both'\\\" #dt3 [hour12Timer]=\\\"false\\\"></owl-date-time>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n          <div class=\\\"input-group input-group-sm\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\">Drop</span>\\r\\n            </div>\\r\\n            <input class=\\\"form-control  form-control-sm\\\" type=\\\"text\\\" placeholder=\\\"DropOff DateTime\\\"\\r\\n              name=\\\"DropOffDateTime\\\" [(ngModel)]=\\\"DropOffDateTime\\\" [owlDateTimeTrigger]=\\\"dt4\\\" [owlDateTime]=\\\"dt4\\\" />\\r\\n            <owl-date-time [pickerType]=\\\"'both'\\\" #dt4></owl-date-time>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <br>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n          <div class=\\\"input-group input-group-sm\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\">Last Free day </span>\\r\\n            </div>\\r\\n            <input class=\\\"form-control  form-control-sm\\\" type=\\\"text\\\" placeholder=\\\"Last free day\\\" name=\\\"LastFreeDay\\\"\\r\\n              [(ngModel)]=\\\"LastFreeDay\\\" [owlDateTimeTrigger]=\\\"dt5\\\" [owlDateTime]=\\\"dt5\\\" />\\r\\n            <owl-date-time [pickerType]=\\\"'calendar'\\\" #dt5></owl-date-time>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <br>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n          <div class=\\\"input-group input-group-sm\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\">Leg Type</span>\\r\\n            </div>\\r\\n            <!-- <select id=\\\"drpStatus\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"legtype\\\" name=\\\"legtype\\\"\\r\\n                  [(ngModel)]=\\\"legtype\\\">\\r\\n                  <option [(value)]=\\\"leg.Value\\\" *ngFor=\\\"let leg of statuslist\\\">{{leg.Name}}</option>\\r\\n                </select> -->\\r\\n\\r\\n            <select id=\\\"drpStatus\\\" class=\\\"browser-default custom-select\\\" placeholder=\\\"Legtype\\\" name=\\\"Legtype\\\"\\r\\n              [(ngModel)]=\\\"Legtype\\\">\\r\\n              <!-- <option [(value)]=\\\"f8ddd2e8-f6f4-11e9-95f6-dbd2245f3061\\\">L</option>\\r\\n                  <option [(value)]=\\\"fa3dbfb8-f6f4-11e9-95f7-978271f9febc\\\">D</option>\\r\\n                  <option [(value)]=\\\"fb93dc9e-f6f4-11e9-95f8-0f4bc41ca26f\\\">D/S</option> -->\\r\\n              <option [value]='1'>L</option>\\r\\n              <option [value]=\\\"2\\\">D</option>\\r\\n              <option [value]=\\\"3\\\">D/S</option>\\r\\n\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <br>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"SealNo\\\">Driver Notes</label>\\r\\n\\r\\n            <textarea class=\\\"form-control\\\" rows=\\\"3\\\" id=\\\"DriverNotes\\\" placeholder=\\\"Driver Notes\\\"\\r\\n              [(ngModel)]=\\\"DriverNotes\\\" name=\\\"DriverNotes\\\"></textarea>\\r\\n          </div>\\r\\n\\r\\n          <!-- <div class=\\\"input-group input-group-sm mb-3\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\"> Driver Notes</span>\\r\\n            </div>\\r\\n            <input class=\\\"form-control form-control-sm\\\" placeholder=\\\"DriverNotes\\\" type=\\\"text\\\" name=\\\"DriverNotes\\\"\\r\\n              [(ngModel)]=\\\"DriverNotes\\\" />\\r\\n          </div> -->\\r\\n        </div>\\r\\n      </div>\\r\\n      <br>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"SealNo\\\">Scheduler Notes</label>\\r\\n            <textarea class=\\\"form-control\\\" rows=\\\"3\\\" id=\\\"SchedulerNotes\\\" placeholder=\\\"Scheduler Notes\\\"\\r\\n              [(ngModel)]=\\\"SchedulerNotes\\\" name=\\\"SchedulerNotes\\\"></textarea>\\r\\n          </div>\\r\\n          <!-- <div class=\\\"input-group input-group-sm mb-3\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\"> Scheduler Notes</span>\\r\\n            </div>\\r\\n            <input class=\\\"form-control form-control-sm\\\" placeholder=\\\"SchedulerNotes\\\" type=\\\"text\\\"\\r\\n              name=\\\"SchedulerNotes\\\" [(ngModel)]=\\\"SchedulerNotes\\\" />\\r\\n          </div> -->\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- \\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n          <div class=\\\"input-group input-group-sm mb-3\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\">Status</span>\\r\\n            </div>\\r\\n            <select id=\\\"drpStatus\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Status\\\" name=\\\"status\\\"\\r\\n              [(ngModel)]=\\\"status\\\">\\r\\n              <option [(value)]=\\\"status.Value\\\" *ngFor=\\\"let status of statuslist\\\">{{status.Name}}</option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">             \\r\\n        </div>\\r\\n      </div> -->\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\"></div>\\r\\n        <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n          <label for=\\\"SealNo\\\"> <b> Accounting Options:</b></label>\\r\\n          <div *ngFor=\\\"let list of itemlist ; let i = index\\\" style=\\\"height: 30px;\\\">\\r\\n            <!-- <label class=\\\"checkbox-inline\\\">\\r\\n              <input type=\\\"checkbox\\\" value=\\\"{{list.itemkey}}\\\"  (change)=\\\"onCheckboxChange(list,$event)\\\">\\r\\n              {{list.itemid}} </label> -->\\r\\n\\r\\n            <input  type=\\\"checkbox\\\" [(ngModel)]=\\\"list.isChecked\\\" value=\\\"{{list.itemkey}}\\\"\\r\\n              [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"onCheckboxChange(list,$event)\\\" />\\r\\n            <small> &nbsp;{{list.itemid}} </small>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<br>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\r\\n\\r\\n    <div class=\\\"scrollbar\\\" id=\\\"scrollbar-style\\\">\\r\\n      <ul class=\\\"list-unstyled\\\">\\r\\n        <li>\\r\\n          <h5>Containers <span class=\\\"badge badge-warning\\\">Recent</span></h5><br>\\r\\n        </li>\\r\\n        <li>\\r\\n          <div class=\\\"container text-left\\\">\\r\\n            <div class=\\\"form-group input-group input-group-sm\\\">\\r\\n              <div class=\\\"img-group-prepend\\\">\\r\\n                <img src=\\\"assets/img/brand/search16px.png\\\" /> &nbsp;\\r\\n              </div>\\r\\n              <input [(ngModel)]=\\\"SearchRecentContainer\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                style=\\\"border-radius: 1rem;\\\" type=\\\"text\\\" placeholder=\\\"Search..\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <br>\\r\\n        </li>\\r\\n        \\r\\n        <li *ngFor=\\\"let data of DetailsData| grdFilter: {containerid: SearchRecentContainer,ContainerNo: SearchRecentContainer} ; let ind=index;\\\">\\r\\n          <ul class=\\\"list-unstyled\\\">\\r\\n            <li>\\r\\n              <p style=\\\"font-family:calibri;\\\">\\r\\n                <a [routerLink]=\\\"\\\" (click)=\\\"rowclickEvent(data)\\\">\\r\\n                  {{data.containerid}}<br> <small class=\\\"text-muted\\\"> {{ data.ContainerNo }} </small></a>\\r\\n                <span class=\\\"badge\\\" *ngIf=\\\"selectedKey===data.OrderDetailKey\\\">\\r\\n                  <img src=\\\"assets/img/brand/symbol-check16px.png\\\" /> </span>\\r\\n              </p>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-10 col-md-10 col-lg-10\\\">\\r\\n\\r\\n    <div *ngIf=\\\"showScheduler\\\">\\r\\n      <!-- <div class=\\\"card card-body\\\"> -->\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n          <!-- <h6 class=\\\"card-subtitle mb-2\\\">\\r\\n            <img src=\\\"assets/img/brand/overtime24px.png\\\" style=\\\"color: cornflowerblue;\\\" /> Scheduler</h6> -->\\r\\n          <button class=\\\"btn btn-success\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#Orderdata\\\"\\r\\n            aria-expanded=\\\"false\\\" aria-controls=\\\"Orderdata\\\">\\r\\n            Order ID - <b>{{HeaderData.OrderNo}} </b>\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-8 col-md-8 col-lg-8 text-right\\\">\\r\\n          <button class=\\\"btn btn-outline-primary btn-sm small\\\" type=\\\"button\\\" (click)=\\\"hold_Schedule()\\\"> <i class=\\\"fa fa-pause-circle-o\\\" aria-hidden=\\\"true\\\"></i> Hold Container</button> &nbsp;\\r\\n          &nbsp;\\r\\n          <button class=\\\"btn btn-outline-primary btn-sm small\\\" type=\\\"button\\\" (click)=\\\"onSubmit()\\\"><i class=\\\"fa fa-floppy-o\\\" aria-hidden=\\\"true\\\"></i> Save</button> &nbsp;\\r\\n          &nbsp;\\r\\n          <button class=\\\"btn btn-outline-primary btn-sm small\\\" type=\\\"button\\\" (click)=\\\"complete_Schedule()\\\" [disabled]=\\\"btnCompleteScheduleDisabled\\\"> <i class=\\\"fa fa-check-circle-o\\\" aria-hidden=\\\"true\\\"></i> Complete Schedule</button> &nbsp;\\r\\n          &nbsp;\\r\\n          <button class=\\\"btn btn-outline-danger btn-sm small\\\" type=\\\"button\\\" (click)=\\\"onCancel()\\\"> <i class=\\\"fa fa-ban\\\"\\r\\n              aria-hidden=\\\"true\\\"></i>&nbsp;Cancel</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <br>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n          <div class=\\\"collapse show\\\" id=\\\"Orderdata\\\">\\r\\n            <div class=\\\"card card-body \\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\"> <span class=\\\"text-muted\\\">Date</span></div>\\r\\n                    <div class=\\\"col-sm-9 col-md-9 col-lg-9\\\"><span>{{HeaderData.OrderDate|date}} </span></div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\"> <span class=\\\"text-muted\\\">Type</span></div>\\r\\n                    <div class=\\\"col-sm-9 col-md-9 col-lg-9\\\"><span> {{HeaderData.ordertypedescription}} </span></div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\"> <span class=\\\"text-muted\\\">Broker</span></div>\\r\\n                    <div class=\\\"col-sm-9 col-md-9 col-lg-9\\\"><span> {{HeaderData.BrokerName}} </span></div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\"> <span class=\\\"text-muted\\\">Broker Ref</span></div>\\r\\n                    <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\"><span> {{HeaderData.BrokerRefNo}} </span></div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\"> <span class=\\\"text-muted\\\">Booking No</span></div>\\r\\n                    <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\"><span> {{HeaderData.BookingNo}} </span></div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\"> <span class=\\\"text-muted\\\">Vessel</span></div>\\r\\n                    <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\"><span> {{HeaderData.VesselName}} </span></div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\"> <span class=\\\"text-muted\\\">Bill of Lading</span></div>\\r\\n                    <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\"><span> {{HeaderData.BillofLading}} </span></div>\\r\\n                  </div>\\r\\n                  <!-- <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\"> <span class=\\\"text-muted\\\">Cut-Off Date</span></div>\\r\\n                    <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\"><span> {{HeaderData.CutOffDate|date}} </span></div>\\r\\n                  </div> -->\\r\\n                </div>\\r\\n              </div>\\r\\n              <hr style=\\\"color: slategray;\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                      <span class=\\\"text-muted\\\">Bill to</span>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                      <div style=\\\"word-wrap: break-word;\\\">\\r\\n                        {{HeaderData.BillToAddressBO.Name}}\\r\\n                        {{HeaderData.BillToAddressBO.Address1}}, {{HeaderData.BillToAddressBO.Address2}}\\r\\n                        {{HeaderData.BillToAddressBO.City}} - {{HeaderData.BillToAddressBO.Zip}}\\r\\n                        {{HeaderData.BillToAddressBO.State}}\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                      <span class=\\\"text-muted\\\">Pickup</span>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                      <div style=\\\"word-wrap: break-word;\\\">\\r\\n                        {{HeaderData.SourceAddressBO.Name}}\\r\\n                        {{HeaderData.SourceAddressBO.Address1}} {{HeaderData.SourceAddressBO.Address2}}\\r\\n                        {{HeaderData.SourceAddressBO.City}} {{HeaderData.SourceAddressBO.Zip}}\\r\\n                        {{HeaderData.SourceAddressBO.State}}\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                      <span class=\\\"text-muted\\\">Delivery</span>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                      <div style=\\\"word-wrap: break-word;\\\">\\r\\n                        {{HeaderData.DestinationAddressBO.Name}}\\r\\n                        {{HeaderData.DestinationAddressBO.Address1}} {{HeaderData.DestinationAddressBO.Address2}}\\r\\n                        {{HeaderData.DestinationAddressBO.City}} {{HeaderData.DestinationAddressBO.Zip}}\\r\\n                        {{HeaderData.DestinationAddressBO.State}}\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-3 col-md-3 col-lg-3\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                      <span class=\\\"text-muted\\\">Return</span>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n                      <div style=\\\"word-wrap: break-word;\\\">\\r\\n                        {{HeaderData.ReturnAddressBO.Name}}\\r\\n                        {{HeaderData.ReturnAddressBO.Address1}} {{HeaderData.ReturnAddressBO.Address2}}\\r\\n                        {{HeaderData.ReturnAddressBO.City}} {{HeaderData.ReturnAddressBO.Zip}}\\r\\n                        {{HeaderData.ReturnAddressBO.State}}\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <hr style=\\\"color: slategray;\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                  <div class=\\\"panel panel-warning\\\">\\r\\n                    <div class=\\\"panel-body\\\">\\r\\n                      <h6 class=\\\"text-muted\\\">Container</h6>\\r\\n                      <table class=\\\"table table-sm small table-striped\\\">\\r\\n                        <thead class=\\\"thead-light\\\">\\r\\n                          <tr>\\r\\n                            <th scope=\\\"col\\\" class=\\\"text-muted\\\">Id</th>\\r\\n                            <th scope=\\\"col\\\" class=\\\"text-muted\\\">Container</th>\\r\\n                            <th scope=\\\"col\\\" class=\\\"text-muted\\\">Size</th>\\r\\n                            <th scope=\\\"col\\\" class=\\\"text-muted\\\">Seal no</th>\\r\\n                            <th scope=\\\"col\\\" class=\\\"text-muted\\\">Weight</th>\\r\\n                            <th scope=\\\"col\\\" class=\\\"text-muted\\\">Comments</th>\\r\\n                          </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                          <tr>\\r\\n                            <td>\\r\\n                              {{DetailData.containerid}}\\r\\n                            </td>\\r\\n                            <td>\\r\\n                              {{DetailData.ContainerNo}}\\r\\n                            </td>\\r\\n                            <td>\\r\\n                              {{DetailData.ContainerSizeDesc}}\\r\\n                            </td>\\r\\n                            <td>\\r\\n                              {{DetailData.SealNo}}\\r\\n                            </td>\\r\\n                            <td>\\r\\n                              {{DetailData.Weight}}\\r\\n                            </td>\\r\\n                            <td>\\r\\n                              {{DetailData.Comments}}\\r\\n                            </td>\\r\\n                          </tr>\\r\\n                        </tbody>\\r\\n                      </table>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                  <div class=\\\"panel-heading\\\">\\r\\n                    <h6 class=\\\"text-muted\\\">Order Comments</h6>\\r\\n                  </div>\\r\\n                  <p><small> {{HeaderData.Comment}}</small></p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"card card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                <div class=\\\"input-group input-group-sm\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Last Free day </span>\\r\\n                  </div>\\r\\n                  <input class=\\\"form-control  form-control-sm\\\" type=\\\"text\\\" placeholder=\\\"\\\" name=\\\"LastFreeDay\\\"\\r\\n                    [(ngModel)]=\\\"LastFreeDay\\\" [owlDateTimeTrigger]=\\\"dt5\\\" [owlDateTime]=\\\"dt5\\\" />\\r\\n                  <owl-date-time [pickerType]=\\\"'calendar'\\\" #dt5></owl-date-time>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n                <div class=\\\"input-group input-group-sm\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">Leg Type </span>\\r\\n                  </div>\\r\\n                  <select id=\\\"drpStatus\\\" class=\\\"browser-default custom-select\\\" placeholder=\\\"Legtype\\\" name=\\\"Legtype\\\"\\r\\n                    [(ngModel)]=\\\"Legtype\\\">\\r\\n                    <option [value]='0' selected=\\\"true\\\">No Legtype selected</option>\\r\\n                    <option [value]='1'>L</option>\\r\\n                    <option [value]=\\\"2\\\">D</option>\\r\\n                    <option [value]=\\\"3\\\">D/S</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <br>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <h6 class=\\\"text-muted\\\">Appointment Date </h6>\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                          <tbody>\\r\\n                            <tr>\\r\\n                              <td>\\r\\n                                <div class=\\\"input-group input-group-sm\\\">\\r\\n                                  <input type=\\\"text\\\" placeholder=\\\"From\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                                    name=\\\"AppDateFrom\\\" [(ngModel)]=\\\"AppDateFrom\\\" [owlDateTimeTrigger]=\\\"dt1\\\"\\r\\n                                    [owlDateTime]=\\\"dt1\\\" />\\r\\n                                  <owl-date-time [pickerType]=\\\"'calendar'\\\" #dt1></owl-date-time>\\r\\n                                </div>\\r\\n                              </td>\\r\\n                              <td> &nbsp; &nbsp;</td>\\r\\n                              <td>\\r\\n                                <div class=\\\"input-group input-group-sm\\\">\\r\\n                                  <input type=\\\"text\\\" placeholder=\\\"To\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                                    name=\\\"AppDateTo\\\" [(ngModel)]=\\\"AppDateTo\\\" [owlDateTimeTrigger]=\\\"dt2\\\"\\r\\n                                    [owlDateTime]=\\\"dt2\\\" />\\r\\n                                  <owl-date-time [pickerType]=\\\"'calendar'\\\" #dt2></owl-date-time>\\r\\n                                </div>\\r\\n                              </td>\\r\\n                            </tr>\\r\\n                          </tbody>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <!-- \\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n              <div class=\\\"input-group input-group-sm mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\">Status</span>\\r\\n                </div>\\r\\n                <select id=\\\"drpStatus\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Status\\\" name=\\\"status\\\"\\r\\n                  [(ngModel)]=\\\"status\\\">\\r\\n                  <option [(value)]=\\\"status.Value\\\" *ngFor=\\\"let status of statuslist\\\">{{status.Name}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">             \\r\\n            </div>\\r\\n          </div> -->\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <h6 class=\\\"text-muted\\\">Pickup/Delivery DateTime </h6>\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                          <tbody>\\r\\n                            <tr>\\r\\n                              <td>\\r\\n                                <div class=\\\"input-group input-group-sm\\\">\\r\\n                                  <input class=\\\"form-control form-control-sm\\\" placeholder=\\\"Pickup \\\" type=\\\"text\\\"\\r\\n                                    name=\\\"PickupDateTime\\\" [(ngModel)]=\\\"PickupDateTime\\\" [owlDateTimeTrigger]=\\\"dt3\\\"\\r\\n                                    [owlDateTime]=\\\"dt3\\\" required />\\r\\n                                  <owl-date-time [pickerType]=\\\"'both'\\\" #dt3 [hour12Timer]=\\\"false\\\"></owl-date-time>\\r\\n                                </div>\\r\\n                              </td>\\r\\n                              <td> &nbsp; &nbsp;</td>\\r\\n                              <td>\\r\\n                                <div class=\\\"input-group input-group-sm\\\">\\r\\n                                  <input class=\\\"form-control  form-control-sm\\\" type=\\\"text\\\" placeholder=\\\"Delivery\\\"\\r\\n                                    name=\\\"DropOffDateTime\\\" [(ngModel)]=\\\"DropOffDateTime\\\" [owlDateTimeTrigger]=\\\"dt4\\\"\\r\\n                                    [owlDateTime]=\\\"dt4\\\" />\\r\\n                                  <owl-date-time [pickerType]=\\\"'both'\\\" #dt4></owl-date-time>\\r\\n                                </div>\\r\\n                              </td>\\r\\n                            </tr>\\r\\n                          </tbody>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"text-muted\\\">Driver Notes</label>\\r\\n\\r\\n                  <textarea class=\\\"form-control\\\" id=\\\"DriverNotes\\\" placeholder=\\\"Driver Notes\\\" [(ngModel)]=\\\"DriverNotes\\\"\\r\\n                    name=\\\"DriverNotes\\\"></textarea>\\r\\n                </div>\\r\\n\\r\\n                <!-- <div class=\\\"input-group input-group-sm mb-3\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <span class=\\\"input-group-text\\\"> Driver Notes</span>\\r\\n              </div>\\r\\n              <input class=\\\"form-control form-control-sm\\\" placeholder=\\\"DriverNotes\\\" type=\\\"text\\\" name=\\\"DriverNotes\\\"\\r\\n                [(ngModel)]=\\\"DriverNotes\\\" />\\r\\n            </div> -->\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"text-muted\\\">Scheduler Notes</label>\\r\\n                  <textarea class=\\\"form-control\\\" id=\\\"SchedulerNotes\\\" placeholder=\\\"Scheduler Notes\\\"\\r\\n                    [(ngModel)]=\\\"SchedulerNotes\\\" name=\\\"SchedulerNotes\\\"></textarea>\\r\\n                </div>\\r\\n                <!-- <div class=\\\"input-group input-group-sm mb-3\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <span class=\\\"input-group-text\\\"> Scheduler Notes</span>\\r\\n              </div>\\r\\n              <input class=\\\"form-control form-control-sm\\\" placeholder=\\\"SchedulerNotes\\\" type=\\\"text\\\"\\r\\n                name=\\\"SchedulerNotes\\\" [(ngModel)]=\\\"SchedulerNotes\\\" />\\r\\n            </div> -->\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\r\\n            <!-- <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n              <label for=\\\"SealNo\\\"> <b> Accounting Options:</b></label>\\r\\n              <div *ngFor=\\\"let list of itemlist\\\">\\r\\n                <label class=\\\"checkbox-inline\\\">\\r\\n                  <input type=\\\"checkbox\\\" value=\\\"{{list.itemkey}}\\\" (change)=\\\"onCheckboxChange(list,$event)\\\">\\r\\n                  {{list.itemid}} </label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div> -->\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                <label class=\\\"text-muted\\\"> <b> Accounting Options</b></label>\\r\\n                <div class=\\\"card card-body\\\">\\r\\n                  <!-- <table class=\\\"table table-sm table-borderless\\\">\\r\\n                    <tbody>\\r\\n                      <tr *ngFor=\\\"let list of itemlist; let i =index;let even = even;let odd = odd;\\\">\\r\\n\\r\\n                        <div *ngIf=\\\"i==0\\\">\\r\\n                          <td style=\\\"width: max-content;\\\">\\r\\n                            <div>\\r\\n                              <span class=\\\"checkbox-inline\\\">\\r\\n                                <input type=\\\"checkbox\\\" value=\\\"{{list.itemkey}}\\\"\\r\\n                                  (change)=\\\"onCheckboxChange(list,$event)\\\">\\r\\n                                {{list.itemid}} </span>\\r\\n                            </div>\\r\\n                          </td>\\r\\n                          <td>\\r\\n\\r\\n                          </td>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"odd\\\">\\r\\n                      <tr>\\r\\n                        <td style=\\\"width: 150px;\\\">\\r\\n                          <div>\\r\\n                            <span class=\\\"checkbox-inline\\\">\\r\\n                              <input type=\\\"checkbox\\\" value=\\\"{{list.itemkey}}\\\" (change)=\\\"onCheckboxChange(list,$event)\\\">\\r\\n                              {{list.itemid}} </span>\\r\\n                          </div>\\r\\n                        </td>\\r\\n                        <td style=\\\"width: 150px;\\\">\\r\\n                          <div>\\r\\n                            <span class=\\\"checkbox-inline\\\">\\r\\n                              <input type=\\\"checkbox\\\" value=\\\"{{itemlist[i+1].itemkey}}\\\"\\r\\n                                (change)=\\\"onCheckboxChange(itemlist[i+1],$event)\\\">\\r\\n                              {{itemlist[i+1].itemid}} </span>\\r\\n                          </div>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                </div>\\r\\n               \\r\\n                </tr>\\r\\n                </tbody>\\r\\n                </table> -->\\r\\n                <div *ngFor=\\\"let list of itemlist\\\">\\r\\n                    <input  type=\\\"checkbox\\\"  [(ngModel)]=\\\"list.isChecked\\\" value=\\\"{{list.itemkey}}\\\"\\r\\n                    [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"onCheckboxChange(list,$event)\\\" />\\r\\n                  <small style=\\\"color:wheat;\\\"> &nbsp;{{list.itemid}} </small>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- </div> -->\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div *ngIf=\\\"showScheduledContainerList\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-8 col-sm-8 col-md-8\\\"> </div>\\r\\n      <div class=\\\"col-4 col-sm-4 col-md-4\\\">\\r\\n        <div class=\\\"container text-right\\\">\\r\\n          <div class=\\\"form-group input-group input-group-sm\\\">\\r\\n            <div class=\\\"img-group-prepend\\\">\\r\\n              <img src=\\\"assets/img/brand/search16px.png\\\" /> &nbsp;\\r\\n            </div>\\r\\n            <input [(ngModel)]=\\\"searchText\\\" class=\\\"form-control form-control-sm\\\" style=\\\"border-radius: 1rem;\\\"\\r\\n              type=\\\"text\\\" placeholder=\\\"Search..\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <table class=\\\"table table-sm table-borderless \\\">\\r\\n        <thead class=\\\"thead-dark shadow\\\">\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\" (click)=\\\"sort('containerid')\\\" class=\\\" pointer text-muted\\\">ID &nbsp;<i class=\\\"fa fa-sort\\\" aria-hidden=\\\"true\\\"></i></th>\\r\\n            <th scope=\\\"col\\\"(click)=\\\"sort('ContainerNo')\\\" class=\\\" pointer text-muted\\\">Container &nbsp;<i class=\\\"fa fa-sort\\\" aria-hidden=\\\"true\\\"></i></th>\\r\\n            <th scope=\\\"col\\\" (click)=\\\"sort('ContainerSizeDesc')\\\" class=\\\" pointer text-muted\\\">Size &nbsp;<i class=\\\"fa fa-sort\\\" aria-hidden=\\\"true\\\"></i></th>         \\r\\n            <th scope=\\\"col\\\" (click)=\\\"sort('LastFreeDay')\\\" class=\\\" pointer text-muted\\\">Last free day &nbsp;<i class=\\\"fa fa-sort\\\" aria-hidden=\\\"true\\\"></i></th>\\r\\n            <th scope=\\\"col\\\" (click)=\\\"sort('PickupDateTime')\\\" class=\\\" pointer text-muted\\\">Pickup &nbsp;<i class=\\\"fa fa-sort\\\" aria-hidden=\\\"true\\\"></i></th>\\r\\n            <th scope=\\\"col\\\" (click)=\\\"sort('DropOffDateTime')\\\" class=\\\" pointer text-muted\\\">Delivery &nbsp;<i class=\\\"fa fa-sort\\\" aria-hidden=\\\"true\\\"></i></th>\\r\\n            <th scope=\\\"col\\\"  class=\\\"text-muted\\\">Scheduler notes</th>\\r\\n            <th scope=\\\"col\\\" (click)=\\\"sort('StatusDesc')\\\" class=\\\" pointer text-muted\\\">Status &nbsp;<i class=\\\"fa fa-sort\\\" aria-hidden=\\\"true\\\"></i></th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-muted\\\">Next Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let order of scheduledContainerList| \\r\\n            grdFilter: {containerid: searchText,ContainerNo: searchText,ContainerSizeDesc: searchText\\r\\n              ,LastFreeDay: searchText\\r\\n              ,PickupDateTime: searchText\\r\\n              ,DropOffDateTime: searchText\\r\\n              ,StatusDesc: searchText} |paginate:{itemsPerPage:10,currentPage:p,totalItems: count}; let ind=index;\\\">\\r\\n            <td>\\r\\n              <small class=\\\"font-weight-bold\\\">\\r\\n                {{order.containerid}}\\r\\n              </small>\\r\\n            </td>\\r\\n            <td> <small class=\\\"font-weight-normal\\\" style=\\\"color: cornflowerblue;\\\">\\r\\n                {{order.ContainerNo}} </small></td>\\r\\n            <td> <small class=\\\"font-weight-normal\\\">\\r\\n                {{order.ContainerSizeDesc}} </small></td>           \\r\\n            <td> <small class=\\\"font-weight-normal\\\">\\r\\n                {{order.LastFreeDay|date}} </small></td>\\r\\n            <td> <small class=\\\"font-weight-normal\\\">\\r\\n                {{order.PickupDateTime|date: 'dd/MM/yyyy hh:mm a'}} </small></td>\\r\\n            <td> <small class=\\\"font-weight-normal\\\">\\r\\n                {{order.DropOffDateTime|date: 'dd/MM/yyyy hh:mm a'}} </small></td>\\r\\n                <td> <small class=\\\"font-weight-normal\\\">\\r\\n                  {{order.SchedulerNotes}} </small></td>\\r\\n            <td> <small *ngIf=\\\"order.StatusDesc == 'Schedule onhold'\\\" class=\\\"font-weight-normal\\\" style=\\\"color: orange;\\\">\\r\\n                on Hold </small>\\r\\n              <small *ngIf=\\\"order.StatusDesc == 'Schedule inprogress'\\\" class=\\\"font-weight-normal\\\" style=\\\"color: green;\\\">\\r\\n                In progress </small>\\r\\n\\r\\n            </td>\\r\\n            <td>\\r\\n              <strong> <i class=\\\"cil-chevron-circle-right-alt\\\" style=\\\"color: yellowgreen;\\\"></i></strong>\\r\\n              &nbsp;\\r\\n              <small *ngIf=\\\"order.StatusDesc == 'Schedule onhold'\\\" class=\\\"font-weight-normal\\\" style=\\\"color: orange;\\\">\\r\\n                {{order.nextaction}} </small>\\r\\n              <small *ngIf=\\\"order.StatusDesc == 'Schedule inprogress'\\\" class=\\\"font-weight-normal\\\" style=\\\"color: green;\\\">\\r\\n                {{order.nextaction}} </small>\\r\\n              &nbsp;\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\" style=\\\"border-radius: 1rem;\\\"\\r\\n                (click)=\\\"loaddata_forEdit(order)\\\">\\r\\n                <i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i>\\r\\n              </button>\\r\\n              <!-- <span class=\\\"fa fa-pencil-square-o\\\" (click)=\\\"update(order.OrderKey)\\\"></span> <br>\\r\\n                              <small>update</small> -->\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr *ngIf=\\\"scheduledContainerList.length===0\\\">\\r\\n            <td colspan=\\\"3\\\">\\r\\n              <h4 style=\\\"color: darkorange;\\\">No records found! </h4>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n      <div class=\\\"container text-right\\\"> \\r\\n        <pagination-controls \\r\\n        (pageChange)=\\\"p=$event\\\"\\r\\n        autoHide=\\\"true\\\"\\r\\n        responsive=\\\"true\\\"> </pagination-controls>     \\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"showImage\\\">\\r\\n    <div class=\\\"row \\\"> </div>\\r\\n    <div class=\\\"row \\\"> </div>\\r\\n    <div class=\\\"row \\\">\\r\\n      <div class=\\\"col-md-4\\\"> </div>\\r\\n      <!-- <div class=\\\"col-md-4\\\"> <img src=\\\"assets/img/brand/Actions-gear-icon128px.png\\\" /></div> -->\\r\\n      <div class=\\\"col-md-4\\\"> </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n<!-- \\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <input [(ngModel)]=\\\"searchText\\\" class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" placeholder=\\\"Search..\\\">\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"table-responsive small\\\" *ngIf=\\\"DetailsData.length > 0\\\">\\r\\n  <table id=\\\"containerAttributes\\\" class=\\\"table table-sm table-hover\\\">\\r\\n    <thead class=\\\"thead-light\\\">\\r\\n      <tr>\\r\\n        <th>View_Detail</th>\\r\\n        <th>Container#</th>\\r\\n        <th>Size</th>\\r\\n        <th>Chassis#</th>\\r\\n        <th>Seal#</th>\\r\\n        <th>Weight</th>\\r\\n        <th>Appt_DateFrom</th>\\r\\n        <th>Appt_DateTo</th>\\r\\n        <th>Pickup_DateTime</th>\\r\\n        <th>DropOff_DateTime</th>\\r\\n        <th>Status</th>\\r\\n        <th>Action</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr\\r\\n        *ngFor=\\\"let field of DetailsData | grdFilter: {Chassis: searchText,SealNo: searchText, blog: searchText}; let i = index\\\">\\r\\n       \\r\\n        <td>\\r\\n          <a class=\\\"btn btn-link\\\" role=\\\"button\\\" (click)=\\\"rowclickEvent(field)\\\">\\r\\n            <img src=\\\"assets/img/brand/DataViewDetails24px.png\\\" />\\r\\n            <span class=\\\"badge\\\" *ngIf=\\\"selectedKey===field.OrderKey\\\">\\r\\n              <img src=\\\"assets/img/brand/symbol-check16px.png\\\" /> </span>\\r\\n          </a>\\r\\n        </td>\\r\\n        <td>\\r\\n          {{field.ContainerNo}}\\r\\n        </td>\\r\\n        <td>\\r\\n          {{field.ContainerSizeDesc}}\\r\\n        </td>\\r\\n\\r\\n        <td>\\r\\n          {{field.Chassis}}\\r\\n        </td>\\r\\n        <td>\\r\\n\\r\\n          {{field.SealNo}}\\r\\n        </td>\\r\\n        <td>\\r\\n\\r\\n          {{field.Weight}}\\r\\n        </td>\\r\\n        <td>\\r\\n          <input type=\\\"text\\\" #model=\\\"ngModel\\\" [(ngModel)]=\\\"field.AppDateFrom\\\"\\r\\n            class=\\\"form-control form-control-sm bg-dark\\\" [owlDateTimeTrigger]=\\\"dt1\\\" [owlDateTime]=\\\"dt1\\\" />\\r\\n          <owl-date-time [pickerType]=\\\"'calendar'\\\" #dt1></owl-date-time>\\r\\n        </td>\\r\\n        <td>\\r\\n          <input type=\\\"text\\\" #model=\\\"ngModel\\\" [(ngModel)]=\\\"field.AppDateTo\\\" class=\\\"form-control form-control-sm bg-dark\\\"\\r\\n            [owlDateTimeTrigger]=\\\"dt2\\\" [owlDateTime]=\\\"dt2\\\" />\\r\\n          <owl-date-time [pickerType]=\\\"'calendar'\\\" #dt2></owl-date-time>\\r\\n\\r\\n        </td>\\r\\n        <td>\\r\\n          <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" #model=\\\"ngModel\\\" [(ngModel)]=\\\"field.PickupDateTime\\\"\\r\\n            [owlDateTimeTrigger]=\\\"dt3\\\" [owlDateTime]=\\\"dt3\\\" required />\\r\\n          <owl-date-time [pickerType]=\\\"'both'\\\" #dt3 [hour12Timer]=\\\"false\\\"></owl-date-time>\\r\\n        </td>\\r\\n\\r\\n        <td>\\r\\n          <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" #model=\\\"ngModel\\\" [(ngModel)]=\\\"field.DropOffDateTime\\\"\\r\\n            [owlDateTimeTrigger]=\\\"dt4\\\" [owlDateTime]=\\\"dt4\\\" />\\r\\n          <owl-date-time [pickerType]=\\\"'both'\\\" #dt4></owl-date-time>\\r\\n        </td>\\r\\n\\r\\n        <td>\\r\\n          <select id=\\\"drpStatus\\\" class=\\\"form-control form-control-sm bg-dark\\\" #model=\\\"ngModel\\\"\\r\\n            [(ngModel)]=\\\"field.status\\\">\\r\\n            <option [(value)]=\\\"status.Value\\\" *ngFor=\\\"let status of statuslist\\\">{{status.Name}}</option>\\r\\n          </select>\\r\\n        </td>\\r\\n\\r\\n        <td>\\r\\n          <button class=\\\"btn btn-primary btn-sm small\\\" type=\\\"button\\\" (click)=\\\"onSubmit(field)\\\">Schedule</button>\\r\\n        </td>      \\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div> -->\"","export default \"<!-- <ng-template #content let-modal>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title\\\">Modal title</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <tabset  type=\\\"tabs\\\" (click)=\\\"onClick($event)\\\" >\\r\\n            <tab   title=\\\"Disabled\\\" [disabled]=\\\"false\\\"   >\\r\\n              <ng-template tabHeading>\\r\\n                  doIntake \\r\\n              </ng-template>\\r\\n              <app-dointake [orderKeyinput]=orderKeyinput></app-dointake>\\r\\n            </tab>\\r\\n           \\r\\n            <tab >\\r\\n              <ng-template tabHeading>\\r\\n                  Scheduler\\r\\n              </ng-template>\\r\\n              <app-scheduler [orderKeyinput]=orderKeyinput></app-scheduler>\\r\\n            </tab>\\r\\n            <tab [disabled]=\\\"true\\\">\\r\\n              <ng-template tabHeading >\\r\\n                Despatch\\r\\n              </ng-template>\\r\\n            </tab>\\r\\n            <tab [disabled]=\\\"true\\\">\\r\\n              <ng-template tabHeading>\\r\\n                Billing\\r\\n              </ng-template>\\r\\n            </tab>\\r\\n          </tabset>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n   -->\\r\\n\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <!-- <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n      <div class=\\\"card text-white\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <h5 class=\\\"card-subtitle mb-2\\\" style=\\\"color:black\\\">Order# : {{order.OrderNo}} </h5>\\r\\n          <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:black\\\"> Date: <span class=\\\"badge badge-pill badge-danger\\\"\\r\\n              style=\\\"color:white\\\">{{order.OrderDate}}</span></p>\\r\\n          <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:black\\\"> Type: <span class=\\\"badge badge-pill badge-danger\\\"\\r\\n              style=\\\"color:black\\\">{{order.OrderTypeDescription}}</span></p>\\r\\n          <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:black\\\"> Status: <span class=\\\"badge badge-pill badge-danger\\\"\\r\\n              style=\\\"color:black\\\">{{order.OrderStatusDescription}}</span></p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n      <div class=\\\"card text-white\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:black\\\"> Customer: <span class=\\\"badge badge-pill badge-danger\\\"\\r\\n              style=\\\"color:white\\\"></span></p>\\r\\n          <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:black\\\"> Broker: <span class=\\\"badge badge-pill badge-primary\\\"\\r\\n              style=\\\"color:black\\\">{{order.BrokerName}}</span></p>\\r\\n          <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:black\\\"> Broker Ref#: : <span class=\\\"badge badge-pill badge-primary\\\"\\r\\n              style=\\\"color:black\\\">{{order.BrokerRefNo}}</span></p>\\r\\n          <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:black\\\"> Booking# : <span class=\\\"badge badge-pill badge-primary\\\"\\r\\n              style=\\\"color:black\\\">{{order.BookingNo}}</span></p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n      <div class=\\\"card text-white\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n\\r\\n          <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:black\\\"> Vessel: <span class=\\\"badge badge-pill badge-primary\\\"\\r\\n              style=\\\"color:black\\\">{{order.VesselName}}</span></p>\\r\\n          <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:black\\\"> Bill of Lading :<span\\r\\n              class=\\\"badge badge-pill badge-primary\\\" style=\\\"color:black\\\">{{order.BillofLading}}</span></p>\\r\\n          <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:black\\\"> Cut-Off Date : <span class=\\\"badge badge-pill badge-primary\\\"\\r\\n              style=\\\"color:black\\\">{{order.CutOffDate}}</span></p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n      <div class=\\\"card text-white\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:black\\\"> Pickup : <span class=\\\"badge badge-pill badge-primary\\\"\\r\\n              style=\\\"color:black\\\"></span></p>\\r\\n          <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:black\\\"> Consignee : <span class=\\\"badge badge-pill badge-primary\\\"\\r\\n              style=\\\"color:black\\\"></span></p>\\r\\n          <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:black\\\"> Return : <span class=\\\"badge badge-pill badge-primary\\\"\\r\\n              style=\\\"color:black\\\"></span></p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div> -->\\r\\n  <!-- <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n      <h5 class=\\\"card-subtitle mb-2\\\" style=\\\"color: white\\\">Order# : <span style=\\\"color: #0892d0\\\">{{order.OrderNo}} </span> </h5>\\r\\n      <p class=\\\"card-subtitle mb-2\\\" style=\\\"color: white\\\"> Date: <span style=\\\"color: #0892d0\\\">{{order.OrderDate}}</span></p>\\r\\n      <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:white\\\"> Type: <span style=\\\"color: #0892d0\\\">{{order.ordertypedescription}}</span></p>\\r\\n      <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:white\\\"> Status: <span style=\\\"color: #0892d0\\\">{{order.statusdescription}}</span></p>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n      <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:white\\\"> Customer: <span class=\\\"badge badge-pill badge-danger\\\"\\r\\n          style=\\\"color:white\\\"></span></p>\\r\\n      <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:white\\\"> Broker: <span style=\\\"color: #0892d0\\\">{{order.BrokerName}}</span></p>\\r\\n      <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:white\\\"> Broker Ref#: <span style=\\\"color: #0892d0\\\">{{order.BrokerRefNo}}</span></p>\\r\\n      <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:white\\\"> Booking# :<span style=\\\"color: #0892d0\\\"> {{order.BookingNo}}</span></p>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n      <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:white\\\"> Vessel: <span style=\\\"color: #0892d0\\\">{{order.VesselName}}</span></p>\\r\\n      <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:white\\\"> Bill of Lading : <span style=\\\"color: #0892d0\\\">{{order.BillofLading}} </span></p>\\r\\n      <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:white\\\"> Cut-Off Date : <span style=\\\"color: #0892d0\\\">{{order.CutOffDate|date}}</span></p>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n      <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:grey\\\"> Pickup : <span class=\\\"badge badge-pill badge-primary\\\"\\r\\n          style=\\\"color:black\\\"></span></p>\\r\\n      <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:grey\\\"> Consignee : <span class=\\\"badge badge-pill badge-primary\\\"\\r\\n          style=\\\"color:black\\\"></span></p>\\r\\n      <p class=\\\"card-subtitle mb-2\\\" style=\\\"color:grey\\\"> Return : <span class=\\\"badge badge-pill badge-primary\\\"\\r\\n          style=\\\"color:black\\\"></span></p>\\r\\n    </div>\\r\\n  </div>\\r\\n  <hr>\\r\\n  <tabset type=\\\"tabs\\\" (click)=\\\"onClick($event)\\\">\\r\\n    <tab title=\\\"Disabled\\\" [disabled]=\\\"false\\\">\\r\\n      <ng-template tabHeading>\\r\\n        doIntake\\r\\n      </ng-template>\\r\\n      <app-dointake [orderKeyinput]=orderKeyinput></app-dointake>\\r\\n    </tab>\\r\\n\\r\\n    <tab>\\r\\n      <ng-template tabHeading>\\r\\n        Scheduler\\r\\n      </ng-template>\\r\\n      <app-scheduler [orderKeyinput]=orderKeyinput></app-scheduler>\\r\\n    </tab>\\r\\n    <tab [disabled]=\\\"false\\\">\\r\\n      <ng-template tabHeading>\\r\\n        Dispatch Assignment\\r\\n      </ng-template>\\r\\n      <app-dispatch [orderKeyinput]=orderKeyinput></app-dispatch>\\r\\n    </tab>\\r\\n    <tab [disabled]=\\\"false\\\">\\r\\n      <ng-template tabHeading>\\r\\n        Dispatch/Delivery\\r\\n      </ng-template>\\r\\n      <app-dispathdelivery [orderKeyinput]=orderKeyinput></app-dispathdelivery>\\r\\n    </tab>\\r\\n    <tab [disabled]=\\\"true\\\">\\r\\n      <ng-template tabHeading>\\r\\n        Billing\\r\\n      </ng-template>\\r\\n    </tab>\\r\\n  </tabset> -->\\r\\n</div>\"","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-2 col-xs-2 side\\\">\\r\\n     <div style=\\\"position:relative;width:100%;height:100%;\\\">\\r\\n       <!-- <div class=\\\"top\\\" style=\\\"background-color:red;top:0;width:100%;height: 100px; position:absolute;\\\">\\r\\n           top\\r\\n       </div> -->\\r\\n\\r\\n       <div class=\\\"scroll-area\\\">\\r\\n           <ul>\\r\\n               <li>one</li>\\r\\n           </ul>\\r\\n           <div style=\\\"width:100%;height:10000px;\\\">\\r\\n           </div>\\r\\n           <ul>\\r\\n               <li>one-thousand</li>\\r\\n           </ul>\\r\\n       </div>\\r\\n\\r\\n       <!-- <div class=\\\"bottom\\\" style=\\\"background-color:blue;bottom:0;width:100%;height: 100px; position:absolute;\\\">\\r\\n           bottom\\r\\n       </div> -->\\r\\n     </div>\\r\\n\\r\\n  </div> \\r\\n  <div class=\\\"col-md-10 col-xs-offset-2 content col-md-offset-2\\\">\\r\\n    <div style=\\\"height:1000px;width:100%;\\\">\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class AppSettings {\r\n\r\n    //public static get _BaseURL():string { return 'http://localhost:51902/'};    \r\n      public static get _BaseURL():string { return 'http://104.211.205.211:51902/'};   \r\n        //public static get _BaseURL():string { return 'http://localhost:51903/'};   \r\n    //public static get _BaseURL():string { return 'http://10.0.0.9:8081/'};   \r\n}\r\n\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filter'\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n  transform(items: any[], searchText: string): any[] {\r\n    if (!items) return [];\r\n    if (!searchText) return items;\r\n  \r\n    return items.filter(item => {\r\n      return Object.keys(item).some(key => {\r\n        return String(item[key]).toLowerCase().includes(searchText.toLowerCase());\r\n      });\r\n    });\r\n   }\r\n}\r\n","import { Order_details } from \"./order_details\";\r\nimport { Address } from \"./address\";\r\nimport { Comments } from \"./comments\";\r\nimport { Files } from './files';\r\nimport { Dispatch } from './dispatch';\r\n\r\nexport class DeliveryOrderHeader {         \r\n        public OrderKey: string;\r\n        public OrderNo:string ;\r\n        public CustKey:string ;\r\n        public OrderDate?:Date ;\r\n        public BillToAddress: string ;\r\n        public BillToAddr: string ;\r\n        public SourceAddress: string ;\r\n        public SourceAddr: string ;\r\n        public DestinationAddress: string ;\r\n        public DestinationAddr: string ;\r\n        public ReturnAddress: string ;\r\n        public Source:string ;\r\n        public OrderType:number ;\r\n        public Status:number ;\r\n        public StatusDate:Date ;\r\n        public HoldReason: number;\r\n        public HoldDate:Date ;\r\n        public BrokerName:string  ;\r\n        public BrokerId:string ;\r\n        public Brokerkey: string;\r\n        public BrokerRefNo:string  ;\r\n        public PortofOriginKey: string ;\r\n        public PortofDestinationKey: string ;        \r\n        public CarrierKey: string ;\r\n        public carrier: string ;\r\n        public VesselName:string  ;\r\n        public BillofLading:string  ;\r\n        public BookingNo:string ;\r\n        public CutOffDate?:Date ;\r\n        public Priority:number;\r\n        public IsHazardous:boolean;\r\n        public CreatedBy: string ;\r\n        public CreatedDate:Date;\r\n        public ordertypedescription:string ;\r\n        public statusdescription:string ;\r\n        public nextaction:string ;\r\n        public Comment:string  ;\r\n        public CommentBO: Comments;\r\n        public BillToAddressBO : Address;\r\n        public SourceAddressBO : Address;\r\n        public DestinationAddressBO : Address;\r\n        public  ReturnAddressBO : Address;\r\n        public BrokerAddressBO : Address;\r\n\r\n        public orderdetails:Order_details[];\r\n        public files:Files[];\r\n        public dispatchdetails:Dispatch[];\r\n        \r\n\r\n}","import { Address } from \"./address\";\r\n\r\nexport class User {\r\n    userkey: string;\r\n    Userkey: string;\r\n    UserId: string;\r\n    username: string;\r\n    password : string;\r\n    firstname: string;\r\n    lastname: string;\r\n    addrkey: string;\r\n    company:string;\r\n    address?: Address;\r\n}","export class Address {\r\n    Name: string;\r\n    Address1: string;\r\n    Address2: string;\r\n    City:string;\r\n    State:string;\r\n    Zip:string;    \r\n    Phone: string;\r\n    Phone2: string;\r\n    Fax: string;\r\n    Email: string;\r\n    Email2: string;\r\n    Country: string;\r\n    Website:string;\r\n    AddrKey: string;    \r\n}\r\n\r\n","import { Address } from \"./address\";\r\n\r\nexport class Broker {\r\n  BrokerName: string;\r\n  BrokerId: string;\r\n  BrokerKey: string;\r\n  Status: string;\r\n  Address?: Address;\r\n  CreateDate: string;\r\n  StatusDate: string;\r\n}\r\n","export class City {\n  citykey: string;\n  cityid: string;\n  cityname: string;\n  createdate: string;\n  Status: number;\n  StatusDate: string;\n}\n","import { Address } from \"./address\";\r\n\r\nexport class Company {\r\n  compkey: string;\r\n  compid : string;\r\n  compname: string;\r\n  ParentCompanyKey: string;\r\n  addrkey:string;\r\n  status : number; \r\n  Address:Address;\r\n}\r\n","import { Address } from './address';\r\n\r\nexport class Customer {\r\n  CustomerKey: string;\r\n  CustId: string;\r\n  CustName: string;\r\n  addrkey :string;\r\n  Status: number;\r\n  CustomerGroup: number;\r\n  StatusDate: string;\r\n  CreditCheck: boolean;\r\n  CreditLimit: number;\r\n  CreditStatus: number;\r\n  achrequired:boolean;\r\n  paymentterms :number; \r\n  Address:Address;\r\n  address=Address;\r\n  customer_edit: Address;\r\n}\r\n","export class Dispatch {\r\n      Routekey :string;\r\n      OrderDetailKey :string; \r\n      appointmentno :string;\r\n      driverkey :string;\r\n      drivernotes :string;\r\n      chassis :string;\r\n      legno :string;\r\n      legtype :number;\r\n      portwaitingtimefrom? :Date;\r\n      portwaitingtimeto? :Date;\r\n      customerwaitingtimefrom? :Date;\r\n      customerwaitingtimeto? :Date;  \r\n      actualarrival? :Date;\r\n      actualdeparture? :Date;\r\n      status :number;\r\n}\r\n","import { Address } from \"./address\";\r\n\r\nexport class Driver {\r\n  DriverKey: string;\r\n  DriverId: string;\r\n  drivernotes?: string;\r\n  FirstName: string;\r\n  LastName?: string;\r\n  Address?: Address;\r\n  CarrierKey?: string;\r\n  DriversLicenseNo?: string;\r\n  LicenseExpiryDate?: string;\r\n  CreateDate?: string;\r\n  Status?: number;\r\n  StatusDate?: string;\r\n  VendorKey?: string;\r\n}\r\n","\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'grdFilter'\r\n})\r\nexport class GrdFilterPipe implements PipeTransform {\r\n  transform(items: any, filter: any, defaultFilter: boolean): any {\r\n    if (!filter){\r\n      return items;\r\n    }\r\n\r\n    if (!Array.isArray(items)){\r\n      return items;\r\n    }\r\n\r\n    if (filter && Array.isArray(items)) {\r\n      let filterKeys = Object.keys(filter);\r\n\r\n      if (defaultFilter) {\r\n        return items.filter(item =>\r\n            filterKeys.reduce((x, keyName) =>\r\n                (x && new RegExp(filter[keyName], 'gi').test(item[keyName])) || filter[keyName] == \"\", true));\r\n      }\r\n      else {\r\n        return items.filter(item => {\r\n          return filterKeys.some((keyName) => {\r\n            return new RegExp(filter[keyName], 'gi').test(item[keyName]) || filter[keyName] == \"\";\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'groupBy'})\r\nexport class GroupByPipe implements PipeTransform {\r\n    transform(collection: any, property: string): any {\r\n        // prevents the application from breaking if the array of objects doesn't exist yet\r\n        if(!collection) {\r\n            return null;\r\n        }\r\n\r\n        const groupedCollection = collection.reduce((previous, current)=> {\r\n            if(!previous[current[property]]) {\r\n                previous[current[property]] = [current];\r\n            } else {\r\n                previous[current[property]].push(current);\r\n            }\r\n\r\n            return previous;\r\n        }, {});\r\n\r\n        // this will return an array of objects, each object containing a group of objects\r\n        return Object.keys(groupedCollection).map(key => ({ key, value: groupedCollection[key] }));\r\n    }\r\n}","import { Invoicedetails } from \"./invoicedetails\";\r\n\r\nexport class Invoice {\r\n  Invoicekey: string;\r\n  InvoiceNo: number;\r\n  InvoiceDate: Date;\r\n  CustKey: string;\r\n  CustName: string;\r\n  BilltoAddrKey: string;\r\n  BilltoAddrCopy: string;\r\n  InvoiceAmt: number;\r\n  DueDate: Date;\r\n  InvoiceType: number;\r\n  OrderKey: string;\r\n  StatusDesc:string;\r\n  nextaction:string;\r\n  invoicedetails:Invoicedetails[];\r\n}\r\n","export class Invoicedetails {\r\n  Itemkey: string;\r\n  Description: string;\r\n  Price: number;\r\n  ItemType: number;\r\n  Quantity: number;\r\n  InvoiceDescription: string;\r\n  UnitPrice: number;\r\n  ExcessAmount: string;\r\n  InvoiceLineKey: string;\r\n  InvoiceKey: string;\r\n  Container:string;\r\n  isEditable:boolean;\r\n}\r\n","import { DeliveryOrderHeader } from \"./DeliveryOrderHeader\";\r\nimport { Invoice } from \"./invoice\";\r\nimport { Address } from \"./address\";\r\nimport { Invoicedetails } from \"./invoicedetails\";\r\nimport { Order_details } from \"./order_details\";\r\nimport { Container } from './container';\r\n\r\nexport class Invoicemodel {\r\n  public order: DeliveryOrderHeader;\r\n  public containers: Container[];  \r\n  public BillFrom: Address;\r\n  public BillTo: Address;\r\n  public Pickup: Address;\r\n  public Delivery: Address;\r\n  public Broker: Address;\r\n  \r\n  public invoice: Invoice;\r\n  public invoicedetails: Invoicedetails[];\r\n}\r\n","export class Item {\r\n    itemkey:string;\r\n    itemid :string;\r\n    description :string;\r\n    itemtype :number;\r\n    unitprice :number;\r\n    unitcost :number;\r\n    isChecked:boolean;\r\n}\r\n","import { Time } from \"@angular/common\";\r\nimport { Tms_routes } from \"./tms_routes\";\r\nimport { Comments } from './comments';\r\n\r\nexport class Order_details {\r\n        OrderDetailKey :string;\r\n        containerid:string;\r\n        OrderKey:string;\r\n        ContainerSize:string;\r\n        ContainerNo:string;\r\n        Chassis:string;\r\n        SealNo: string;\r\n        Weight:number;\r\n        AppDateFrom:Date;\r\n        AppDateTo:Date;\r\n        PickupDateTime:Date;       \r\n        DropOffDateTime:Date;      \r\n        ActualPickupDateTime:string;\r\n        ActualDropOffDateTime:string;  \r\n        LastFreeDay:Date; \r\n        SchedulerNotes:string;    \r\n        status:string;\r\n        statusdate:string;\r\n        holdreason:string;\r\n        holddate:string;\r\n        ContainerSizeDesc:string;\r\n        StatusDesc:string;\r\n        HoldReasonDesc:string;  \r\n        orderroutes:Tms_routes;\r\n        Comments:string;     \r\n        nextaction:string; \r\n\r\n        CreatedBy:string;\r\n        createdDate:string;\r\n}\r\n","import { Item } from \"./item\";\n\nexport class Ratesheet {\n  ratekey: string;\n  customerkey: string;\n  // item: Item[];\n  item: Array<Item> = [];\n  itemkey: string;\n  description: string;  \n  unitprice: number;\n  userkey: string;\n  createdate: string;\n  lastupdatedate: string;\n}\n","export class Tms_routes {\r\n  Routekey: string;\r\n  OrderDetailKey: string;\r\n  OrderKey: string;\r\n  legno: string;\r\n  legtype: number;\r\n  sourceaddrkey: string;\r\n  destinationaddrkey: string;\r\n  estimateddistanceinmiles: string;\r\n  estimatedtraveltime: string;\r\n  status: string;\r\n  driverkey: string;\r\n  drivernotes: string;\r\n  scheduledarrival: Date;\r\n  scheduleddeparture: Date;\r\n  odometeratsource: string;\r\n  actualarrival: Date;\r\n  actualdeparture: Date;\r\n  odometeratdestination: string;\r\n  Chassis:string;\r\n}\r\n","import { Address } from \"./address\";\r\n\r\nexport class Vendor {\r\n    vendkey : string;\r\n     vendid : string;\r\n     vendname : string;\r\n     Address : Address;\r\n    addrkey : string;    \r\n}\r\n\r\n\r\n","// interface NavAttributes {\r\n//   [propName: string]: any;\r\n// }\r\n// interface NavWrapper {\r\n//   attributes: NavAttributes;\r\n//   element: string;\r\n// }\r\n// interface NavBadge {\r\n//   text: string;\r\n//   variant: string;\r\n// }\r\n// interface NavLabel {\r\n//   class?: string;\r\n//   variant: string;\r\n// }\r\n\r\n// export interface NavData {\r\n//   name?: string;\r\n//   url?: string;\r\n//   icon?: string;\r\n//   badge?: NavBadge;\r\n//   title?: boolean;\r\n//   children?: NavData[];\r\n//   variant?: string;\r\n//   attributes?: NavAttributes;\r\n//   divider?: boolean;\r\n//   class?: string;\r\n//   label?: NavLabel;\r\n//   wrapper?: NavWrapper;\r\n// }\r\n\r\n// export const navItems = [\r\n//   {\r\n//     name: 'Dashboard',\r\n//     url: '/dashboard',\r\n//     icon: 'icon-speedometer',   \r\n//   },\r\n//   {\r\n//     name: 'Orders',\r\n//     icon: 'icon-star',\r\n//     url: '/orderList'\r\n//   },\r\n//   {\r\n//     name: 'Do-Intake',\r\n//     icon: 'icon-pencil',\r\n//     url: '/doIntake',\r\n//     badge: {\r\n//       variant: 'info',\r\n//       text: 'New'\r\n//     }\r\n//   },\r\n//   {\r\n//     name: 'Dispatch',\r\n//     icon: 'icon-star',\r\n//     url: '/doIntake'\r\n//   },\r\n//   {\r\n//         name: 'Base',\r\n//         url: '/base',\r\n//         icon: 'icon-puzzle',\r\n//         children: [\r\n//           {\r\n//             name: 'Cards',\r\n//             url: '/base/cards',\r\n//             icon: 'icon-puzzle'\r\n//           },\r\n//           {\r\n//             name: 'Carousels',\r\n//             url: '/base/carousels',\r\n//             icon: 'icon-puzzle'\r\n//           },\r\n//           {\r\n//             name: 'Collapses',\r\n//             url: '/base/collapses',\r\n//             icon: 'icon-puzzle'\r\n//           },\r\n//           {\r\n//             name: 'Forms',\r\n//             url: '/base/forms',\r\n//             icon: 'icon-puzzle'\r\n//           },\r\n//           {\r\n//             name: 'Pagination',\r\n//             url: '/base/paginations',\r\n//             icon: 'icon-puzzle'\r\n//           },\r\n//           {\r\n//             name: 'Popovers',\r\n//             url: '/base/popovers',\r\n//             icon: 'icon-puzzle'\r\n//           },\r\n//           {\r\n//             name: 'Progress',\r\n//             url: '/base/progress',\r\n//             icon: 'icon-puzzle'\r\n//           },\r\n//           {\r\n//             name: 'Switches',\r\n//             url: '/base/switches',\r\n//             icon: 'icon-puzzle'\r\n//           },\r\n//           {\r\n//             name: 'Tables',\r\n//             url: '/base/tables',\r\n//             icon: 'icon-puzzle'\r\n//           },\r\n//           {\r\n//             name: 'Tabs',\r\n//             url: '/base/tabs',\r\n//             icon: 'icon-puzzle'\r\n//           },\r\n//           {\r\n//             name: 'Tooltips',\r\n//             url: '/base/tooltips',\r\n//             icon: 'icon-puzzle'\r\n//           }\r\n//         ]\r\n//       },\r\n// ];\r\n\r\ninterface NavAttributes {\r\n  [propName: string]: any;\r\n}\r\ninterface NavWrapper {\r\n  attributes: NavAttributes;\r\n  element: string;\r\n}\r\ninterface NavBadge {\r\n  text: string;\r\n  variant: string;\r\n}\r\ninterface NavLabel {\r\n  class?: string;\r\n  variant: string;\r\n}\r\n\r\nexport interface NavData {\r\n  name?: string;\r\n  url?: string;\r\n  icon?: string;\r\n  badge?: NavBadge;\r\n  title?: boolean;\r\n  children?: NavData[];\r\n  variant?: string;\r\n  attributes?: NavAttributes;\r\n  divider?: boolean;\r\n  class?: string;\r\n  label?: NavLabel;\r\n  wrapper?: NavWrapper;\r\n}\r\n\r\nexport const navItems: NavData[] = [\r\n  {\r\n    name: 'Dashboard',\r\n    url: '/dashboard',\r\n    icon: 'icon-speedometer',    \r\n  },\r\n  {\r\n    name: 'Order list',\r\n    url: '/orderList',\r\n    icon: 'icon-chart'\r\n  },\r\n  {\r\n    divider: true\r\n  },\r\n  // {\r\n  //   title: true,\r\n  //   name: 'Do Intake'\r\n  // },  \r\n  {\r\n    name: 'DO-Intake',\r\n    icon: 'icon-pencil',\r\n    url: '/doIntake',\r\n    // badge: {\r\n    //   variant: 'info',\r\n    //   text: 'New'    \r\n    // }\r\n  },\r\n  {\r\n    name: 'Scheduler',\r\n    icon: 'icon-puzzle',\r\n    url: '/doIntake',\r\n  },\r\n  // {\r\n  //   title: true,\r\n  //   name: 'Dispatch'\r\n  // },\r\n  {\r\n    name: 'Dispatch',\r\n    icon: 'icon-puzzle',\r\n    url: '/doIntake',\r\n  },  \r\n  {\r\n    divider: true\r\n  },\r\n  // {\r\n  //   title: true,\r\n  //   name: 'Review',\r\n  // },\r\n  {\r\n    name: 'Review',\r\n    url: '/doIntake',\r\n    icon: 'icon-star',   \r\n  },\r\n  {\r\n    divider: true\r\n  },\r\n  // {\r\n  //   title: true,\r\n  //   name: 'Billing',\r\n  // },\r\n  {\r\n    name: 'Invoice',\r\n    url: '/doIntake',\r\n    icon: 'icon-bell',   \r\n  }\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { AppSettings } from '../_constants/appsettings';\r\nimport { AccountingOptions } from '../_models/accountingOptions';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountingoptionsService {\r\n\r\nconstructor(private http:HttpClient) { }\r\n\r\npublic insertAccountingoptions(options:AccountingOptions[])\r\n{\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n\r\n // var AccOptionsChecked = Array<AccountingOptions>();\r\n  for (let option of options) {\r\n   option.createuserkey = token.userId;  \r\n }\r\n\r\n  return this.http.post<AccountingOptions[]>( AppSettings._BaseURL + 'AddAccountingOptions/',options);\r\n}  \r\n\r\npublic GetAccountingOptionsbyKey(orderdetailKey:string) {\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n  return this.http.get<AccountingOptions[]>(\r\n    AppSettings._BaseURL + \"GetAccountingOptionsbyKey/\"+ orderdetailKey\r\n  );\r\n}\r\n\r\npublic UpdateAccountingOptions(orderdetailKey:string) {\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n  return this.http.put<any>(\r\n    AppSettings._BaseURL + \"UpdateAccountingOptions/\"+ orderdetailKey,httpOptions\r\n  );\r\n}\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { of } from 'rxjs';\r\nimport { Address } from '../_models/address';\r\nimport { AppSettings } from './../_constants/appsettings';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddressService {\r\n  private baseUrl : string\r\nconstructor(private http:HttpClient) {\r\n this.baseUrl= AppSettings._BaseURL;//'http://localhost:51902/';\r\n //http://localhost:51902/api/address/GetAllByType/1\r\n }\r\n  \r\npublic getAddress(addressType:number)\r\n{   \r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n  \r\n  return this.http.get<Address[]>(this.baseUrl + 'GetAllByType/' + addressType);\r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { AppSettings } from '../_constants/appsettings';\r\nimport { Loginresult } from '../_models/loginresult';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {   \r\n    private currentUserSubject: BehaviorSubject<Loginresult>;\r\n    public currentUser: Observable<Loginresult>;\r\n    baseUrl:string; \r\n\r\n    constructor(private http: HttpClient) {\r\n        this.baseUrl=AppSettings._BaseURL;\r\n        this.currentUserSubject = new BehaviorSubject<Loginresult>(JSON.parse(localStorage.getItem('currentUser')));\r\n        this.currentUser = this.currentUserSubject.asObservable();\r\n     }\r\n\r\n    login(username: string, password: string,company:string) {\r\n        return this.http.post<any>(this.baseUrl+'Token' , { username:username, password:password,company:company })\r\n            .pipe(map(user => {\r\n                // login successful if there's a jwt token in the response\r\n                if (user && user.token) {\r\n                    // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                    localStorage.setItem('currentUser', JSON.stringify(user));\r\n                    this.currentUserSubject.next(user);\r\n                }                \r\n                return user;\r\n            }));\r\n    }\r\n\r\n    logout() {\r\n        // remove user from local storage to log user out\r\n        localStorage.removeItem('currentUser');\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { AppSettings } from '../_constants/appsettings';\r\nimport { Broker } from '../_models/broker';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BrokerService {\r\n\r\nconstructor(private http:HttpClient) { }\r\n\r\npublic GetBrokers() {\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n  return this.http.get<Broker[]>(AppSettings._BaseURL + 'GetBrokers');  \r\n}\r\n\r\nCreateBroker(broker: Broker) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n    return this.http.post<Broker>(\r\n      AppSettings._BaseURL + \"CreateBroker\",\r\n      broker,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  UpdateBroker(broker: Broker) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    return this.http.put<Broker>(\r\n      AppSettings._BaseURL + \"UpdateBroker\",\r\n      broker);\r\n  }\r\n  GetBrokerByID(id: string) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    return this.http.get<Broker>(\r\n      AppSettings._BaseURL + \"GetBrokerByID\" + \"/\" + id\r\n    );\r\n  }\r\n}\r\n\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { AppSettings } from '../_constants/appsettings';\r\nimport { Carrier } from '../common/master';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CarrierService {\r\n\r\nconstructor(private http:HttpClient) { }\r\n\r\npublic GetCarriers() {\r\n  return this.http.get<Carrier[]>(AppSettings._BaseURL + 'GetCarrier');  \r\n}\r\n\r\n  CreateCarrier(carrier: Carrier) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n    return this.http.post<Carrier >(\r\n      AppSettings._BaseURL + \"CreateCarrier\",\r\n      carrier,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  UpdateCarrier(carrier: Carrier ) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    return this.http.post<Carrier>(\r\n      AppSettings._BaseURL + \"UpdateCarrier\",\r\n      carrier      \r\n    );\r\n  }\r\n  GetCarrierByID(id: string) {\r\n    return this.http.get<Carrier>(\r\n      AppSettings._BaseURL + \"GetCarrierByID\" + \"/\" + id\r\n    );\r\n  }\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { AppSettings } from '../_constants/appsettings';\r\nimport { City } from '../_models/city';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CityService {\r\n\r\nconstructor(private http:HttpClient) { }\r\n\r\npublic GetCity() {\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n  \r\n  return this.http.get<City[]>(AppSettings._BaseURL + 'GetCity');  \r\n}\r\n\r\n\r\n\r\nAddCity(city: City) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n    return this.http.post<City >(\r\n      AppSettings._BaseURL + \"AddCity\",\r\n      city,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  UpdateCity(city: City ) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    return this.http.put<City>(\r\n      AppSettings._BaseURL + \"UpdateCity\",\r\n      city,\r\n      httpOptions\r\n    );\r\n  }\r\n \r\n\r\n  GetCityByID(id: string) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    return this.http.get<City>(\r\n      AppSettings._BaseURL + \"GetCityByID\" + \"/\" + id\r\n    );\r\n  }\r\n}\r\n\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { AppSettings } from \"../_constants/appsettings\";\r\nimport { Company } from '../_models/company';\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class CompanyService {\r\n  headers: any;\r\n  constructor(private http: HttpClient) {}\r\n\r\n  public getCompanies() {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    return this.http.get<Company[]>(AppSettings._BaseURL + \"GetCompanies\");\r\n  }\r\n\r\n  createCompany(company: Company) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n    return this.http.post<Company>(\r\n      AppSettings._BaseURL + \"CreateCompany\",\r\n      company,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  updateCompany(company: Company) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    return this.http.put<Company>(\r\n      AppSettings._BaseURL + \"UpdateCompany\",\r\n      company,\r\n      httpOptions\r\n    );\r\n  }\r\n  getCompanyById(id: string) {\r\n\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n    \r\n    return this.http.get<Company>(\r\n      AppSettings._BaseURL + \"GetCompanyByID\" + \"/\" + id\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { AppSettings } from \"../_constants/appsettings\";\r\nimport { Customer } from \"../_models/customer\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class CustomerService {\r\n  headers: any;\r\n  constructor(private http: HttpClient) {}\r\n\r\n  public getCustomers() {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    return this.http.get<Customer[]>(AppSettings._BaseURL + \"GetCustomers\");\r\n  }\r\n\r\n  createCustomer(customer: Customer) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n    return this.http.post<Customer>(\r\n      AppSettings._BaseURL + \"CreateCustomer\",\r\n      customer,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  updateCustomer(customer: Customer) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    return this.http.put<any>(\r\n      AppSettings._BaseURL + \"UpdateCustomer\",\r\n      customer      \r\n    );\r\n  }\r\n  getCustomerById(id: string) {\r\n\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n    \r\n    return this.http.get<Customer>(\r\n      AppSettings._BaseURL + \"GetCustomerByID\" + \"/\" + id\r\n    );\r\n  }\r\n}\r\n","\r\nimport {Observable} from 'rxjs/Rx';\r\nimport { AppSettings } from \"./../_constants/appsettings\";\r\nimport { DeliveryOrderHeader } from \"../_models/DeliveryOrderHeader\";\r\nimport { Order_details } from \"./../_models/order_details\";\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class DeliveryOrderService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  public saveDOHeader(OrderHeader: DeliveryOrderHeader) {\r\n    OrderHeader.orderdetails = []; \r\n    OrderHeader.CreatedBy = \"\";\r\n\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n    OrderHeader.CreatedBy = token.userId;\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    return this.http.post<any>(\r\n      AppSettings._BaseURL + \"DeliveryOrderHeader/\",\r\n      OrderHeader\r\n    );\r\n  }\r\n\r\n  public saveOrderDetails(Orderdetails: Order_details[]) {\r\n\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    for(var data in Orderdetails)\r\n    {\r\n      Orderdetails[data].CreatedBy = token.userId;\r\n    }\r\n    return this.http.post<Order_details[]>(\r\n      AppSettings._BaseURL + \"DeliveryOrderDetails/\",\r\n      Orderdetails\r\n    );\r\n  }\r\n\r\n  public updateDOHeader(OrderHeader: DeliveryOrderHeader) {\r\n    OrderHeader.orderdetails = [];\r\n    OrderHeader.CreatedBy = \"\";\r\n\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n    OrderHeader.CreatedBy = token.userId;\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    return this.http.put<any>(\r\n      AppSettings._BaseURL + \"UpdateOrder/\",\r\n      OrderHeader\r\n    );\r\n  }\r\n\r\n  public updateDeliveryOrderDetails(Orderdetails: Order_details[]) {\r\n\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    for(var data in Orderdetails)\r\n    {\r\n      Orderdetails[data].CreatedBy = token.userId;\r\n    }\r\n\r\n    return this.http.put<Order_details[]>(\r\n      AppSettings._BaseURL + \"UpdateDeliveryOrderDetails/\",\r\n      Orderdetails\r\n    );\r\n  }\r\n\r\n  /**\r\n   * name\r\n   */\r\n\r\n  public getOrderlist(): Observable<DeliveryOrderHeader[]> {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    return this.http.get<DeliveryOrderHeader[]>(\r\n      AppSettings._BaseURL + \"GetOrders\"\r\n    );\r\n  }\r\n\r\n  public GetbyKey(OrderKey: any) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    return this.http.get<DeliveryOrderHeader>(\r\n      AppSettings._BaseURL + \"GetbyKey/\" + OrderKey\r\n    );\r\n    //return this.http.get<DeliveryOrderHeader>( 'http://localhost:51902/GetbyKey?OrderKey='+ OrderKey);\r\n  }\r\n  public GetOrderDetailsbyKey(OrderKey: any) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    return this.http.get<Order_details[]>(\r\n      AppSettings._BaseURL + \"GetDeliveryOrderDetailByKey/\" + OrderKey\r\n    );\r\n  }\r\n\r\n  public GetOrderDetails() {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    return this.http.get<Order_details[]>(\r\n      AppSettings._BaseURL + \"GetDeliveryOrderDetails\"\r\n    );\r\n  }\r\n\r\n  public updateOrderDetails(Orderdetails: Order_details) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n    \r\n    return this.http.put<Order_details>(\r\n      AppSettings._BaseURL + \"UpdateScheduler/\",\r\n      Orderdetails\r\n    );\r\n  }\r\n \r\n\r\n  public UpdateDOdetailStatus(Orderdetails: Order_details) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n    \r\n    return this.http.put<Order_details>(\r\n      AppSettings._BaseURL + \"UpdateDOdetailStatus/\",\r\n      Orderdetails\r\n    );\r\n  }\r\n\r\n  public GetOrderHeaderandDetails() {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n    return this.http.get<DeliveryOrderHeader[]>(\r\n      AppSettings._BaseURL + \"GetAllDOHeaderandDetails\"\r\n    );\r\n  }\r\n\r\n///................................. Table Sorting / Pagination etc\r\n\r\npublic getorderstatusfordashboard(): Observable<number[]> {\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n\r\n  return this.http.get<number[]>(\r\n    AppSettings._BaseURL + \"GetStatusforDashboard\"\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { of } from 'rxjs';\r\nimport { AppSettings } from './../_constants/appsettings';\r\nimport { DeliveryOrderHeader } from '../_models/DeliveryOrderHeader';\r\nimport { Order_details } from './../_models/order_details';\r\nimport { now } from 'moment';\r\nimport { Tms_routes } from '../_models/tms_routes';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DispatchAssignmentService {\r\n constructor(private http:HttpClient) {}\r\n\r\n/**\r\n * name\r\n */\r\npublic GetOrderstoDispatchAssignment() {\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n  \r\n  return this.http.get<Order_details[]>(AppSettings._BaseURL + 'GetOrderstoDispatchAssignment');  \r\n}\r\n\r\npublic AddDispatchAssignmentData(routedetails:Tms_routes)\r\n{\r\n  // var route = new Tms_routes();\r\n  // route.OrderKey = OrderKey;\r\n  // route\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n\r\n  return this.http.post<Tms_routes>( AppSettings._BaseURL + 'AddDispatchAssignmentData/',routedetails);\r\n} \r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { of } from \"rxjs\";\r\nimport { AppSettings } from \"./../_constants/appsettings\";\r\nimport { DeliveryOrderHeader } from \"../_models/DeliveryOrderHeader\";\r\nimport { Order_details } from \"./../_models/order_details\";\r\nimport { now } from \"moment\";\r\nimport { Tms_routes } from \"../_models/tms_routes\";\r\nimport { Dispatch } from './../_models/dispatch';\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class DispatchDeliveryService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  /**\r\n   * name\r\n   */\r\n  public GetOrderstoDispatchDelivery() {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    return this.http.get<Order_details[]>(\r\n      AppSettings._BaseURL + \"GetOrderstoDispatchDelivery\"\r\n    );\r\n  }\r\n\r\n  public UpdateDispatchDeliveryData(routedetails: Dispatch[]) {\r\n\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n    \r\n    return this.http.put<Dispatch[]>(\r\n      AppSettings._BaseURL + \"UpdateDispatchDeliveryData/\",\r\n      routedetails\r\n    );\r\n  }\r\n\r\n  public GetDispatchItemsList() {\r\n\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n    \r\n    return this.http.get<any[]>(\r\n      AppSettings._BaseURL + \"GetDispatchItemsList\");\r\n  }\r\n\r\n  public GetDispatch_OrderandDetails(orderdetailkey:string) {\r\n\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n    \r\n    return this.http.get<any>(\r\n      AppSettings._BaseURL + \"GetDispatch_OrderandDetails/\"+orderdetailkey,httpOptions);\r\n  }\r\n\r\n  public GetDispatchItems(orderdetailkey:string ) {\r\n\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n    \r\n    return this.http.get<Dispatch[]>(\r\n      AppSettings._BaseURL + \"GetDispatchItems/\"+ orderdetailkey,httpOptions);\r\n  }\r\n\r\n  UpdateStatus(dispatch: Dispatch) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    return this.http.put<Dispatch>(\r\n      AppSettings._BaseURL + \"UpdateStatus\",\r\n      dispatch,\r\n      \r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { AppSettings } from '../_constants/appsettings';\r\nimport { Driver } from '../_models/driver';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DriverService {\r\n\r\nconstructor(private http:HttpClient) { }\r\n\r\npublic getDrivers() {\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n  \r\n  return this.http.get<Driver[]>(AppSettings._BaseURL + 'GetDrivers');  \r\n}\r\n\r\n  createDriver(driver: Driver) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n    return this.http.post<Driver>(\r\n      AppSettings._BaseURL + \"CreateDriver\",\r\n      driver,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  updateDriver(driver: Driver) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    return this.http.put<Driver>(\r\n      AppSettings._BaseURL + \"UpdateDriver\",\r\n      driver      \r\n    );\r\n  }\r\n  getDriverById(id: string) {\r\n\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n    return this.http.get<Driver>(\r\n      AppSettings._BaseURL + \"GetDriverByID\" + \"/\" + id\r\n    );\r\n  }\r\n}\r\n","import {\r\n  HttpClient,\r\n  HttpErrorResponse,\r\n  HttpHeaders,\r\n  HttpRequest,\r\n  HttpResponse\r\n} from \"@angular/common/http\";\r\nimport { Injectable, Output } from \"@angular/core\";\r\nimport { BehaviorSubject, Subscription } from \"rxjs\";\r\nimport { HttpEventType } from \"@angular/common/http\";\r\nimport * as _ from 'lodash';\r\nimport { AppSettings } from '../_constants/appsettings';\r\n\r\nexport enum FileQueueStatus {\r\n  Pending,\r\n  Success,\r\n  Error,\r\n  Progress\r\n}\r\n\r\nexport class FileQueueObject {\r\n  public file: any;\r\n  public status: FileQueueStatus = FileQueueStatus.Pending;\r\n  public progress: number = 0;\r\n  public request: Subscription = null;\r\n  public response: HttpResponse<any> | HttpErrorResponse = null;\r\n  public isNew:boolean=false;\r\n\r\n  constructor(file: any) {\r\n    this.file = file;\r\n  }\r\n\r\n  // actions\r\n  public upload = () => {\r\n    /* set in service */\r\n  };\r\n  public cancel = () => {\r\n    /* set in service */\r\n  };\r\n  public remove = () => {\r\n    /* set in service */\r\n  };\r\n\r\n  // statuses\r\n  public isPending = () => this.status === FileQueueStatus.Pending;\r\n  public isSuccess = () => this.status === FileQueueStatus.Success;\r\n  public isError = () => this.status === FileQueueStatus.Error;\r\n  public inProgress = () => this.status === FileQueueStatus.Progress;\r\n  public isUploadable = () =>\r\n    this.status === FileQueueStatus.Pending ||\r\n    this.status === FileQueueStatus.Error;\r\n}\r\n\r\n// tslint:disable-next-line:max-classes-per-file\r\n@Injectable()\r\nexport class FileUploaderService {\r\n  public url: string =  AppSettings._BaseURL +\"FileUpload\";\r\n \r\n  private _queue: BehaviorSubject<FileQueueObject[]>;\r\n  private _files: FileQueueObject[] = [];\r\n\r\n  constructor(private http: HttpClient) {\r\n    this._queue = <BehaviorSubject<FileQueueObject[]>>(\r\n      new BehaviorSubject(this._files)\r\n    );\r\n  }\r\n\r\n  // the queue\r\n  public get queue() {\r\n    return this._queue.asObservable();\r\n  }\r\n\r\n  // public events\r\n  public onCompleteItem(queueObj: FileQueueObject, response: any): any {\r\n    return { queueObj, response };\r\n  }\r\n\r\n  // public functions\r\n  public addToQueue(data: any,Orderno:string ,CreatedBy:string) {\r\n    // add file to the queue\r\n    _.each(data, (file: any) => this._addToQueue(file,Orderno,CreatedBy));\r\n  }\r\n\r\n  public addToQueue2(data: any,Orderno:string ,CreatedBy:string) {\r\n    // add file to the queue\r\n    _.each(data, (file: any) => this._addToQueue2(file,Orderno,CreatedBy));\r\n  }\r\n\r\n  public clearQueue() {\r\n    // clear the queue\r\n    this._files = [];\r\n    this._queue.next(this._files);\r\n  }\r\n\r\n  public uploadAll(Orderno:string ,CreatedBy:string ) {\r\n    // upload all except already successfull or in progress\r\n    // _.each(this._files, (queueObj: FileQueueObject) => {\r\n    //   if (queueObj.isUploadable()) {\r\n    //     this._upload(queueObj,Orderno,CreatedBy);\r\n    //   }\r\n    // });\r\n\r\n    _.each(this._files, (queueObj: FileQueueObject) => {\r\n      if (queueObj.isNew) {\r\n        this._upload(queueObj,Orderno,CreatedBy);\r\n      }\r\n    });\r\n  }\r\n\r\n  // private functions\r\n  private _addToQueue(file: any,Orderno:string,CreatedBy:string) {\r\n    const queueObj = new FileQueueObject(file);\r\n    queueObj.isNew= true;\r\n    // set the individual object events\r\n    queueObj.upload = () => this._upload(queueObj,Orderno,CreatedBy);\r\n    queueObj.remove = () => this._removeFromQueue(queueObj);\r\n    queueObj.cancel = () => this._cancel(queueObj);\r\n\r\n    // push to the queue\r\n    this._files.push(queueObj);\r\n    this._queue.next(this._files);\r\n  }\r\n\r\n  \r\n  // private functions\r\n  private _addToQueue2(file: any,Orderno:string,CreatedBy:string) {\r\n    const queueObj = new FileQueueObject(file);    \r\n    // set the individual object events\r\n    queueObj.upload = () => this._upload(queueObj,Orderno,CreatedBy);\r\n    queueObj.remove = () => this._removeFromQueue(queueObj);\r\n    queueObj.cancel = () => this._cancel(queueObj);\r\n\r\n    // push to the queue\r\n    this._files.push(queueObj);\r\n    this._queue.next(this._files);\r\n  }\r\n\r\n  private _removeFromQueue(queueObj: FileQueueObject) {\r\n    _.remove(this._files, queueObj);\r\n  }\r\n\r\n  private _upload(queueObj: FileQueueObject,Orderno:string,CreatedBy:string) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n    \r\n    // create form data for file\r\n    const form = new FormData();\r\n    form.append(\"fileUpload\", queueObj.file, queueObj.file.name);\r\n     form.append(\"DO\", Orderno);\r\n     form.append(\"CreatedBy\", token.userId);\r\n\r\n    // upload file and report progress\r\n    const req = new HttpRequest(\"POST\", this.url, form, {\r\n      reportProgress: true\r\n    });\r\n\r\n    // upload file and report progress\r\n    queueObj.request = this.http.request(req).subscribe(\r\n      (event: any) => {\r\n        if (event.type === HttpEventType.UploadProgress) {\r\n          this._uploadProgress(queueObj, event);\r\n        } else if (event instanceof HttpResponse) {\r\n          this._uploadComplete(queueObj, event);\r\n        }\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n        if (err.error instanceof Error) {\r\n          // A client-side or network error occurred. Handle it accordingly.\r\n          this._uploadFailed(queueObj, err);\r\n        } else {\r\n          // The backend returned an unsuccessful response code.\r\n          this._uploadFailed(queueObj, err);\r\n        }\r\n      }\r\n    );\r\n\r\n    return queueObj;\r\n  }\r\n\r\n  private _cancel(queueObj: FileQueueObject) {\r\n    // update the FileQueueObject as cancelled\r\n    queueObj.request.unsubscribe();\r\n    queueObj.progress = 0;\r\n    queueObj.status = FileQueueStatus.Pending;\r\n    this._queue.next(this._files);\r\n  }\r\n\r\n  private _uploadProgress(queueObj: FileQueueObject, event: any) {\r\n    // update the FileQueueObject with the current progress\r\n    const progress = Math.round((100 * event.loaded) / event.total);\r\n    queueObj.progress = progress;\r\n    queueObj.status = FileQueueStatus.Progress;\r\n    this._queue.next(this._files);\r\n  }\r\n\r\n  private _uploadComplete(\r\n    queueObj: FileQueueObject,\r\n    response: HttpResponse<any>\r\n  ) {\r\n    // update the FileQueueObject as completed\r\n    queueObj.progress = 100;\r\n    queueObj.status = FileQueueStatus.Success;\r\n    queueObj.response = response;\r\n    queueObj.isNew = false;\r\n    this._queue.next(this._files);\r\n    this.onCompleteItem(queueObj, response.body);\r\n  }\r\n\r\n  private _uploadFailed(\r\n    queueObj: FileQueueObject,\r\n    response: HttpErrorResponse\r\n  ) {\r\n    // update the FileQueueObject as errored\r\n    queueObj.progress = 0;\r\n    queueObj.status = FileQueueStatus.Error;\r\n    queueObj.response = response;\r\n    this._queue.next(this._files);\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport \"rxjs/Rx\";\r\nimport { Observable } from \"rxjs\";\r\nimport { HttpClient, HttpHeaders,HttpResponse } from \"@angular/common/http\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { tap } from 'rxjs/operators';\r\nimport { AppSettings } from '../_constants/appsettings';\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class FiledownloadService {\r\n  public url: string =  AppSettings._BaseURL + \"GetTestFile/?fileName=\";\r\n  constructor(private http: HttpClient) {}\r\n\r\n  DownloadFile(orderno:string,    filePath: string,    fileType: string //: Observable<any>\r\n  ) {\r\n    let fileExtension = fileType;\r\n    let filename = filePath;\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    // For pass blob in API \r\n    var filePath = this.url + filename +\"&orderno=\"+orderno;\r\n\r\n return this.http.get(filePath, { headers: new HttpHeaders({\r\n  'Authorization': \"bearer \" + token.token,\r\n  'Content-Type': 'application/json',}), responseType: 'blob'}).pipe (\r\ntap (\r\n    // Log the result or error\r\n    data => console.log('You received data'),\r\n    error => console.log(error)\r\n )\r\n);\r\n  }\r\n\r\n \r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  HttpClient,\r\n  HttpEvent,\r\n  HttpErrorResponse,\r\n  HttpEventType,\r\n  HttpHeaders,\r\n  HttpRequest, HttpResponse, HttpProgressEvent\r\n} from \"@angular/common/http\";\r\nimport { throwError } from \"rxjs\";\r\nimport { catchError, map } from \"rxjs/operators\";\r\nimport { AppSettings } from '../_constants/appsettings';\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class FileUploadService {\r\n  apiUrl = AppSettings._BaseURL+ \"FileUpload\";//\"http://localhost:51902/FileUpload\";\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  fileupload(formData) {\r\n    return this.http\r\n      .post(this.apiUrl, formData, {\r\n        headers: new HttpHeaders().set(\r\n          \"Authorization\",\r\n          \"Bearer \" + localStorage.getItem(\"token\")\r\n        ),\r\n        reportProgress: true,\r\n        observe: \"events\"\r\n      })\r\n      .pipe(\r\n        map(event => this.getEventMessage(event, formData)),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  public upload(data) {\r\n    return this.http\r\n      .post<any>(this.apiUrl, data, {\r\n        reportProgress: true,\r\n        observe: \"events\"\r\n      })\r\n      .pipe(\r\n        map(event => {\r\n          switch (event.type) {\r\n            case HttpEventType.UploadProgress:             \r\n              const percentDone = Math.round((100 * event.loaded) / event.total);\r\n              return { status: \"progress\", message: percentDone, filePath:'test' };\r\n            case HttpEventType.Response:\r\n              return { status: \"success\", message: 100, filePath:'test' }\r\n            default:\r\n              return `Unhandled event: ${event.type}`;\r\n          }\r\n        }), catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  //   this.http.post('http://localhost:51902/fileupload/', frmData).subscribe(\r\n  //   data => {\r\n  //     // SHOW A MESSAGE RECEIVED FROM THE WEB API.\r\n  //     this.sMsg = data as string;\r\n  //     console.log (this.sMsg);\r\n  //   },\r\n  //   (err: HttpErrorResponse) => {\r\n  //     console.log (err.message);    // Show error, if any.\r\n  //   }\r\n  // );\r\n\r\n  private getEventMessage(event: HttpEvent<any>, formData) {\r\n    switch (event.type) {\r\n      case HttpEventType.UploadProgress:\r\n        return this.fileUploadProgress(event);\r\n\r\n      case HttpEventType.Response:\r\n        return this.apiResponse(event);\r\n\r\n      default:\r\n        return `File \"${\r\n          formData.get(\"profile\").name\r\n        }\" surprising upload event: ${event.type}.`;\r\n    }\r\n  }\r\n\r\n  private fileUploadProgress(event: HttpProgressEvent) {\r\n    const percentDone = Math.round((100 * event.loaded) / event.total);\r\n    return { status: \"progress\", message: percentDone };\r\n  }\r\n\r\n  private apiResponse(event) {\r\n    return event.body;\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error(\"An error occurred:\", error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` + `body was: ${error.error}`\r\n      );\r\n    }\r\n    // return an observable with a user-facing error message\r\n    return throwError(\"Something bad happened. Please try again later.\");\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { DeliveryOrderHeader } from '../_models/DeliveryOrderHeader';\r\nimport { Observable } from 'rxjs';\r\nimport { AppSettings } from '../_constants/appsettings';\r\nimport { Invoicemodel } from '../_models/invoicemodel';\r\nimport { Invoice } from '../_models/invoice';\r\nimport { Invoicedetails } from '../_models/invoicedetails';\r\nimport { Rate } from '../_models/rate';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InvoiceService {\r\n  public token:any;\r\n   \r\nconstructor(private http: HttpClient) { }\r\n\r\npublic _httpOptions()\r\n{\r\n  this.token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" +  this.token.token\r\n    })\r\n  };\r\n}\r\n\r\npublic GetOrderstoGenerateInvoice():Observable<Invoicemodel[]> {\r\n  return this.http.get<Invoicemodel[]>(\r\n    AppSettings._BaseURL + \"GetOrderstoGenerateInvoice\"\r\n  );\r\n}\r\n\r\n\r\npublic getOrderDatabyKey( orderkey:string):Observable<any> {\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n\r\n  return this.http.get<any>(\r\n    AppSettings._BaseURL + \"getOrderDatabyKey/\"+ orderkey ,httpOptions\r\n  ); \r\n}\r\n\r\n\r\npublic getinvoicedetail( invoicekey:string):Observable<Invoicedetails[]> {\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n\r\n  return this.http.get<Invoicedetails[]>(\r\n    AppSettings._BaseURL + \"getinvoicedetail/\"+ invoicekey ,httpOptions\r\n  ); \r\n}\r\n\r\n\r\npublic getorderratesbykey( orderkey:string): Observable<Rate[]>{\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n\r\n  return this.http.get<Rate[]>(\r\n    AppSettings._BaseURL + \"getorderratesbykey/\"+ orderkey ,httpOptions\r\n  ); \r\n}\r\n\r\npublic getInvoiceHeaderList(): Observable<Invoice[]>{\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n\r\n  return this.http.get<Invoice[]>(\r\n    AppSettings._BaseURL + \"getInvoiceHeaderList\" ,httpOptions\r\n  ); \r\n}\r\n\r\npublic GetInvoiceMaxcount() {\r\n  return this.http.get<number>(AppSettings._BaseURL + 'GetInvoiceMaxcount');  \r\n}\r\n\r\n\r\npublic CreateInvoiceHeader(invoiceHeader: Invoice) {\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n  return this.http.post<any>(\r\n    AppSettings._BaseURL + \"CreateInvoiceHeader/\",\r\n    invoiceHeader\r\n  );\r\n}\r\n\r\npublic UpdateInvoiceHeader(invoiceHeader: Invoice) {\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n  return this.http.put<any>(AppSettings._BaseURL + \"UpdateInvoiceHeader/\",invoiceHeader,httpOptions);\r\n}\r\n\r\npublic CreateInvoiceDetail(invoiceDetails: Invoicedetails[]) {\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n  \r\n  return this.http.post<Invoicedetails[]>(\r\n    AppSettings._BaseURL + \"CreateInvoiceDetail/\",\r\n    invoiceDetails\r\n  );\r\n}\r\n\r\n\r\npublic UpdateInvoiceDetail(invoiceDetails: Invoicedetails[]) {\r\n\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };  \r\n  return this.http.put<Invoicedetails[]>(AppSettings._BaseURL + \"UpdateInvoiceDetail/\",invoiceDetails);\r\n}\r\n\r\npublic createPDF(invoicekey:string){\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n\r\n  return this.http.get<string>(\r\n    AppSettings._BaseURL + \"CreatePDFforInvoice/\" +invoicekey ); \r\n}\r\n\r\npublic downloadInvoice(orderno: string) {\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n  // return this.http.get<any>(\r\n  //   AppSettings._BaseURL + \"DownloadInvoice/\"+\r\n  //   orderno\r\n  // );\r\n\r\n  return this.http.get(AppSettings._BaseURL + \"DownloadInvoice/\"+\r\n  orderno, { headers: new HttpHeaders({\r\n    'Authorization': \"bearer \" + token.token,\r\n    'Content-Type': 'application/json',}), responseType: 'blob'}).pipe (\r\n  tap (\r\n      // Log the result or error\r\n      data => console.log('You received data'),\r\n      error => console.log(error)\r\n   )\r\n  );\r\n}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { AppSettings } from '../_constants/appsettings';\r\nimport { Item } from '../_models/item';\r\nimport { ItemType } from '../_models/ItemType';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ItemService {\r\n\r\nconstructor(private http:HttpClient) { }\r\n\r\npublic GetItems() {\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n  \r\n  return this.http.get<Item[]>(AppSettings._BaseURL + 'GetItems');  \r\n}\r\n\r\npublic GetItemTypes() {\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n  \r\n  return this.http.get<ItemType[]>(AppSettings._BaseURL + 'GetItemTypes');  \r\n}\r\n\r\nCreateItem(item: Item) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n    return this.http.post<Item >(\r\n      AppSettings._BaseURL + \"AddItem\",\r\n      item      \r\n    );\r\n  }\r\n\r\n  UpdateItem(item: Item ) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    return this.http.put<Item>(\r\n      AppSettings._BaseURL + \"UpdateItem\",\r\n      item      \r\n    );\r\n  }\r\n \r\n\r\n  GetItemByID(id: string) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    return this.http.get<Item>(\r\n      AppSettings._BaseURL + \"GetItemByKey\" + \"/\" + id\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { AppSettings } from '../_constants/appsettings';\r\nimport { Containersize, Priority, OrderType ,Source, HoldReason, Status, Carrier, LoadDischargePort} from '../common/master';\r\nimport { Item } from '../_models/item';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MasterService {\r\n\r\nconstructor(private http:HttpClient) { }\r\n\r\npublic getContainerSizeList() {\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n\r\n  return this.http.get<Containersize[]>(AppSettings._BaseURL + 'GetContainerSizes');  \r\n}\r\npublic getPriorityList() {\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n\r\n  return this.http.get<Priority[]>(AppSettings._BaseURL + 'GetallPriority');  \r\n}\r\npublic getOrderTypeList() {\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n\r\n  return this.http.get<OrderType[]>(AppSettings._BaseURL + 'GetOrderType');  \r\n}\r\npublic getStatusList() {\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n\r\n  return this.http.get<Status[]>(AppSettings._BaseURL + 'GetAllDOStatus');  \r\n}\r\npublic getHoldReasonList() {\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n\r\n  return this.http.get<HoldReason[]>(AppSettings._BaseURL + 'GetHoldReason');  \r\n}\r\npublic getSourceList() {\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n\r\n  return this.http.get<Source[]>(AppSettings._BaseURL + 'GetSource');  \r\n}\r\npublic getLoadDischargePortList(addressType:number) {\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n\r\n  return this.http.get<LoadDischargePort[]>(AppSettings._BaseURL + 'GetAllByType/' + addressType);  \r\n}\r\npublic getCarrierList() {\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n  \r\n  return this.http.get<Carrier[]>(AppSettings._BaseURL + 'GetCarrier');  \r\n}\r\n\r\npublic getMaxcount_Customer(custname:any) {\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n\r\n  return this.http.get<number>(AppSettings._BaseURL + 'GetCustomerMaxcount/'+ custname);  \r\n}\r\npublic getItemList(itemType:number) {\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n  return this.http.get<Item[]>(AppSettings._BaseURL + 'GetItemsbyType/'+ itemType);  \r\n}\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { AppSettings } from \"../_constants/appsettings\";\r\nimport { Item } from \"../_models/item\";\r\nimport { Ratesheet } from \"./../_models/ratesheet\";\r\nimport { Baserate } from \"./../_models/baserate\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class RateService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  //Item rate\r\n  public GetRates() {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    return this.http.get<Ratesheet[]>(AppSettings._BaseURL + \"GetRates\");\r\n  }\r\n\r\n  AddRate(rate: Ratesheet) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n    rate.userkey = token.userId;\r\n    rate.ratekey = null;\r\n    rate.createdate = null;\r\n    rate.lastupdatedate = null;\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    return this.http.post<Ratesheet>(\r\n      AppSettings._BaseURL + \"AddRate\",\r\n      rate      \r\n    );\r\n  }\r\n\r\n  UpdateRate(rate: Ratesheet[]) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    for (var item of rate) {\r\n      item.userkey = token.userId;\r\n    }\r\n    return this.http.put<Ratesheet[]>(\r\n      AppSettings._BaseURL + \"UpdateRate\",\r\n      rate      \r\n    );\r\n  }\r\n\r\n  GetRateByCustomer(customerkey: string) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n    var url = AppSettings._BaseURL + \"GetRateByCustomer/\" + customerkey;\r\n    return this.http.get<Ratesheet[]>(url);\r\n  }\r\n\r\n  //BASE RATE\r\n  public GetBaseRates() {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    return this.http.get<Baserate[]>(AppSettings._BaseURL + \"GetBaseRates\");\r\n  }\r\n\r\n  AddBaseRate(rate: Baserate[]) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    for (var data in rate) {\r\n      rate[data].userkey = token.userId;\r\n    }\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    return this.http.post<Baserate[]>(\r\n      AppSettings._BaseURL + \"AddBaseRate\",\r\n      rate      \r\n    );\r\n  }\r\n\r\n  UpdateBaseRate(rate: Baserate[]) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    for (var item of rate) {\r\n      item.userkey = token.userId;\r\n    }\r\n    return this.http.put<Baserate[]>(\r\n      AppSettings._BaseURL + \"UpdateBaseRate\",\r\n      rate      \r\n    );\r\n  }\r\n\r\n  GetBaseRateByCustomer(customerkey: string) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n    var url = AppSettings._BaseURL + \"GetBaseRateByCustomer/\" + customerkey;\r\n    return this.http.get<Baserate[]>(url);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { AppSettings } from '../_constants/appsettings';\r\nimport { Tms_routes } from '../_models/tms_routes';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoutesService {\r\n\r\nconstructor(private http:HttpClient) { }\r\n\r\npublic insertRoutesDetails(routedetails:Tms_routes)\r\n{\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n\r\n  return this.http.post<Tms_routes>( AppSettings._BaseURL + 'AddRoutes/',routedetails);\r\n}  \r\n\r\npublic updateRoutesDetails(routedetails:Tms_routes)\r\n{\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n  \r\n  return this.http.put<Tms_routes>( AppSettings._BaseURL + 'UpdateRoutes/',routedetails);\r\n}  \r\npublic updateDriver(routedetails:Tms_routes)\r\n{\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n  \r\n  return this.http.put<Tms_routes>( AppSettings._BaseURL + 'UpdateDriver/',routedetails);\r\n\r\n}\r\npublic updateDrivernotes(routedetails:Tms_routes)\r\n{\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n  \r\n  return this.http.put<Tms_routes>( AppSettings._BaseURL + 'UpdateDrivernotes/',routedetails);\r\n\r\n}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { of } from \"rxjs\";\r\nimport { AppSettings } from \"./../_constants/appsettings\";\r\nimport { DeliveryOrderHeader } from \"../_models/DeliveryOrderHeader\";\r\nimport { Order_details } from \"./../_models/order_details\";\r\nimport { now } from \"moment\";\r\nimport { Scheduler } from '../_models/scheduler';\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class SchedulerService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  /**\r\n   * name\r\n   */\r\n  public GetOrderstoSchedule() {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    return this.http.get<Order_details[]>(\r\n      AppSettings._BaseURL + \"GetOrderstoSchedule\"\r\n    );\r\n  }\r\n  \r\n  public GetOrderDetailsbykey(orderdetailkey:string) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    return this.http.get<Order_details>(\r\n      AppSettings._BaseURL + \"GetOrderDetailsbykey/\" +orderdetailkey\r\n    );\r\n  }\r\n\r\n  public GetScheduledContainers() {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    return this.http.get<Order_details[]>(\r\n      AppSettings._BaseURL + \"GetScheduledContainers\"\r\n    );\r\n  }\r\n\r\n  public GetScheduledContainer(orderdetailkey: any) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    // return this.http.get<any>(\r\n    //   AppSettings._BaseURL + \"GetScheduledContainer/\" + orderdetailkey,httpOptions\r\n    // );\r\n    var url = AppSettings._BaseURL + \"GetScheduledContainer/\" + orderdetailkey;\r\n    return this.http.get<any>(url);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { of } from 'rxjs';\r\nimport { User } from '../_models/User';\r\nimport { AppSettings } from '../_constants/appsettings';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserService {\r\n    //private baseUrl : string\r\n    \r\n    constructor(private http:HttpClient) { \r\n        //this.baseUrl= 'http://localhost:51902/Token/';\r\n    }\r\n    getAll() {   \r\n        var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n        const httpOptions = {\r\n          headers: new HttpHeaders({\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + token.token\r\n          })\r\n        }; \r\n        \r\n        return this.http.get<User[]>(AppSettings._BaseURL + 'GetAllUser');  \r\n    }\r\n    getById(username: string,passord:string,company:string) {\r\n\r\n        const params = new HttpParams()\r\n        .set('username', username)\r\n        .set('password', passord)\r\n        .set('companyName', company);          \r\n\r\n       // return this.http.get(this.baseUrl ,{params});\r\n    }    \r\n    getUserById(userkey: string) {   \r\n      var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n      const httpOptions = {\r\n        headers: new HttpHeaders({\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + token.token\r\n        })\r\n      };       \r\n      return this.http.get<User>(AppSettings._BaseURL + \"getUserById\"+ \"/\" + userkey);  \r\n  }\r\n\r\n  CreateUser(user: User) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n    return this.http.post<User>(\r\n      AppSettings._BaseURL + \"CreateUser\",\r\n      user,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  UpdateUser(user: User) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    return this.http.put<User>(\r\n      AppSettings._BaseURL + \"UpdateUser\",\r\n      user\r\n    );\r\n  }\r\n  \r\n}\r\n\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { User } from '../_models/User';\nimport { AppSettings } from '../_constants/appsettings';\nimport { UserPermissions } from '../_models/UserPermissions';\nimport { UserRole } from '../_models/UserRole';\n\n@Injectable({ providedIn: 'root' })\nexport class UserpermissionService {\n    //private baseUrl : string\n    \n    constructor(private http:HttpClient) { \n        //this.baseUrl= 'http://localhost:51902/Token/';\n    }  \n     \n    getpermissionsByuserkey(userkey: string) {   \n      var token = JSON.parse(localStorage.getItem(\"currentUser\"));\n\n      const httpOptions = {\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + token.token\n        })\n      };       \n      return this.http.get<UserPermissions[]>(AppSettings._BaseURL + \"getUserPermissionsByUserkey\"+ \"/\" + userkey);  \n  } \n\n  getMenus() {   \n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token.token\n      })\n    };       \n    return this.http.get<UserPermissions[]>(AppSettings._BaseURL + \"getMenus\");  \n} \n\n\npublic AddUserPermissions(UserPermission: UserPermissions[]) {\n\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\n\n  const httpOptions = {\n    headers: new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + token.token\n    })\n  };\n\n \n  return this.http.post<UserPermissions[]>(\n    AppSettings._BaseURL + \"AddUserPermissions/\",\n    UserPermission\n  );\n}\n\n\npublic UpdateUserPermissions(UserPermission: UserPermissions[]) {\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\n\n  const httpOptions = {\n    headers: new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + token.token\n    })\n  };\n\n \n  return this.http.put<UserPermissions[]>(\n    AppSettings._BaseURL + \"UpdateUserPermissions\",\n    UserPermission\n  );\n}\n\n\ngetRoles() {   \n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\n\n  const httpOptions = {\n    headers: new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + token.token\n    })\n  };       \n  return this.http.get<UserRole[]>(AppSettings._BaseURL + \"getRoles\");  \n} \n\n\ngetUserRoleByRolekey(rolekey: string) {   \n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\n\n  const httpOptions = {\n    headers: new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + token.token\n    })\n  };       \n  return this.http.get<UserRole>(AppSettings._BaseURL + \"getUserRoleByRolekey\"+ \"/\" + rolekey);  \n} \n\ngetUserRoleByUserkey(userkey: string) {   \n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\n\n  const httpOptions = {\n    headers: new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + token.token\n    })\n  };       \n  return this.http.get<UserRole>(AppSettings._BaseURL + \"getUserRoleByUserkey\"+ \"/\" + userkey);  \n} \npublic AddUserRole(userRole: UserRole) {\n\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\n\n  const httpOptions = {\n    headers: new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + token.token\n    })\n  };\n\n \n  return this.http.post<UserRole>(\n    AppSettings._BaseURL + \"AddUserRole/\",\n    userRole\n  );\n}\n\npublic UpdateUserRole(userRole: UserRole) {\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\n\n  const httpOptions = {\n    headers: new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + token.token\n    })\n  };\n\n \n  return this.http.put<UserRole>(\n    AppSettings._BaseURL + \"UpdateUserRole\",\n    userRole\n  );\n}\n\n}\n\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { AppSettings } from '../_constants/appsettings';\r\nimport { Driver } from '../_models/driver';\r\nimport { Vendor } from '../_models/vendor';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VendorService {\r\n\r\nconstructor(private http:HttpClient) { }\r\n\r\npublic getVendors() {\r\n  var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token.token\r\n    })\r\n  };\r\n\r\n  return this.http.get<Vendor[]>(AppSettings._BaseURL + 'GetVendors');  \r\n}\r\n\r\n  createVendor(vendor: Vendor) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n    return this.http.post<Vendor>(\r\n      AppSettings._BaseURL + \"CreateVendor\",\r\n      vendor,\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  updateVendor(vendor: Vendor) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n\r\n    return this.http.put<Vendor>(\r\n      AppSettings._BaseURL + \"UpdateVendor\",\r\n      vendor,\r\n      httpOptions\r\n    );\r\n  }\r\n  GetVendorByID(id: string) {\r\n    var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.token\r\n      })\r\n    };\r\n    \r\n    return this.http.get<Vendor>(\r\n      AppSettings._BaseURL + \"GetVendorByID\" + \"/\" + id\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router, NavigationEnd } from \"@angular/router\";\r\nimport { FiledownloadService } from \"./_services/filedownload.service\";\r\n@Component({\r\n  // tslint:disable-next-line\r\n  selector: \"body\",\r\n  template: \"<router-outlet></router-outlet>\",\r\n  providers: [FiledownloadService]\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(private router: Router) {\r\n    //Get the user data from users.json\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.router.events.subscribe(evt => {\r\n      if (!(evt instanceof NavigationEnd)) {\r\n        return;\r\n      }\r\n      window.scrollTo(0, 0);\r\n    });\r\n  }\r\n}\r\n","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport {\r\n  LocationStrategy,\r\n  HashLocationStrategy,\r\n  DatePipe\r\n} from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { PerfectScrollbarModule } from \"ngx-perfect-scrollbar\";\r\nimport { PERFECT_SCROLLBAR_CONFIG } from \"ngx-perfect-scrollbar\";\r\nimport { PerfectScrollbarConfigInterface } from \"ngx-perfect-scrollbar\";\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n  suppressScrollX: true\r\n};\r\n\r\nimport { AppComponent } from \"./app.component\";\r\n// Import containers\r\nimport { DefaultLayoutComponent } from \"./containers\";\r\nconst APP_CONTAINERS = [DefaultLayoutComponent];\r\nimport {\r\n  AppAsideModule,\r\n  AppBreadcrumbModule,\r\n  AppHeaderModule,\r\n  AppFooterModule,\r\n  AppSidebarModule\r\n} from \"@coreui/angular\";\r\n// Import routing module\r\nimport { AppRoutingModule } from \"./app.routing\";\r\n// Import 3rd party components\r\nimport { ChartsModule } from \"ng2-charts/ng2-charts\";\r\nimport { LoginComponent } from \"./views/login/login.component\";\r\nimport { DOIntakeComponent } from \"./views/dointake/dointake.component\";\r\nimport { AddressComponent } from \"./views/child/address/address.component\";\r\nimport { BillingratesComponent } from \"./views/child/billingrates/billingrates.component\";\r\nimport { UserService } from \"./_services/user.service\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { AppSettings } from \"./_constants/appsettings\";\r\nimport { CustomerComponent } from \"./views/child/_address/customer/customer.component\";\r\nimport { AddressService } from \"./_services/address.service\";\r\nimport { ContainerComponent } from \"./views/child/container/container.component\";\r\nimport { BrokerComponent } from \"./views/child/_broker/broker.component\";\r\nimport { OrderlistComponent } from \"./views/orderlist/orderlist.component\";\r\nimport { OrderinfoComponent } from \"./views/child/orderinfo/orderinfo.component\";\r\nimport { ContainersizeComponent } from \"./views/child/containersize/containersize.component\";\r\nimport { TabComponent } from \"./views/tab/tab.component\";\r\nimport { SchedulerComponent } from \"./views/scheduler/scheduler.component\";\r\nimport { NavigationComponent } from \"./views/navigation/navigation.component\";\r\nimport { ToastrModule } from \"ngx-toastr\";\r\nimport { FileuploadComponent } from \"./views/fileupload/fileupload.component\";\r\nimport { NgbModule, NgbAlertModule, NgbPaginationModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { CompanyComponent } from \"./views/child/_company/company/company.component\";\r\nimport { DispatchComponent } from \"./views/dispatch/dispatch.component\";\r\nimport { ListcustomerComponent } from \"./views/_customer/list-customer/listcustomer/listcustomer.component\";\r\nimport { AddcustomerComponent } from \"./views/_customer/add-customer/addcustomer/addcustomer.component\";\r\nimport { DispathdeliveryComponent } from \"./views/dispathdelivery/dispathdelivery.component\";\r\nimport { GrdFilterPipe } from \"./_models/grd-filter.pipe\";\r\nimport { SchedulerlistComponent } from \"./views/schedulerlist/schedulerlist.component\";\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from \"ng-pick-datetime\";\r\nimport { DispatchAssignmentComponent } from \"./views/dispatchAssignment/dispatchAssignment.component\";\r\nimport { ListcityComponent } from \"./views/_master/_city/listcity/listcity.component\";\r\nimport { BlockCopyPaste } from \"./common/block-copy-paste\";\r\nimport { ListdriverComponent } from \"./views/_master/_driver/listdriver/listdriver.component\";\r\nimport { VendorlistComponent } from \"./views/_master/_vendor/vendorlist/vendorlist/vendorlist.component\";\r\nimport { BrokerlistComponent } from \"./views/_master/_broker/brokerlist/brokerlist/brokerlist.component\";\r\nimport { CarrierlistComponent } from \"./views/_master/_carrier/carrierlist/carrierlist.component\";\r\nimport { InvoiceComponent } from \"./views/invoice/invoice/invoice.component\";\r\nimport { UserlistComponent } from \"./views/_master/_user/userlist/userlist.component\";\r\nimport { RatesheetlistComponent } from \"./views/_master/_ratesheet/ratesheetlist/ratesheetlist.component\";\r\nimport { ItemlistComponent } from \"./views/_master/_item/itemlist/itemlist.component\";\r\nimport { FileUploadComponent } from \"./views/file-upload/file-upload.component\";\r\nimport { FileUploaderService } from \"./_services/file-uploader.service\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { FiledownloadService } from \"./_services/filedownload.service\";\r\nimport { PdfviewcomponentComponent } from \"./views/pdfviewcomponent/pdfviewcomponent.component\";\r\nimport { PdfViewerModule } from \"ng2-pdf-viewer\";\r\nimport { PdfJsViewerModule } from \"ng2-pdfjs-viewer\";\r\nimport { ContainerStatusComponent } from \"./views/container-status/container-status.component\";\r\nimport { SchedulerUpdateComponent } from \"./views/scheduler-update/scheduler-update.component\";\r\nimport { FilterPipe } from \"./_filter/filter.pipe\";\r\nimport { BaseratelistComponent } from \"./views/_master/_baserate/baseratelist/baseratelist.component\";\r\nimport { TestComponent } from \"./views/test/test.component\";\r\nimport { GroupByPipe } from \"./_models/grdPipe\";\r\nimport { DispatchupdateComponent } from \"./views/dispatchupdate/dispatchupdate.component\";\r\nimport { CompanylistComponent } from \"./views/_master/_company/companylist/companylist.component\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { UserpermissionsComponent } from './views/_master/userpermissions/userpermissions.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgbModule,NgxPaginationModule,NgbAlertModule,NgbPaginationModule,\r\n    PdfViewerModule,\r\n    PdfJsViewerModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    AppAsideModule,\r\n    AppBreadcrumbModule.forRoot(),\r\n    AppFooterModule,\r\n    AppHeaderModule,\r\n    AppSidebarModule,\r\n    PerfectScrollbarModule,\r\n    ToastrModule.forRoot(),\r\n    ChartsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    OwlDateTimeModule,\r\n    OwlNativeDateTimeModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatPaginatorModule    ,\r\n      ],\r\n  declarations: [\r\n    FilterPipe,\r\n    AppComponent,\r\n    ...APP_CONTAINERS,\r\n    LoginComponent,\r\n    UserlistComponent,\r\n    DOIntakeComponent,\r\n    AddressComponent,\r\n    CustomerComponent,\r\n    RatesheetlistComponent,\r\n    BaseratelistComponent,\r\n    ItemlistComponent,\r\n    AddcustomerComponent,\r\n    ListcustomerComponent,\r\n    ListcityComponent,\r\n    CompanyComponent,\r\n    CompanylistComponent,\r\n    BrokerComponent,\r\n    VendorlistComponent,\r\n    BrokerlistComponent,\r\n    CarrierlistComponent,\r\n    UserpermissionsComponent,\r\n    ListdriverComponent,\r\n    BillingratesComponent,\r\n    ContainerComponent,\r\n    OrderlistComponent,\r\n    OrderinfoComponent,\r\n    ContainersizeComponent,\r\n    InvoiceComponent,\r\n    TabComponent,\r\n    ContainerStatusComponent,\r\n    SchedulerlistComponent,\r\n    NavigationComponent,\r\n    FileuploadComponent,\r\n    DispatchComponent,\r\n    DispatchAssignmentComponent,\r\n    DispathdeliveryComponent,\r\n    DispatchupdateComponent,\r\n    FileUploadComponent,\r\n    PdfviewcomponentComponent,\r\n    SchedulerUpdateComponent,\r\n    GrdFilterPipe,\r\n    GroupByPipe,\r\n    BlockCopyPaste,\r\n    TestComponent,\r\n    \r\n  ],\r\n  providers: [\r\n    UserService,\r\n    AddressService,\r\n    DatePipe,\r\n    FileUploaderService,\r\n    FiledownloadService\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [\r\n    TabComponent,\r\n    SchedulerUpdateComponent,\r\n    DispatchupdateComponent\r\n  ]\r\n})\r\nexport class AppModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\n// Import Containers\r\nimport { DefaultLayoutComponent } from \"./containers\";\r\nimport { LoginComponent } from \"./views/login/login.component\";\r\nimport { DOIntakeComponent } from \"./views/dointake/dointake.component\";\r\nimport { OrderlistComponent } from \"./views/orderlist/orderlist.component\";\r\nimport { OrderinfoComponent } from \"./views/child/orderinfo/orderinfo.component\";\r\nimport { TabComponent } from \"./views/tab/tab.component\";\r\nimport { ContainerComponent } from \"./views/child/container/container.component\";\r\nimport { ListcustomerComponent } from \"./views/_customer/list-customer/listcustomer/listcustomer.component\";\r\nimport { SchedulerComponent } from \"./views/scheduler/scheduler.component\";\r\nimport { SchedulerlistComponent } from \"./views/schedulerlist/schedulerlist.component\";\r\nimport { DispatchComponent } from \"./views/dispatch/dispatch.component\";\r\nimport { DispathdeliveryComponent } from \"./views/dispathdelivery/dispathdelivery.component\";\r\nimport { DispatchAssignmentComponent } from \"./views/dispatchAssignment/dispatchAssignment.component\";\r\nimport { ListcityComponent } from \"./views/_master/_city/listcity/listcity.component\";\r\nimport { ListdriverComponent } from \"./views/_master/_driver/listdriver/listdriver.component\";\r\nimport { VendorlistComponent } from \"./views/_master/_vendor/vendorlist/vendorlist/vendorlist.component\";\r\nimport { BrokerlistComponent } from \"./views/_master/_broker/brokerlist/brokerlist/brokerlist.component\";\r\nimport { CarrierlistComponent } from \"./views/_master/_carrier/carrierlist/carrierlist.component\";\r\nimport { InvoiceComponent } from \"./views/invoice/invoice/invoice.component\";\r\nimport { UserlistComponent } from \"./views/_master/_user/userlist/userlist.component\";\r\nimport { RatesheetlistComponent } from \"./views/_master/_ratesheet/ratesheetlist/ratesheetlist.component\";\r\nimport { ItemlistComponent } from \"./views/_master/_item/itemlist/itemlist.component\";\r\nimport { ContainerStatusComponent } from './views/container-status/container-status.component';\r\nimport { BaseratelistComponent } from './views/_master/_baserate/baseratelist/baseratelist.component';\r\nimport { TestComponent } from './views/test/test.component';\r\nimport { CompanylistComponent } from './views/_master/_company/companylist/companylist.component';\r\nimport { UserpermissionsComponent } from './views/_master/userpermissions/userpermissions.component';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    redirectTo: \"login\",\r\n    pathMatch: \"full\"\r\n  },\r\n  {\r\n    path: \"\",\r\n    component: DefaultLayoutComponent,\r\n    data: {\r\n      title: \"Home\"\r\n    },\r\n    children: [\r\n      {\r\n        path: \"dashboard\",\r\n        // loadChildren: './views/dashboard/dashboard.module#DashboardModule',\r\n        component: OrderlistComponent\r\n      },\r\n      {\r\n        path: \"doIntake\",\r\n        component: DOIntakeComponent\r\n      },\r\n      {\r\n        path: \"doIntake/:order\",\r\n        component: DOIntakeComponent\r\n      },\r\n      {\r\n        path: \"orderList\",\r\n        component: OrderlistComponent\r\n      },\r\n      {\r\n        path: \"orderinfo/:order\",\r\n        component: OrderinfoComponent\r\n      },      \r\n      {\r\n        path: \"Containers\",\r\n        component: ContainerStatusComponent\r\n      },\r\n      {\r\n        path: \"Scheduler\",\r\n        component: SchedulerlistComponent\r\n      },\r\n      {\r\n        path: \"DispatchAssignment\",\r\n        component: DispatchAssignmentComponent\r\n      },\r\n      {\r\n        path: \"DispatchDelivery\",\r\n        component: DispathdeliveryComponent\r\n      },\r\n      {\r\n        path: \"Customers\",\r\n        component: ListcustomerComponent\r\n      },\r\n      {\r\n        path: \"Company\",\r\n        component: CompanylistComponent\r\n      },\r\n      \r\n      {\r\n        path: \"RateSheet\",\r\n        component: RatesheetlistComponent\r\n      },      \r\n      {\r\n        path: \"Items\",\r\n        component: ItemlistComponent\r\n      },\r\n      {\r\n        path: \"Drivers\",\r\n        component: ListdriverComponent\r\n      },\r\n            {\r\n        path: \"Vendors\",\r\n        component: VendorlistComponent\r\n      },      \r\n      {\r\n        path: \"Brokers\",\r\n        component: BrokerlistComponent\r\n      },\r\n      {\r\n        path: \"Users\",\r\n        component: UserlistComponent\r\n      },      \r\n      {\r\n        path: \"UserPermissions\",\r\n        component: UserpermissionsComponent\r\n      },\r\n      {\r\n        path: \"Carriers\",\r\n        component: CarrierlistComponent\r\n      },      \r\n      {\r\n        path: \"City\",\r\n        component: ListcityComponent\r\n      },\r\n      {\r\n        path: \"GetOrderstoGenerateInvoice\",\r\n        component: InvoiceComponent\r\n      },      \r\n      \r\n      {\r\n        path: \"BaseRate\",\r\n        component: BaseratelistComponent\r\n      },\r\n      \r\n      {\r\n        path: \"TestComponent\",\r\n        component: TestComponent\r\n      },\r\n      { path: \"tab/:order\", component: TabComponent },\r\n      { path: \"tab\", component: TabComponent }\r\n      // {\r\n      //   path: 'login',\r\n      //   loadChildren: './views/login/login.module#LoginModule'\r\n      // }\r\n    ]\r\n  },\r\n  { path: \"login\", component: LoginComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","\r\nimport { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appBlockCopyPaste]'\r\n})\r\nexport class BlockCopyPaste {\r\n  constructor() { }\r\n\r\n  @HostListener('paste', ['$event']) blockPaste(e: KeyboardEvent) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  @HostListener('copy', ['$event']) blockCopy(e: KeyboardEvent) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  @HostListener('cut', ['$event']) blockCut(e: KeyboardEvent) {\r\n    e.preventDefault();\r\n  }\r\n\r\n /* @HostListener('keydown', ['$event']) triggerEsc(e: KeyboardEvent) {\r\n    alert(e);\r\n    if(e.keyCode===27){\r\n      console.log(\"local esc\");\r\n      alert(\"esc\")\r\n    }\r\n  }*/\r\n\r\n   @HostListener('keydown', ['$event'])\r\n    public onKeydownHandler(e: KeyboardEvent): void {\r\n    if(e.keyCode===13){\r\n      alert(\"enter\")\r\n    }\r\n    }\r\n}","import { Address } from \"../_models/address\";\r\n\r\nexport class Containersize {\r\n  // name: string;\r\n  // value: number;\r\n  containersize: number;\r\n  description: string;\r\n}\r\nexport class Priority {\r\n  name: string;\r\n  value: number;\r\n}\r\n\r\nexport class OrderType {\r\n  name: string;\r\n  value: number;\r\n}\r\n\r\nexport class Status {\r\n  description: string;\r\n  status: number;\r\n}\r\n\r\nexport class AddressType {\r\n  name: string;\r\n  value: number;\r\n}\r\n\r\nexport class HoldReason {\r\n  name: string;\r\n  value: number;\r\n}\r\n\r\nexport class Source {\r\n  name: string;\r\n  value: number;\r\n}\r\n\r\nexport class Carrier {\r\n  CarrierKey: string;\r\n  CarrierId: string;\r\n  CarrierName: string;\r\n  isstreamline: boolean;\r\n  Address: Address;\r\n  ScacCode: string;\r\n  LicensePlate: string;\r\n  LicensePlateExpiryDate: string;\r\n  Status: number;\r\n  StatusDate: string;\r\n}\r\n\r\nexport class LoadDischargePort {\r\n  name: string;\r\n  value: number;\r\n}\r\nexport class DischargePort {\r\n  name: string;\r\n  value: number;\r\n}\r\n","import { Component, Input } from \"@angular/core\";\r\nimport { navItems } from \"./../../_nav\";\r\nimport { Login } from \"../../_models/login\";\r\nimport { AuthenticationService } from \"../../_services/authentication.service\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { Loginresult } from \"../../_models/loginresult\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { UserService } from \"../../_services/user.service\";\r\nimport { DeliveryOrderService } from \"../../_services/deliveryOrder.service\";\r\nimport { UserpermissionService } from \"../../_services/userpermission.service\";\r\nimport { UserPermissions } from \"../../_models/UserPermissions\";\r\n\r\n@Component({\r\n  selector: \"app-dashboard\",\r\n  templateUrl: \"./default-layout.component.html\"\r\n})\r\nexport class DefaultLayoutComponent {\r\n  public navItems = navItems;\r\n  public sidebarMinimized = true;\r\n  private changes: MutationObserver;\r\n  public element: HTMLElement = document.body;\r\n  public menuColor: string;\r\n\r\n  public lblDashboardColor: string;\r\n  public lblOrdersColor: string;\r\n  public lblSchedulersColor: string;\r\n  public lblDispatchColor: string;\r\n  public lblInvoiceColor: string;\r\n  public lblAdminColor: string;\r\n\r\n  public UserPermissions: UserPermissions[];\r\n  public currentUser: Loginresult;\r\n\r\n  private Show_Dashboard: boolean = false;\r\n  private Show_Orders: boolean = false;\r\n  private Show_Scheduler: boolean = false;\r\n  private Show_Dispatch: boolean = false;\r\n  private Show_Invoice: boolean = false;\r\n  private Show_Admin: boolean = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService,\r\n    private userService: UserService,\r\n    private userpermission: UserpermissionService\r\n  ) {\r\n    this.changes = new MutationObserver(mutations => {\r\n      this.sidebarMinimized = document.body.classList.contains(\r\n        \"sidebar-minimized\"\r\n      );\r\n    });\r\n\r\n    this.changes.observe(<Element>this.element, {\r\n      attributes: true\r\n    });\r\n\r\n    this.authenticationService.currentUser.subscribe(\r\n      x => (this.currentUser = x)\r\n    );\r\n\r\n   \r\n   // }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getPermissionsByUser(this.currentUser.userId);\r\n\r\n    console.log(\"current UserId:\",this.currentUser.userId);\r\n    console.log(\"User Permissions:\",this.UserPermissions);\r\n    //if (this.UserPermissions.length > 0) {\r\n    //  for (var i = 0; i < this.UserPermissions.length; i++) {\r\n       \r\n        //DASHBOARD menu show or hide\r\n        // if (this.UserPermissions[i].Modulename.toUpperCase() == \"DASHBOARD\") {\r\n        //   if (this.UserPermissions[i].fView == 1) {\r\n        //     this.Show_Dashboard = true;\r\n        //   } else {\r\n        //     this.Show_Dashboard = false;\r\n        //   }\r\n        // }\r\n\r\n        //ORDERS menu show or hide\r\n        // if (this.UserPermissions[i].Modulename.toUpperCase() == \"DOINTAKE\") {\r\n        //   if (this.UserPermissions[i].fView == 1) {\r\n        //     this.Show_Orders = true;\r\n        //   } else {\r\n        //     this.Show_Orders = false;\r\n        //   }\r\n        // }\r\n\r\n        //SHEDULER menu show or hide\r\n        // if (this.UserPermissions[i].Modulename.toUpperCase() == \"SCHEDULING\") {\r\n        //   if (this.UserPermissions[i].fView == 1) {\r\n        //     this.Show_Scheduler = true;\r\n        //   } else {\r\n        //     this.Show_Scheduler = false;\r\n        //   }\r\n        // }\r\n         //DISPATCH menu show or hide\r\n        //  if (this.UserPermissions[i].Modulename.toUpperCase() == \"DISPATCHING\") {\r\n        //   if (this.UserPermissions[i].fView == 1) {\r\n        //     this.Show_Dispatch = true;\r\n        //   } else {\r\n        //     this.Show_Dispatch = false;\r\n        //   }\r\n        // }\r\n\r\n         //ADMIN menu show or hide\r\n        //  if (this.UserPermissions[i].Modulename.toUpperCase() == \"INVOICE\") {\r\n        //   if (this.UserPermissions[i].fView == 1) {\r\n        //     this.Show_Invoice = true;\r\n        //   } else {\r\n        //     this.Show_Invoice = false;\r\n        //   }\r\n        // }\r\n\r\n         //ADMIN menu show or hide\r\n        //  if (this.UserPermissions[i].Modulename.toUpperCase() == \"ADMIN\") {\r\n        //   if (this.UserPermissions[i].fView == 1) {\r\n        //     this.Show_Admin = true;\r\n        //   } else {\r\n        //     this.Show_Admin = false;\r\n        //   }\r\n        // }\r\n     // }\r\n\r\n  }\r\n\r\n  getPermissionsByUser(UserKey: string) {\r\n    this.userpermission.getpermissionsByuserkey(UserKey).subscribe(\r\n      data => {\r\n        this.UserPermissions = data;\r\n        console.log(\"User Permissions:\",this.UserPermissions);\r\n        //if (this.UserPermissions.length > 0) {\r\n        for (var i = 0; i < this.UserPermissions.length; i++) {\r\n       \r\n        //DASHBOARD menu show or hide\r\n        if (this.UserPermissions[i].Modulename.toUpperCase() == \"DASHBOARD\") {\r\n          if (this.UserPermissions[i].fView == 1) {\r\n            this.Show_Dashboard = true;\r\n          } else {\r\n            this.Show_Dashboard = false;\r\n          }\r\n        }\r\n\r\n        //ORDERS menu show or hide\r\n        if (this.UserPermissions[i].Modulename.toUpperCase() == \"DOINTAKE\") {\r\n          if (this.UserPermissions[i].fView == 1) {\r\n            this.Show_Orders = true;\r\n          } else {\r\n            this.Show_Orders = false;\r\n          }\r\n        }\r\n\r\n        //SHEDULER menu show or hide\r\n        if (this.UserPermissions[i].Modulename.toUpperCase() == \"SCHEDULING\") {\r\n          if (this.UserPermissions[i].fView == 1) {\r\n            this.Show_Scheduler = true;\r\n          } else {\r\n            this.Show_Scheduler = false;\r\n          }\r\n        }\r\n         //DISPATCH menu show or hide\r\n         if (this.UserPermissions[i].Modulename.toUpperCase() == \"DISPATCHING\") {\r\n          if (this.UserPermissions[i].fView == 1) {\r\n            this.Show_Dispatch = true;\r\n          } else {\r\n            this.Show_Dispatch = false;\r\n          }\r\n        }\r\n\r\n         //ADMIN menu show or hide\r\n         if (this.UserPermissions[i].Modulename.toUpperCase() == \"INVOICE\") {\r\n          if (this.UserPermissions[i].fView == 1) {\r\n            this.Show_Invoice = true;\r\n          } else {\r\n            this.Show_Invoice = false;\r\n          }\r\n        }\r\n\r\n         //ADMIN menu show or hide\r\n         if (this.UserPermissions[i].Modulename.toUpperCase() == \"ADMIN\") {\r\n          if (this.UserPermissions[i].fView == 1) {\r\n            this.Show_Admin = true;\r\n          } else {\r\n            this.Show_Admin = false;\r\n          }\r\n        }\r\n     }\r\n      },\r\n      error => {\r\n        //this.showError(\"Error in getting user \", \"Error\");\r\n      }\r\n    );\r\n  }\r\n\r\n  changeColor(menu: string) {\r\n    this.refreshColor();\r\n    if (menu == \"Dashboard\") {\r\n      this.lblDashboardColor = \"cornflowerblue\";\r\n    } else if (menu == \"Orders\") {\r\n      this.lblOrdersColor = \"cornflowerblue\";\r\n    } else if (menu == \"Scheduler\") {\r\n      this.lblSchedulersColor = \"cornflowerblue\";\r\n    } else if (menu == \"Dispatch\") {\r\n      this.lblDispatchColor = \"cornflowerblue\";\r\n    } else if (menu == \"Invoice\") {\r\n      this.lblInvoiceColor = \"cornflowerblue\";\r\n    } else if (menu == \"Admin\") {\r\n      this.lblAdminColor = \"cornflowerblue\";\r\n    }\r\n  }\r\n  refreshColor() {\r\n    this.lblDashboardColor = this.lblOrdersColor = this.lblSchedulersColor = this.lblDispatchColor = this.lblInvoiceColor = this.lblAdminColor =\r\n      \"white\";\r\n  }\r\n\r\n  logout() {\r\n    this.authenticationService.logout();\r\n    this.router.navigate([\"/login\"]);\r\n  }\r\n}\r\n","export * from './default-layout.component';\r\n","export * from './default-layout';\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL19jdXN0b21lci9hZGQtY3VzdG9tZXIvYWRkY3VzdG9tZXIvYWRkY3VzdG9tZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { CustomerService } from '../../../../_services/customer.service';\r\n\r\n@Component({\r\n  selector: 'app-addcustomer',\r\n  templateUrl: './addcustomer.component.html',\r\n  styleUrls: ['./addcustomer.component.scss']\r\n})\r\n\r\nexport class AddcustomerComponent implements OnInit {  \r\n  \r\n  empformlabel: string = 'Add Customer';  \r\n  empformbtn: string = 'Save';  \r\n  constructor(private formBuilder: FormBuilder, private router: Router, private Service: CustomerService) {  \r\n  }  \r\n  \r\n  addForm: FormGroup;  \r\n  btnvisibility: boolean = true;  \r\n  ngOnInit() {  \r\n   \r\n    }  \r\n\r\n    numberOnly(event): boolean {\r\n      const charCode = (event.which) ? event.which : event.keyCode;\r\n      if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n        return false;\r\n      }\r\n      return true;\r\n  \r\n    }\r\n   \r\n}  ","export default \"table {\\n  width: 100%;\\n}\\n\\n.scrollbar {\\n  float: left;\\n  height: 300px;\\n  overflow-y: scroll;\\n}\\n\\n#style-10::-webkit-scrollbar-track {\\n  box-shadow: 1px 1px 0px rgba(0, 0, 0, 0.1);\\n  background-color: white;\\n  border-radius: 10px;\\n}\\n\\n#style-10::-webkit-scrollbar {\\n  width: 15px;\\n  background-color: #1a1818;\\n}\\n\\n#style-10::-webkit-scrollbar-thumb {\\n  background-color: darkslategrey;\\n  background-image: -webkit-linear-gradient(90deg, rgba(255, 255, 255, 0.2) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.2) 50%, rgba(255, 255, 255, 0.2) 75%, transparent 75%, transparent);\\n}\\n\\np {\\n  font-family: Lato;\\n}\\n\\n.pointer {\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvX2N1c3RvbWVyL2xpc3QtY3VzdG9tZXIvbGlzdGN1c3RvbWVyL0M6XFxVc2Vyc1xcQXJ1blxcRG9jdW1lbnRzXFxHaXRIdWJcXFRNU19BZG1pblxcVE1TX1dlYi9zcmNcXGFwcFxcdmlld3NcXF9jdXN0b21lclxcbGlzdC1jdXN0b21lclxcbGlzdGN1c3RvbWVyXFxsaXN0Y3VzdG9tZXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3ZpZXdzL19jdXN0b21lci9saXN0LWN1c3RvbWVyL2xpc3RjdXN0b21lci9saXN0Y3VzdG9tZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUE7RUFBTyxXQUFBO0FDRlA7O0FESUE7RUFDRSxXQUFBO0VBQ0EsYUFBQTtFQUVBLGtCQUFBO0FDRkY7O0FES0E7RUFHRSwwQ0FBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7QUNGRjs7QURLQTtFQUNFLFdBQUE7RUFDQSx5QkFBQTtBQ0ZGOztBREtBO0VBRUUsK0JBQUE7RUFDRCwwTUFBQTtBQ0hEOztBRGVBO0VBQ0UsaUJBQUE7QUNaRjs7QURjQTtFQUNJLGVBQUE7QUNYSiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL19jdXN0b21lci9saXN0LWN1c3RvbWVyL2xpc3RjdXN0b21lci9saXN0Y3VzdG9tZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyAuc2Nyb2xsYmFyIHtcclxuLy8gICAgIG1heC1oZWlnaHQ6IDYwMHB4O1xyXG4vLyAgICAgb3ZlcmZsb3cteTogc2Nyb2xsO1xyXG4vLyAgIH1cclxudGFibGUge3dpZHRoOiAxMDAlO31cclxuXHJcbi5zY3JvbGxiYXIgeyAgXHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbiAgaGVpZ2h0OiAzMDBweDsgIFxyXG4gIC8vYmFja2dyb3VuZDogYmxhY2s7XHJcbiAgb3ZlcmZsb3cteTogc2Nyb2xsOyBcclxufVxyXG5cclxuI3N0eWxlLTEwOjotd2Via2l0LXNjcm9sbGJhci10cmFjayB7IFxyXG4gIC13ZWJraXQtYm94LXNoYWRvdzogMXB4IDFweCAwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gIC1tb3otYm94LXNoYWRvdzogMXB4IDFweCAwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gIGJveC1zaGFkb3c6IDFweCAxcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG59XHJcblxyXG4jc3R5bGUtMTA6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcclxuICB3aWR0aDogMTVweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjYsIDI0LCAyNCk7XHJcbn1cclxuXHJcbiNzdHlsZS0xMDo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWJcclxue1xyXG4gIGJhY2tncm91bmQtY29sb3I6ZGFya3NsYXRlZ3JleTtcdCAgXHJcblx0YmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQoOTBkZWcsXHJcblx0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmdiYSgyNTUsIDI1NSwgMjU1LCAuMikgMjUlLFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0ICB0cmFuc3BhcmVudCAyNSUsXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQgIHRyYW5zcGFyZW50IDUwJSxcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdCAgcmdiYSgyNTUsIDI1NSwgMjU1LCAuMikgNTAlLFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0ICByZ2JhKDI1NSwgMjU1LCAyNTUsIC4yKSA3NSUsXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQgIHRyYW5zcGFyZW50IDc1JSxcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdCAgdHJhbnNwYXJlbnQpXHJcbn1cclxuXHJcbiAgXHJcblxyXG5wIHtcclxuICBmb250LWZhbWlseTogTGF0bztcclxufVxyXG4ucG9pbnRlcntcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufSIsInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5zY3JvbGxiYXIge1xuICBmbG9hdDogbGVmdDtcbiAgaGVpZ2h0OiAzMDBweDtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xufVxuXG4jc3R5bGUtMTA6Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNrIHtcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiAxcHggMXB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIC1tb3otYm94LXNoYWRvdzogMXB4IDFweCAwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICBib3gtc2hhZG93OiAxcHggMXB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xufVxuXG4jc3R5bGUtMTA6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgd2lkdGg6IDE1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxYTE4MTg7XG59XG5cbiNzdHlsZS0xMDo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrc2xhdGVncmV5O1xuICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCg5MGRlZywgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpIDI1JSwgdHJhbnNwYXJlbnQgMjUlLCB0cmFuc3BhcmVudCA1MCUsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKSA1MCUsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKSA3NSUsIHRyYW5zcGFyZW50IDc1JSwgdHJhbnNwYXJlbnQpO1xufVxuXG5wIHtcbiAgZm9udC1mYW1pbHk6IExhdG87XG59XG5cbi5wb2ludGVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufSJdfQ== */\"","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  Directive,\r\n  Input,\r\n  EventEmitter,\r\n  Output,\r\n  QueryList,\r\n  ViewChildren\r\n} from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { CustomerService } from \"../../../../_services/customer.service\";\r\nimport { Customer } from \"../../../../_models/customer\";\r\nimport { FormBuilder, Validators, FormGroup } from \"@angular/forms\";\r\nimport { Address } from \"../../../../_models/address\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { FileUploadService } from \"./../../../../_services/fileupload.service\";\r\nimport { CityService } from \"../../../../_services/city.service\";\r\nimport { City } from \"../../../../_models/city\";\r\n\r\n\r\n@Component({\r\n  selector: \"app-listcustomer\",\r\n  templateUrl: \"./listcustomer.component.html\",\r\n  styleUrls: [\"./listcustomer.component.scss\"]\r\n})\r\nexport class ListcustomerComponent implements OnInit {\r\n  \r\n  isDesc: boolean = false;\r\n  column: string = \"CustId\";\r\n\r\n  customers: Customer[];\r\n  citylist: City[];\r\n  customerUpdate = null;\r\n  show_addupdatecustomer: boolean = false;\r\n  show_customerInfo: boolean = false;\r\n  submitted: boolean = false;\r\n  customer: any;\r\n  address: Address;\r\n  selectedCustomer: Customer;\r\n  isCancelbtnhidden: boolean = true;\r\n  isResetbtnhidden: boolean = true;\r\n  show_btnCreateCustomer: boolean = true;\r\n  isACHrequired: boolean = false;\r\n\r\n  searchText: string;\r\n  p: number = 1;\r\n  count: number;\r\n  emailPattern: string = \"[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,3}$\";\r\n  websitePattern: string =\r\n    \"(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/?\";\r\n\r\n  constructor(\r\n    private formbulider: FormBuilder,\r\n    private Service: CustomerService,\r\n    private router: Router,\r\n    private cityService: CityService,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.customer = new Customer();\r\n    this.customer.Address = new Address();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadAllCustomers();\r\n    this.loadAllCity();\r\n   \r\n  }\r\n\r\n  loadAllCustomers() {\r\n    this.Service.getCustomers().subscribe(\r\n      data => (\r\n        (this.customers = data),\r\n        (this.count = this.customers.length)       \r\n      ),\r\n      error => console.log(error),\r\n      () => console.log(\"Get customers complete\")\r\n    );\r\n    //this.dataSource.data = this.customers;\r\n    console.log(\"Get customers complete\", this.customers);\r\n  }\r\n  loadAllCity() {\r\n    this.cityService.GetCity().subscribe(\r\n      data => (this.citylist = data),\r\n      error => console.log(error),\r\n      () => console.log(\"Get citylist\", this.citylist)\r\n    );\r\n  }\r\n  onFormSubmit() {\r\n    if (this.customerUpdate == null) {\r\n      this.createCustomer();\r\n    } else {\r\n      this.updateCustomer();\r\n    }\r\n  }\r\n\r\n  loadCustomerToEdit(customerkey: string) {\r\n    this.Service.getCustomerById(customerkey).subscribe(customer_edit => {\r\n      this.customerUpdate = customer_edit.CustomerKey;\r\n      this.selectedCustomer = customer_edit;\r\n      this.customer = customer_edit;\r\n    });\r\n    this.show_customerInfo = true;\r\n    this.show_addupdatecustomer = false;\r\n    this.show_btnCreateCustomer = true;\r\n\r\n    this.isCancelbtnhidden = true;\r\n    this.isResetbtnhidden = false;\r\n  }\r\n  edit_click() {\r\n    this.show_customerInfo = false;\r\n    this.show_addupdatecustomer = true;\r\n    this.show_btnCreateCustomer = false;\r\n  }\r\n  createCustomer() {\r\n    console.log(\"createCustomer\", this.customer.Address);\r\n    console.log(\"createCustomer\", this.customer.address);\r\n    this.customer.achrequired = this.isACHrequired;\r\n\r\n    this.Service.createCustomer(this.customer).subscribe(\r\n      () => {\r\n        this.show_addupdatecustomer = false;\r\n        this.showSuccess(\"Customer created successfully\", \"Create\");\r\n        this.loadAllCustomers();\r\n        this.show_btnCreateCustomer = true;\r\n        this.customerUpdate = null;\r\n      },\r\n      error => {\r\n        this.showError(\"Error in Customer creation: \" + error, \"Error\");\r\n      }\r\n    );\r\n  }\r\n  updateCustomer() {\r\n    this.customer.achrequired = this.isACHrequired;\r\n\r\n    this.customer.CustomerKey = this.customerUpdate;\r\n    this.Service.updateCustomer(this.customer).subscribe(\r\n      () => {\r\n        this.show_addupdatecustomer = false;\r\n        this.showSuccess(\"Customer updated successfully\", \"Edit\");\r\n        this.loadAllCustomers();\r\n        this.show_btnCreateCustomer = true;\r\n        this.customerUpdate = null;\r\n      },\r\n      error => {\r\n        this.showError(\"Error in Customer update: \" + error, \"Error\");\r\n      }\r\n    );\r\n  }\r\n\r\n  clear() {\r\n    this.customer = null;\r\n    this.customer = new Customer();\r\n    this.customer.Address = new Address();\r\n\r\n    this.show_addupdatecustomer = true;\r\n    this.show_customerInfo = false;\r\n    this.isResetbtnhidden = true;\r\n    this.show_btnCreateCustomer = false;\r\n    this.customerUpdate = null;\r\n    this.customer.paymentterms = -1;\r\n  }\r\n\r\n  cancel() {\r\n    this.isResetbtnhidden = false;\r\n    if (this.selectedCustomer != null) {\r\n      this.show_customerInfo = true;\r\n    }\r\n    this.show_addupdatecustomer = false;\r\n    this.show_btnCreateCustomer = true;\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  // get f() {\r\n  //   return this.customerForm.controls;\r\n  // }\r\n\r\n  numberOnly(event): boolean {\r\n    const charCode = event.which ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  showSuccess(message: string, title: string) {\r\n    this.toastr.success(message, title, { timeOut: 4000, closeButton: true });\r\n  }\r\n\r\n  showError(message: string, title: string) {\r\n    this.toastr.error(message, \"Oops!\", { timeOut: 4000, closeButton: true });\r\n  }\r\n\r\n  showWarning(message: string, title: string) {\r\n    this.toastr.warning(message, title);\r\n  }\r\n\r\n  showInfo(message: string, title: string) {\r\n    this.toastr.info(message, title, { timeOut: 4000, closeButton: true });\r\n  }\r\n  clear_search() {\r\n    this.searchText = undefined;\r\n  }\r\n  Checkbox_Change(value: any) {\r\n    this.isACHrequired = value.target.checked;\r\n    //alert(this.isACHrequired);\r\n  }\r\n\r\n  sort(column) {\r\n    this.isDesc = !this.isDesc; //change the direction\r\n    this.column = column;\r\n    let direction = this.isDesc ? 1 : -1;    \r\n\r\n    this.customers = [...this.customers].sort((n1, n2) => {\r\n      if ((this.column == \"CustId\")) {\r\n        if (n1.CustId > n2.CustId) {\r\n          return 1* direction;\r\n        } else if (n1.CustId < n2.CustId) {\r\n          return -1* direction;\r\n        } else return 0;\r\n      }\r\n\r\n      if ((this.column == \"CustName\")) {\r\n        if (n1.CustName > n2.CustName) {\r\n          return 1* direction;\r\n        } else if (n1.CustName < n2.CustName) {\r\n          return -1* direction;\r\n        } else return 0;\r\n      }\r\n      if ((this.column == \"CreditLimit\")) {\r\n        if (n1.CreditLimit > n2.CreditLimit) {\r\n          return 1* direction;\r\n        } else if (n1.CreditLimit < n2.CreditLimit) {\r\n          return -1* direction;\r\n        } else return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default \".pointer {\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvX21hc3Rlci9fYmFzZXJhdGUvYmFzZXJhdGVsaXN0L0M6XFxVc2Vyc1xcQXJ1blxcRG9jdW1lbnRzXFxHaXRIdWJcXFRNU19BZG1pblxcVE1TX1dlYi9zcmNcXGFwcFxcdmlld3NcXF9tYXN0ZXJcXF9iYXNlcmF0ZVxcYmFzZXJhdGVsaXN0XFxiYXNlcmF0ZWxpc3QuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3ZpZXdzL19tYXN0ZXIvX2Jhc2VyYXRlL2Jhc2VyYXRlbGlzdC9iYXNlcmF0ZWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxlQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9fbWFzdGVyL19iYXNlcmF0ZS9iYXNlcmF0ZWxpc3QvYmFzZXJhdGVsaXN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBvaW50ZXJ7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn0iLCIucG9pbnRlciB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn0iXX0= */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { Customer } from \"../../../../_models/customer\";\r\nimport { CustomerService } from \"../../../../_services/customer.service\";\r\nimport { Address } from \"../../../../_models/address\";\r\nimport { City } from \"./../../../../_models/city\";\r\nimport { CityService } from \"../../../../_services/city.service\";\r\nimport { Baserate } from \"./../../../../_models/baserate\";\r\nimport { RateService } from \"../../../../_services/rate.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-baseratelist\",\r\n  templateUrl: \"./baseratelist.component.html\",\r\n  styleUrls: [\"./baseratelist.component.scss\"]\r\n})\r\nexport class BaseratelistComponent implements OnInit {\r\n  customers: Customer[];\r\n  Citylist: City[];\r\n  customersFilter: Customer[];\r\n  searchText: string;\r\n  selectedCustomer: Customer;\r\n  CustomerName: string = \"No customers selected\";\r\n  CustomerKey: string;\r\n\r\n  BaseRateKey: string = \"\";\r\n  citykey: string;\r\n  cityname: string;\r\n  BaseRate: string;\r\n  UnitPrice: number;\r\n  rowindex: number;\r\n  ratedetails: Baserate[];\r\n  btnLabel: string = \"Add\";\r\n  Flag: string;\r\n  ratesbycustomer: any[];\r\n\r\n  btnEditShow: boolean = false;\r\n  btnAddShow: boolean = false;\r\n  showAddUpdate: boolean = false;\r\n  \r\n  private newAttribute: any = {}; \r\n  public newItem: any = {};\r\n\r\n  isDesc: boolean = false;\r\n  column: string = \"CustId\";\r\n  p: number = 1;\r\n  count: number;\r\n\r\n  constructor(\r\n    private customerService: CustomerService,\r\n    private cityService: CityService,\r\n    private rateService: RateService,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.ratedetails = new Array<Baserate>();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadCustomers();\r\n    this.loadCity();\r\n  }\r\n  loadCustomers() {\r\n    this.customerService.getCustomers().subscribe(\r\n      data => (this.customers = this.customersFilter = data),\r\n      error => console.log(error),\r\n      () => console.log(\"Get customers complete\", this.customers)\r\n    );\r\n  }\r\n  loadCity() {\r\n    this.cityService.GetCity().subscribe(\r\n      data => (this.Citylist = data),\r\n      error => console.log(error),\r\n      () => console.log(\"Get citylist\", this.Citylist)\r\n    );\r\n  }\r\n\r\n  onSearchChange(searchValue: string): void {\r\n    console.log(searchValue);\r\n    if (!searchValue) {\r\n      this.customersFilter = this.customers;\r\n    }\r\n    this.customersFilter = this.customers.filter(\r\n      Customer =>\r\n        Customer.CustName.toLowerCase().indexOf(searchValue.toLowerCase()) !==\r\n        -1\r\n    );\r\n  }\r\n\r\n  onSelect(CustomerSelected: Customer): void {\r\n    this.selectedCustomer = CustomerSelected;\r\n    this.CustomerName = this.selectedCustomer.CustName;\r\n    this.CustomerKey = this.selectedCustomer.CustomerKey;\r\n    this.getRates();\r\n    this.showAddUpdate = false;\r\n  }\r\n\r\n  getRates()\r\n  {\r\n    this.rateService.GetBaseRateByCustomer(this.CustomerKey).subscribe(\r\n      data => {this.ratesbycustomer = data;\r\n        if (data.length > 0) {\r\n          (this.btnEditShow = true), (this.btnAddShow = false);\r\n        } else {\r\n          (this.btnEditShow = false), (this.btnAddShow = true);\r\n        }},\r\n      error => console.log(error),\r\n      () => console.log()\r\n    );   \r\n  }\r\n\r\n  addupdateRate() {\r\n    if (this.citykey == '') {\r\n      return;\r\n    }\r\n\r\n    if (this.UnitPrice == 0 ) {\r\n      return;\r\n    }\r\n\r\n    if(this.BaseRateKey == '')\r\n    {\r\n    for (var item of this.ratedetails) {\r\n      if (item.citykey ==this.citykey) {\r\n        this.showInfo(\"Add Rate\", \"Rate already fixed.\");\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n    if (this.BaseRateKey != '' ) {\r\n      this.ratedetails[this.rowindex].unitprice = this.UnitPrice;\r\n      this.btnLabel=\"Add\";\r\n    } else {\r\n      var baseratedetails: any = {};\r\n      baseratedetails.Flag = \"NEW\";\r\n      baseratedetails.unitprice = this.UnitPrice;\r\n      baseratedetails.cityname=   this.cityname;\r\n      baseratedetails.citykey = this.citykey;\r\n      baseratedetails.customerkey = this.CustomerKey;\r\n\r\n      this.ratedetails.push(baseratedetails);\r\n    }\r\n    this.rowRefresh();\r\n    return;\r\n  }\r\n  rowRefresh() {\r\n    this.UnitPrice = 0;\r\n    this.Flag = ''\r\n    this.citykey = '';\r\n    this.BaseRateKey ='';\r\n  }\r\n\r\n  editBaseRate(details: Baserate, index: number) {\r\n    this.rowindex = index;\r\n    this.UnitPrice = details.unitprice;\r\n    this.citykey = details.citykey;\r\n    this.CustomerKey = details.customerkey;\r\n    this.BaseRateKey = details.baseratekey;\r\n    this.btnLabel = \"Update\";\r\n    this.Flag = details.Flag;\r\n  }\r\n\r\n  Submit() {\r\n    if (this.ratedetails.length == 0) {\r\n      this.showWarning(\"No data to save!\", \"Base Rate\");\r\n      return;\r\n    }\r\n\r\n    this.rateService.AddBaseRate(this.ratedetails).subscribe(\r\n      data => {\r\n        this.showSuccess(\"Rate applied successfully!\", \"Customer Base Rate\");\r\n        this.getRates();\r\n        this.clear();\r\n      },\r\n      error => console.log(error),\r\n      () => console.log()\r\n    );\r\n  }\r\n\r\n  clear() {   \r\n    this.ratedetails = null;\r\n    this.showAddUpdate = false;\r\n    this.rowindex = -1;\r\n    this.UnitPrice = 0;\r\n    this.Flag = \"\";\r\n    this.citykey = '';\r\n  }\r\n\r\n  showSuccess(message: string, title: string) {\r\n    this.toastr.success(message, title, { timeOut: 2000, closeButton: true });\r\n  }\r\n  showError(message: string, title: string) {\r\n    this.toastr.error(message, \"Oops!\", { timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  showWarning(message: string, title: string) {\r\n    this.toastr.warning(message, title);\r\n  }\r\n\r\n  showInfo(message: string, title: string) {\r\n    this.toastr.info(message, title, { timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  sort(column) {\r\n    this.isDesc = !this.isDesc; //change the direction\r\n    this.column = column;\r\n    let direction = this.isDesc ? 1 : -1;\r\n\r\n    this.ratesbycustomer = [...this.ratesbycustomer].sort((n1, n2) => {\r\n      if (this.column == \"cityname\") {\r\n        if (n1.cityname > n2.cityname) {\r\n          return 1 * direction;\r\n        } else if (n1.cityname < n2.cityname) {\r\n          return -1 * direction;\r\n        } else return 0;\r\n      }\r\n\r\n      if (this.column == \"unitprice\") {\r\n        if (n1.unitprice > n2.unitprice) {\r\n          return 1 * direction;\r\n        } else if (n1.unitprice < n2.unitprice) {\r\n          return -1 * direction;\r\n        } else return 0;\r\n      }\r\n    });\r\n  }\r\n  edit() {\r\n    this.showAddUpdate = true;\r\n  }\r\n  newRate() {\r\n    this.showAddUpdate = true;\r\n  }\r\n\r\n  drpCityChanged(val: any) {   \r\n    this.cityname = this.Citylist.find(x => x.citykey == val).cityname;   \r\n  }\r\n\r\n  getRatesforEdit()\r\n  {\r\n    this.rateService.GetBaseRateByCustomer(this.CustomerKey).subscribe(\r\n      data => {\r\n        this.ratedetails =data;this.showAddUpdate = true;\r\n        console.log(\"this.ratedetails\",this.ratedetails);\r\n      },\r\n      error => console.log(error),\r\n      () => console.log()\r\n    );\r\n  }\r\n}\r\n","export default \".pointer {\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvX21hc3Rlci9fYnJva2VyL2Jyb2tlcmxpc3QvYnJva2VybGlzdC9DOlxcVXNlcnNcXEFydW5cXERvY3VtZW50c1xcR2l0SHViXFxUTVNfQWRtaW5cXFRNU19XZWIvc3JjXFxhcHBcXHZpZXdzXFxfbWFzdGVyXFxfYnJva2VyXFxicm9rZXJsaXN0XFxicm9rZXJsaXN0XFxicm9rZXJsaXN0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy9fbWFzdGVyL19icm9rZXIvYnJva2VybGlzdC9icm9rZXJsaXN0L2Jyb2tlcmxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxlQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9fbWFzdGVyL19icm9rZXIvYnJva2VybGlzdC9icm9rZXJsaXN0L2Jyb2tlcmxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucG9pbnRlcntcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG4iLCIucG9pbnRlciB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn0iXX0= */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { FormBuilder, Validators, FormGroup } from \"@angular/forms\";\r\nimport { Address } from \"../../../../../_models/address\";\r\nimport { Broker } from \"../../../../../_models/broker\";\r\nimport { BrokerService } from \"../../../../../_services/broker.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { THIS_EXPR } from \"@angular/compiler/src/output/output_ast\";\r\n@Component({\r\n  selector: 'app-brokerlist',\r\n  templateUrl: './brokerlist.component.html',\r\n  styleUrls: ['./brokerlist.component.scss']\r\n})\r\nexport class BrokerlistComponent implements OnInit {\r\n  brokers: Broker[];\r\n  public dataModel: Broker;\r\n  address: Address;\r\n\r\n  dataSaved = false;\r\n  updateBroker = null;\r\n  message = null;\r\n  show_addupdateBroker: boolean = false;\r\n  isCancelbtnhidden: boolean = true;\r\n  isResetbtnhidden: boolean = true;\r\n  show_btnCreateBroker : boolean = true; \r\n  show_BrokerInfo: boolean = false;\r\n  searchText: string;\r\n\r\n  \r\nisDesc: boolean = false;\r\ncolumn: string = \"CustId\";\r\np: number = 1;\r\ncount: number;\r\n\r\n\r\n  constructor(\r\n    private formbulider: FormBuilder,\r\n    private Service: BrokerService,\r\n    private router: Router,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.dataModel = null;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataModel = new Broker();\r\n    this.dataModel.Address = new Address();\r\n    this.loadAllBrokers();\r\n  }\r\n  onOutputAddressChange(addr: Address) {\r\n    this.dataModel.Address=addr;\r\n   }\r\n \r\n  loadAllBrokers() {\r\n    this.Service.GetBrokers().subscribe(\r\n      data => (this.brokers = data),\r\n      error => console.log(error),\r\n      () => console.log(\"Get brokers\", this.brokers)\r\n    );\r\n  }\r\n  onFormSubmit() {\r\n    this.dataSaved = false;\r\n    this.CreateBroker();\r\n  }\r\n  EditBroker(brokerKey: string) {\r\n    this.Service.GetBrokerByID(brokerKey).subscribe(_updateVendor => {\r\n      this.dataModel = _updateVendor;\r\n      this.updateBroker = brokerKey;\r\n      this.message = null;\r\n      this.dataSaved = false;\r\n    });\r\n  \r\n    this.isCancelbtnhidden = true;\r\n    this.isResetbtnhidden = false;\r\n\r\n    this.show_btnCreateBroker = true;\r\n    this.show_addupdateBroker = false;\r\n    this.show_BrokerInfo = true;\r\n  }\r\n\r\n  CreateBroker() {\r\n    if (this.updateBroker == null) {\r\n      this.Service.CreateBroker(this.dataModel).subscribe(() => {\r\n        this.dataSaved = true;       \r\n        this.showSuccess(\"saved successfully\", \"Create\");\r\n        this.loadAllBrokers();\r\n        this.updateBroker = null;\r\n        this.show_addupdateBroker = false;\r\n        this.show_btnCreateBroker = true;\r\n      },\r\n      error => {\r\n        this.showError(\"Error in Creation\", \"Error\");\r\n      });\r\n    } else {\r\n      this.dataModel.BrokerKey = this.updateBroker;\r\n      this.Service.UpdateBroker(this.dataModel).subscribe(() => {\r\n        this.dataSaved = true;       \r\n        this.showSuccess(\"Updated successfully\", \"Update\");\r\n        this.loadAllBrokers();\r\n        this.updateBroker = null;\r\n        this.show_addupdateBroker = false;\r\n        this.show_btnCreateBroker = true;\r\n      },error => {\r\n        this.showError(\"Error in Update\", \"Error\");\r\n      });\r\n    }\r\n  }\r\n\r\n  resetForm() {\r\n    this.message = null;\r\n    this.dataSaved = false;\r\n\r\n    this.dataModel = null;\r\n    this.dataModel = new Broker();\r\n    this.dataModel.Address = new Address();\r\n    this.updateBroker = null;\r\n  }\r\n\r\n  toggle() {\r\n    this.show_btnCreateBroker = false;\r\n    this.show_addupdateBroker = true;\r\n    this.show_BrokerInfo = false;\r\n  \r\n    this.isResetbtnhidden = true;\r\n    this.resetForm();\r\n  }\r\n\r\n  cancel() {\r\n    this.isResetbtnhidden = false;\r\n    this.show_addupdateBroker = false;\r\n    this.show_btnCreateBroker = true;\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  numberOnly(event): boolean {\r\n    const charCode = event.which ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  bindFormControls() {    \r\n    this.show_btnCreateBroker = false;\r\n    this.show_addupdateBroker = true;\r\n    this.show_BrokerInfo = false;\r\n  }\r\n  showSuccess(message: string, title: string) {\r\n    this.toastr.success(message, title, { timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  showError(message: string, title: string) {\r\n    this.toastr.error(message, \"Oops!\", { timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  showWarning(message: string, title: string) {\r\n    this.toastr.warning(message, title, { timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  showInfo(message: string, title: string) {\r\n    this.toastr.info(message, title, { timeOut: 2000, closeButton: true });\r\n  }\r\n  clear_search()\r\n  {\r\n    this.searchText = undefined;\r\n  }\r\n\r\n  \r\n  sort(column) {\r\n    this.isDesc = !this.isDesc; //change the direction\r\n    this.column = column;\r\n    let direction = this.isDesc ? 1 : -1;    \r\n\r\n    this.brokers = [...this.brokers].sort((n1, n2) => {\r\n      if ((this.column == \"BrokerId\")) {\r\n        if (n1.BrokerId > n2.BrokerId) {\r\n          return 1* direction;\r\n        } else if (n1.BrokerId < n2.BrokerId) {\r\n          return -1* direction;\r\n        } else return 0;\r\n      }\r\n\r\n      if ((this.column == \"BrokerName\")) {\r\n        if (n1.BrokerName > n2.BrokerName) {\r\n          return 1* direction;\r\n        } else if (n1.BrokerName < n2.BrokerName) {\r\n          return -1* direction;\r\n        } else return 0;\r\n      }\r\n      \r\n    });\r\n  }\r\n}\r\n\r\n","export default \".pointer {\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvX21hc3Rlci9fY2Fycmllci9jYXJyaWVybGlzdC9DOlxcVXNlcnNcXEFydW5cXERvY3VtZW50c1xcR2l0SHViXFxUTVNfQWRtaW5cXFRNU19XZWIvc3JjXFxhcHBcXHZpZXdzXFxfbWFzdGVyXFxfY2FycmllclxcY2Fycmllcmxpc3RcXGNhcnJpZXJsaXN0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy9fbWFzdGVyL19jYXJyaWVyL2NhcnJpZXJsaXN0L2NhcnJpZXJsaXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvdmlld3MvX21hc3Rlci9fY2Fycmllci9jYXJyaWVybGlzdC9jYXJyaWVybGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wb2ludGVye1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbiIsIi5wb2ludGVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufSJdfQ== */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { FormBuilder, Validators, FormGroup } from \"@angular/forms\";\r\nimport { Address } from \"../../../../_models/address\";\r\nimport { Carrier } from \"../../../../common/master\";\r\nimport { CarrierService } from \"../../../../_services/carrier.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n@Component({\r\n  selector: \"app-carrierlist\",\r\n  templateUrl: \"./carrierlist.component.html\",\r\n  styleUrls: [\"./carrierlist.component.scss\"]\r\n})\r\nexport class CarrierlistComponent implements OnInit {\r\n  carriers: Carrier[];\r\n  public dataModel: Carrier;\r\n  address: Address;\r\n\r\n  dataSaved = false;\r\n  updateCarrier = null;\r\n  message = null;\r\n  show_addupdateCarrier: boolean = false;\r\n  isCancelbtnhidden: boolean = true;\r\n  isResetbtnhidden: boolean = true;\r\n  show_CarrierInfo: boolean = false;\r\n  show_btnCreateCarrier: boolean = true;\r\n  searchText: string;\r\n\r\n  isDesc: boolean = false;\r\n  column: string = \"CustId\";\r\np: number = 1;\r\n count: number;\r\n  \r\n\r\n\r\n  constructor(\r\n    private formbulider: FormBuilder,\r\n    private Service: CarrierService,\r\n    private router: Router,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.dataModel = null;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataModel = new Carrier();\r\n    this.dataModel.Address = new Address();\r\n    this.loadAllCarriers();\r\n  }\r\n\r\n  loadAllCarriers() {\r\n    this.Service.GetCarriers().subscribe(\r\n      data => (this.carriers = data),\r\n      error => console.log(error),\r\n      () => console.log(\"Get carriers\", this.carriers)\r\n    );\r\n  }\r\n  onFormSubmit() {\r\n    this.dataSaved = false;\r\n    this.CreateCarrier();\r\n  }\r\n  EditCarrier(carrierKey: string) {\r\n    this.Service.GetCarrierByID(carrierKey).subscribe(_updateCarrier => {\r\n      this.dataModel = _updateCarrier;\r\n      this.updateCarrier = carrierKey;\r\n      this.message = null;\r\n      this.dataSaved = false;\r\n    });\r\n    this.show_addupdateCarrier = false;\r\n    this.show_CarrierInfo = true;\r\n    this.isCancelbtnhidden = true;\r\n    this.isResetbtnhidden = false;\r\n    this.show_btnCreateCarrier = true;\r\n  }\r\n\r\n  CreateCarrier() {\r\n    if (this.updateCarrier == null) {\r\n      this.Service.CreateCarrier(this.dataModel).subscribe(() => {\r\n        this.dataSaved = true;   \r\n        this.showSuccess(\"created successfully\", \"Create\");\r\n        this.loadAllCarriers();\r\n        this.updateCarrier = null;\r\n        this.show_addupdateCarrier = false;\r\n      }, error => {\r\n        this.showError(\"Error in Creation\", \"Error\");\r\n      });\r\n    } else {\r\n      // this.dataModel.CarrierKey = this.updateCarrier;\r\n      this.Service.UpdateCarrier(this.dataModel).subscribe(() => {\r\n        this.dataSaved = true;        \r\n        this.showSuccess(\"Updated successfully\", \"Updated\");\r\n        this.loadAllCarriers();\r\n        this.updateCarrier = null;\r\n        this.show_addupdateCarrier = false;\r\n      }, error => {\r\n        this.showError(\"Error in update\", \"Error\");\r\n      });\r\n    }\r\n  }\r\n\r\n  resetForm() {\r\n    this.message = null;\r\n    this.dataSaved = false;\r\n\r\n    this.dataModel = null;\r\n    this.dataModel = new Carrier();\r\n    this.dataModel.Address = new Address();\r\n    this.updateCarrier = null;\r\n  }\r\n\r\n  toggle() {\r\n    this.show_btnCreateCarrier = false;\r\n    this.show_addupdateCarrier = true;\r\n    this.show_CarrierInfo = false;\r\n    this.isResetbtnhidden = true;\r\n    this.resetForm();\r\n  }\r\n\r\n  cancel() {\r\n    this.isResetbtnhidden = false;\r\n    this.show_addupdateCarrier = false;\r\n    this.show_CarrierInfo = true;\r\n    this.show_btnCreateCarrier = true;\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  numberOnly(event): boolean {\r\n    const charCode = event.which ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  showSuccess(message: string, title: string) {\r\n    this.toastr.success(message, title, { timeOut: 4000, closeButton: true });\r\n  }\r\n\r\n  showError(message: string, title: string) {\r\n    this.toastr.error(message, \"Oops!\", { timeOut: 4000, closeButton: true });\r\n  }\r\n\r\n  showWarning(message: string, title: string) {\r\n    this.toastr.warning(message, title);\r\n  }\r\n\r\n  showInfo(message: string, title: string) {\r\n    this.toastr.info(message, title, { timeOut: 4000, closeButton: true });\r\n  }\r\n  bindFormControls() {\r\n    this.show_addupdateCarrier = true;\r\n    this.show_CarrierInfo = false;\r\n    this.show_btnCreateCarrier = false;\r\n  }\r\n  clear_search()\r\n  {\r\n    this.searchText = undefined;\r\n  }\r\n\r\n  \r\n  sort(column) {\r\n    this.isDesc = !this.isDesc; //change the direction\r\n    this.column = column;\r\n    let direction = this.isDesc ? 1 : -1;    \r\n\r\n    this.carriers = [...this.carriers].sort((n1, n2) => {\r\n      if ((this.column == \"CarrierName\")) {\r\n        if (n1.CarrierName > n2.CarrierName) {\r\n          return 1* direction;\r\n        } else if (n1.CarrierName < n2.CarrierName) {\r\n          return -1* direction;\r\n        } else return 0;\r\n      }\r\n\r\n      if ((this.column == \"ScacCode\")) {\r\n        if (n1.ScacCode > n2.ScacCode) {\r\n          return 1* direction;\r\n        } else if (n1.ScacCode < n2.ScacCode) {\r\n          return -1* direction;\r\n        } else return 0;\r\n      }\r\n      if ((this.column == \"CarrierId\")) {\r\n        if (n1.CarrierId > n2.CarrierId) {\r\n          return 1* direction;\r\n        } else if (n1.CarrierId < n2.CarrierId) {\r\n          return -1* direction;\r\n        } else return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default \".pointer {\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvX21hc3Rlci9fY2l0eS9saXN0Y2l0eS9DOlxcVXNlcnNcXEFydW5cXERvY3VtZW50c1xcR2l0SHViXFxUTVNfQWRtaW5cXFRNU19XZWIvc3JjXFxhcHBcXHZpZXdzXFxfbWFzdGVyXFxfY2l0eVxcbGlzdGNpdHlcXGxpc3RjaXR5LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy9fbWFzdGVyL19jaXR5L2xpc3RjaXR5L2xpc3RjaXR5LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvdmlld3MvX21hc3Rlci9fY2l0eS9saXN0Y2l0eS9saXN0Y2l0eS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wb2ludGVye1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbiIsIi5wb2ludGVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufSJdfQ== */\"","\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { ItemType } from \"../../../../_models/ItemType\";\r\nimport { City } from \"../../../../_models/city\";\r\nimport { CityService } from \"../../../../_services/city.service\";\r\n\r\n@Component({\r\n  selector: \"app-listcity\",\r\n  templateUrl: \"./listcity.component.html\",\r\n  styleUrls: [\"./listcity.component.scss\"]\r\n})\r\nexport class ListcityComponent implements OnInit {\r\n  citylist: City[];\r\n  public dataModel: City;\r\n \r\n  show_DivAddUpdate: boolean = false;\r\n  show_DivInfo: boolean = false;\r\n  show_btnAdd: boolean = true;\r\n  show_lblAdd: boolean = false;\r\n  show_lblEdit: boolean = false;\r\n  isCancelbtnhidden: boolean = true;\r\n  isResetbtnhidden: boolean = true;\r\n  itemKey: string;\r\n  searchText: string;\r\n  \r\nisDesc: boolean = false;\r\ncolumn: string = \"CustId\";\r\np: number = 1;\r\ncount: number;\r\n\r\n  \r\n  constructor(\r\n    private cityService: CityService,\r\n    private router: Router,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit() {   \r\n\r\n    this.loadAllItems();\r\n  }\r\n\r\n  loadAllItems() {\r\n    this.cityService.GetCity()\r\n    .subscribe(\r\n      data => (this.citylist = data),\r\n      error => console.log(error),\r\n      () => console.log(\"Get citylist\", this.citylist)\r\n    );\r\n  }\r\n\r\n  getcityById(cityKey: string) {\r\n    this.cityService.GetCityByID(cityKey).subscribe(\r\n      _userbyId => {\r\n        this.dataModel = _userbyId;\r\n        this.itemKey = cityKey;\r\n        this.show_DivInfo = true;\r\n        this.show_lblEdit = false;\r\n        this.show_lblAdd = false;\r\n        this.show_DivAddUpdate = false;\r\n        this.show_btnAdd = true;\r\n        console.log(\"user by Id\", this.dataModel);\r\n      },\r\n      error => {\r\n        this.showError(\"Error in getting user \", \"Error\");\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n   \r\n    if (this.itemKey == null) {\r\n      this.cityService.AddCity(this.dataModel).subscribe(\r\n        () => {\r\n          this.showSuccess(\"created successfully\", \"Create\");\r\n          this.loadAllItems();\r\n          this.itemKey = null;\r\n          this.show_DivAddUpdate = false;\r\n          this.show_btnAdd = true;\r\n          this.show_lblAdd=false;\r\n        },\r\n        error => {\r\n          this.showError(\"Error in Creation\", \"Error\");\r\n        }\r\n      );\r\n    } else {\r\n      this.cityService.UpdateCity(this.dataModel).subscribe(\r\n        () => {\r\n          this.showSuccess(\"Updated successfully\", \"Update\");\r\n          this.loadAllItems();\r\n          this.itemKey = null;\r\n          this.show_DivAddUpdate = false;\r\n          this.show_btnAdd = true;\r\n          this.show_lblEdit=false;\r\n        },\r\n        error => {\r\n          this.showError(\"Error in Update\", \"Error\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  bindFormControls() {\r\n    this.show_DivAddUpdate = true;\r\n    this.show_DivInfo = false;\r\n    this.show_btnAdd = false;\r\n    this.show_lblAdd = false;\r\n    this.show_lblEdit = true;\r\n  }\r\n\r\n  resetForm() {\r\n    this.dataModel = null;\r\n    this.dataModel = new City();\r\n    this.itemKey = null;\r\n  }\r\n\r\n  toggle() {\r\n    this.show_DivAddUpdate = true;\r\n    this.isResetbtnhidden = true;\r\n    this.show_btnAdd = false;\r\n    this.show_lblAdd = true;\r\n    this.show_lblEdit = false;\r\n    this.show_DivInfo = false;\r\n    this.resetForm();\r\n  }\r\n\r\n  cancel() {\r\n    this.isResetbtnhidden = false;\r\n    if (this.dataModel != null) {\r\n      this.show_DivInfo = false;\r\n    }\r\n    this.show_DivAddUpdate = false;\r\n    this.show_btnAdd = true;\r\n    this.show_lblAdd = false;\r\n    this.show_lblEdit = false;\r\n  }\r\n\r\n  showSuccess(message: string, title: string) {\r\n    this.toastr.success(message, title, { timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  showError(message: string, title: string) {\r\n    this.toastr.error(message, \"Oops!\", { timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  showWarning(message: string, title: string) {\r\n    this.toastr.warning(message, title,{ timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  showInfo(message: string, title: string) {\r\n    this.toastr.info(message, title, { timeOut: 2000, closeButton: true });\r\n  }\r\n  clear_search()\r\n  {\r\n    this.searchText = undefined;\r\n  }\r\n\r\n  \r\n\r\n  sort(column) {\r\n    this.isDesc = !this.isDesc; //change the direction\r\n    this.column = column;\r\n    let direction = this.isDesc ? 1 : -1;    \r\n\r\n    this.citylist = [...this.citylist].sort((n1, n2) => {\r\n      if ((this.column == \"cityid\")) {\r\n        if (n1.cityid > n2.cityid) {\r\n          return 1* direction;\r\n        } else if (n1.cityid < n2.cityid) {\r\n          return -1* direction;\r\n        } else return 0;\r\n      }\r\n\r\n      if ((this.column == \"cityname\")) {\r\n        if (n1.cityname > n2.cityname) {\r\n          return 1* direction;\r\n        } else if (n1.cityname < n2.cityname) {\r\n          return -1* direction;\r\n        } else return 0;\r\n      }     \r\n    });\r\n  }\r\n}\r\n","export default \".pointer {\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvX21hc3Rlci9fY29tcGFueS9jb21wYW55bGlzdC9DOlxcVXNlcnNcXEFydW5cXERvY3VtZW50c1xcR2l0SHViXFxUTVNfQWRtaW5cXFRNU19XZWIvc3JjXFxhcHBcXHZpZXdzXFxfbWFzdGVyXFxfY29tcGFueVxcY29tcGFueWxpc3RcXGNvbXBhbnlsaXN0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy9fbWFzdGVyL19jb21wYW55L2NvbXBhbnlsaXN0L2NvbXBhbnlsaXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvdmlld3MvX21hc3Rlci9fY29tcGFueS9jb21wYW55bGlzdC9jb21wYW55bGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wb2ludGVye1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59IiwiLnBvaW50ZXIge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59Il19 */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FormBuilder } from \"@angular/forms\";\r\nimport { Address } from \"../../../../_models/address\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { CityService } from \"../../../../_services/city.service\";\r\nimport { City } from \"../../../../_models/city\";\r\nimport { Company } from \"../../../../_models/company\";\r\nimport { CompanyService } from '../../../../_services/company.service';\r\n\r\n@Component({\r\n  selector: \"app-companylist\",\r\n  templateUrl: \"./companylist.component.html\",\r\n  styleUrls: [\"./companylist.component.scss\"]\r\n})\r\nexport class CompanylistComponent implements OnInit { \r\n  companies: Company[];\r\n  citylist: City[];\r\n  companyUpdate = null;\r\n  show_addupdateCompany: boolean = false;\r\n  show_companyInfo: boolean = false;\r\n  submitted: boolean = false;\r\n  company: Company;\r\n  address: Address;\r\n  selectedCompany: Company;\r\n  isCancelbtnhidden: boolean = true;\r\n  isResetbtnhidden: boolean = true;\r\n  show_btnCreateCompany: boolean = true;\r\n  isACHrequired: boolean = false;\r\n  searchText: string;\r\n\r\n  \r\nisDesc: boolean = false;\r\ncolumn: string = \"CustId\";\r\np: number = 1;\r\ncount: number;\r\n\r\n  emailPattern: string = \"[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,3}$\";\r\n  websitePattern: string =\r\n    \"(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/?\";\r\n\r\n  constructor(\r\n    private formbulider: FormBuilder,\r\n    private Service: CompanyService,\r\n    private router: Router,\r\n    private cityService: CityService,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.company = new Company();\r\n    this.company.Address = new Address();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadAllCompanies();\r\n    this.loadAllCity();\r\n  }\r\n\r\n  loadAllCompanies() {\r\n    this.Service.getCompanies().subscribe(\r\n      data => (this.companies = data),\r\n      error => console.log(error),\r\n      () => console.log(\"get Companies complete\")\r\n    );\r\n  }\r\n  loadAllCity() {\r\n    this.cityService.GetCity().subscribe(\r\n      data => (this.citylist = data),\r\n      error => console.log(error),\r\n      () => console.log(\"Get citylist\", this.citylist)\r\n    );\r\n  }\r\n  onOutputAddressChange(addr: Address) {\r\n   this.company.Address=addr;\r\n  }\r\n\r\n  onFormSubmit() {\r\n    if (this.companyUpdate == null) {\r\n      this.createCompany();\r\n    } else {\r\n      this.updateCompany();\r\n    }\r\n  }\r\n\r\n  getCompanydataToEdit(companykey: string) {\r\n    this.Service.getCompanyById(companykey).subscribe(company_edit => {\r\n      this.companyUpdate = company_edit.compkey;\r\n      this.selectedCompany = company_edit;\r\n      this.company = company_edit;\r\n    });\r\n    this.show_companyInfo = true;\r\n    this.show_addupdateCompany = false;\r\n    this.show_btnCreateCompany = true;\r\n\r\n    this.isCancelbtnhidden = true;\r\n    this.isResetbtnhidden = false;\r\n  }\r\n  edit_click() {\r\n    this.show_companyInfo = false;\r\n    this.show_addupdateCompany = true;\r\n    this.show_btnCreateCompany = false;\r\n  }\r\n  createCompany() {\r\n    this.Service.createCompany(this.company).subscribe(\r\n      () => {\r\n        this.show_addupdateCompany = false;\r\n        this.showSuccess(\"Company details created successfully\", \"Create\");\r\n        this.loadAllCompanies();\r\n        this.show_btnCreateCompany = true;\r\n        this.companyUpdate = null;\r\n      },\r\n      error => {\r\n        this.showError(\"Error in Company detail creation: \" + error, \"Error\");\r\n      }\r\n    );\r\n  }\r\n  updateCompany() {\r\n    this.company.compkey = this.companyUpdate;\r\n    this.Service.updateCompany(this.company).subscribe(\r\n      () => {\r\n        this.show_addupdateCompany = false;\r\n        this.showSuccess(\"Customer updated successfully\", \"Edit\");\r\n        this.loadAllCompanies();\r\n        this.show_btnCreateCompany = true;\r\n        this.companyUpdate = null;\r\n      },\r\n      error => {\r\n        this.showError(\"Error in Customer update: \" + error, \"Error\");\r\n      }\r\n    );\r\n  }\r\n\r\n  clear() {\r\n    this.company = null;\r\n    this.company = new Company();\r\n    this.company.Address = new Address();\r\n\r\n    this.show_addupdateCompany = true;\r\n    this.show_companyInfo = false;\r\n    this.isResetbtnhidden = true;\r\n    this.show_btnCreateCompany = false;\r\n    this.companyUpdate = null;\r\n  }\r\n\r\n  cancel() {\r\n    this.isResetbtnhidden = false;\r\n    if (this.selectedCompany != null) {\r\n      this.show_companyInfo = true;\r\n    }\r\n    this.show_addupdateCompany = false;\r\n    this.show_btnCreateCompany = true;\r\n  }\r\n\r\n  numberOnly(event): boolean {\r\n    const charCode = event.which ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  showSuccess(message: string, title: string) {\r\n    this.toastr.success(message, title, { timeOut: 4000, closeButton: true });\r\n  }\r\n\r\n  showError(message: string, title: string) {\r\n    this.toastr.error(message, \"Oops!\", { timeOut: 4000, closeButton: true });\r\n  }\r\n\r\n  showWarning(message: string, title: string) {\r\n    this.toastr.warning(message, title);\r\n  }\r\n\r\n  showInfo(message: string, title: string) {\r\n    this.toastr.info(message, title, { timeOut: 4000, closeButton: true });\r\n  }\r\n  clear_search() {\r\n    this.searchText = undefined;\r\n  } \r\n\r\n  sort(column) {\r\n    this.isDesc = !this.isDesc; //change the direction\r\n    this.column = column;\r\n    let direction = this.isDesc ? 1 : -1;    \r\n\r\n    this.companies = [...this.companies].sort((n1, n2) => {\r\n      if ((this.column == \"compname\")) {\r\n        if (n1.compname > n2.compname) {\r\n          return 1* direction;\r\n        } else if (n1.compname < n2.compname) {\r\n          return -1* direction;\r\n        } else return 0;\r\n      }\r\n\r\n      if ((this.column == \"compid\")) {\r\n        if (n1.compid > n2.compid) {\r\n          return 1* direction;\r\n        } else if (n1.compid < n2.compid) {\r\n          return -1* direction;\r\n        } else return 0;\r\n      }     \r\n    });\r\n  }\r\n}\r\n","export default \".pointer {\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvX21hc3Rlci9fZHJpdmVyL2xpc3Rkcml2ZXIvQzpcXFVzZXJzXFxBcnVuXFxEb2N1bWVudHNcXEdpdEh1YlxcVE1TX0FkbWluXFxUTVNfV2ViL3NyY1xcYXBwXFx2aWV3c1xcX21hc3RlclxcX2RyaXZlclxcbGlzdGRyaXZlclxcbGlzdGRyaXZlci5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvdmlld3MvX21hc3Rlci9fZHJpdmVyL2xpc3Rkcml2ZXIvbGlzdGRyaXZlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGVBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL19tYXN0ZXIvX2RyaXZlci9saXN0ZHJpdmVyL2xpc3Rkcml2ZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucG9pbnRlcntcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufSIsIi5wb2ludGVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufSJdfQ== */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Address } from \"../../../../_models/address\";\r\nimport { Driver } from \"../../../../_models/driver\";\r\nimport { DriverService } from \"../../../../_services/driver.service\";\r\nimport { Carrier } from \"../../../../common/master\";\r\nimport { MasterService } from \"../../../../_services/master.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-listdriver\",\r\n  templateUrl: \"./listdriver.component.html\",\r\n  styleUrls: [\"./listdriver.component.scss\"]\r\n})\r\nexport class ListdriverComponent implements OnInit {\r\n  drivers: Driver[];\r\n  carrierlist: Carrier[];\r\n  dataSaved = false;\r\n  driverUpdate = null;\r\n  message = null;\r\n  show_addupdatedriver: boolean = false;\r\n  show_DriverInfo: boolean = false;\r\n  show_btnCreatedriver: boolean = true;\r\n  submitted: boolean = false;\r\n  public driverModel: any;\r\n  address: Address;\r\n  searchText: string;\r\n  isCancelbtnhidden: boolean = true;\r\n  isResetbtnhidden: boolean = true;\r\n\r\n  isDesc: boolean = false;\r\n  column: string = \"CustId\";\r\np: number = 1;\r\n count: number;\r\n\r\n  constructor(\r\n    private Service: DriverService,\r\n    private master: MasterService,\r\n    private router: Router,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.driverModel = null;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.driverModel = new Driver();\r\n    // this.driverModel.Address = new Address();\r\n    this.master.getCarrierList().subscribe(\r\n      data => (this.carrierlist = data),\r\n      error => console.log(error),\r\n      () => console.log(\"Get carrierlist\", this.carrierlist)\r\n    );\r\n\r\n    this.loadAlldrivers();\r\n  }\r\n\r\n  loadAlldrivers() {\r\n    this.Service.getDrivers().subscribe(\r\n      data => (this.drivers = data),\r\n      error => console.log(error),\r\n      () => console.log(\"Get drivers\", this.drivers)\r\n    );\r\n  }\r\n  onFormSubmit() {\r\n    this.submitted = true;\r\n    this.dataSaved = false;\r\n    this.CreateDriver();\r\n  }\r\n  loadCustomerToEdit(driverkey: string) {\r\n    this.Service.getDriverById(driverkey).subscribe(driver_edit => {\r\n      this.driverModel = driver_edit;\r\n      this.driverUpdate = driverkey;\r\n      this.message = null;\r\n      this.dataSaved = false;\r\n    });\r\n    this.show_addupdatedriver = false;\r\n    this.show_DriverInfo = true;\r\n    this.isCancelbtnhidden = true;\r\n    this.isResetbtnhidden = false;\r\n    this.show_btnCreatedriver = true;\r\n  }\r\n\r\n  CreateDriver() {\r\n    if (this.driverUpdate == null) {\r\n      this.Service.createDriver(this.driverModel).subscribe(\r\n        () => {\r\n          this.dataSaved = true;\r\n          this.message = \"Driver Record saved Successfully\";\r\n          this.showSuccess(\"created successfully\", \"Create\");\r\n          this.loadAlldrivers();\r\n          this.driverUpdate = null;\r\n          this.show_addupdatedriver = false;\r\n        },\r\n        error => {\r\n          this.showError(\"Error in Creation\", \"Error\");\r\n        }\r\n      );\r\n    } else {\r\n      // this.driverModel.DriverKey = this.driverUpdate;\r\n      this.Service.updateDriver(this.driverModel).subscribe(\r\n        () => {\r\n          this.dataSaved = true;\r\n          this.message = \"Driver Record Updated Successfully\";\r\n          this.showSuccess(\"Updated successfully\", \"Update\");\r\n          this.loadAlldrivers();\r\n          this.driverUpdate = null;\r\n          this.show_addupdatedriver = false;\r\n        },\r\n        error => {\r\n          this.showError(\"Error in Update\", \"Error\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  resetForm() {\r\n    // this.driverForm.reset();\r\n    this.message = null;\r\n    this.dataSaved = false;\r\n\r\n    this.driverModel = null;\r\n    this.driverModel = new Driver();\r\n    this.driverModel.Address = new Address();\r\n    this.driverUpdate = null;\r\n  }\r\n\r\n  toggle() {\r\n    this.show_addupdatedriver = true;\r\n    this.isResetbtnhidden = true;\r\n    this.show_btnCreatedriver = false;\r\n    this.show_DriverInfo = false;\r\n    this.resetForm();\r\n  }\r\n\r\n  cancel() {\r\n    this.isResetbtnhidden = false;\r\n    if (this.driverModel != null) {\r\n      this.show_DriverInfo = false;\r\n    }\r\n    this.show_addupdatedriver = false;\r\n    this.show_btnCreatedriver = true;\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  numberOnly(event): boolean {\r\n    const charCode = event.which ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  bindFormControls() {\r\n    this.show_addupdatedriver = true;\r\n    this.show_DriverInfo = false;\r\n    this.show_btnCreatedriver = false;\r\n  }\r\n\r\n  showSuccess(message: string, title: string) {\r\n    this.toastr.success(message, title, { timeOut: 4000, closeButton: true });\r\n  }\r\n\r\n  showError(message: string, title: string) {\r\n    this.toastr.error(message, \"Oops!\", { timeOut: 4000, closeButton: true });\r\n  }\r\n\r\n  showWarning(message: string, title: string) {\r\n    this.toastr.warning(message, title);\r\n  }\r\n\r\n  showInfo(message: string, title: string) {\r\n    this.toastr.info(message, title, { timeOut: 4000, closeButton: true });\r\n  }\r\n\r\n  clear_search()\r\n  {\r\n    this.searchText = undefined;\r\n  }\r\n\r\n  \r\n  sort(column) {\r\n    this.isDesc = !this.isDesc; //change the direction\r\n    this.column = column;\r\n    let direction = this.isDesc ? 1 : -1;    \r\n\r\n    this.drivers = [...this.drivers].sort((n1, n2) => {\r\n      if ((this.column == \"DriverId\")) {\r\n        if (n1.DriverId > n2.DriverId) {\r\n          return 1* direction;\r\n        } else if (n1.DriverId < n2.DriverId) {\r\n          return -1* direction;\r\n        } else return 0;\r\n      }\r\n      if ((this.column == \"FirstName\")) {\r\n        if (n1.FirstName > n2.FirstName) {\r\n          return 1* direction;\r\n        } else if (n1.FirstName < n2.FirstName) {\r\n          return -1* direction;\r\n        } else return 0;\r\n      }\r\n      if ((this.column == \"LastName\")) {\r\n        if (n1.LastName > n2.LastName) {\r\n          return 1* direction;\r\n        } else if (n1.LastName < n2.LastName) {\r\n          return -1* direction;\r\n        } else return 0;\r\n      }\r\n      if ((this.column == \"DriversLicenseNo\")) {\r\n        if (n1.DriversLicenseNo > n2.DriversLicenseNo) {\r\n          return 1* direction;\r\n        } else if (n1.DriversLicenseNo < n2.DriversLicenseNo) {\r\n          return -1* direction;\r\n        } else return 0;\r\n      }\r\n      if ((this.column == \"LicenseExpiryDate\")) {\r\n        if (n1.LicenseExpiryDate > n2.LicenseExpiryDate) {\r\n          return 1* direction;\r\n        } else if (n1.LicenseExpiryDate < n2.LicenseExpiryDate) {\r\n          return -1* direction;\r\n        } else return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default \".pointer {\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvX21hc3Rlci9faXRlbS9pdGVtbGlzdC9DOlxcVXNlcnNcXEFydW5cXERvY3VtZW50c1xcR2l0SHViXFxUTVNfQWRtaW5cXFRNU19XZWIvc3JjXFxhcHBcXHZpZXdzXFxfbWFzdGVyXFxfaXRlbVxcaXRlbWxpc3RcXGl0ZW1saXN0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy9fbWFzdGVyL19pdGVtL2l0ZW1saXN0L2l0ZW1saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNFO0VBQ0UsZUFBQTtBQ0FKIiwiZmlsZSI6InNyYy9hcHAvdmlld3MvX21hc3Rlci9faXRlbS9pdGVtbGlzdC9pdGVtbGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4gIC5wb2ludGVye1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbiIsIi5wb2ludGVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufSJdfQ== */\"","\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { Item } from \"../../../../_models/item\";\r\nimport { ItemService } from \"../../../../_services/item.service\";\r\nimport { ItemType } from \"../../../../_models/ItemType\";\r\n\r\n@Component({\r\n  selector: \"app-userlist\",\r\n  templateUrl: \"./itemlist.component.html\",\r\n  styleUrls: [\"./itemlist.component.scss\"]\r\n})\r\nexport class ItemlistComponent implements OnInit {\r\n  Items: Item[];\r\n  public dataModel: Item;\r\n  ItemTypes:ItemType[];\r\n\r\n  show_DivAddUpdate: boolean = false;\r\n  show_DivInfo: boolean = false;\r\n  show_btnAdd: boolean = true;\r\n  show_lblAdd: boolean = false;\r\n  show_lblEdit: boolean = false;\r\n  isCancelbtnhidden: boolean = true;\r\n  isResetbtnhidden: boolean = true;\r\n  itemKey: string;\r\n  searchText: string;\r\n\r\n  isDesc: boolean = false;\r\n  column: string = \"CustId\";\r\np: number = 1;\r\n count: number;\r\n\r\n\r\n  constructor(\r\n    private itmService: ItemService,\r\n    private router: Router,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n\r\n    this.itmService.GetItemTypes()\r\n    .subscribe(\r\n      data => (this.ItemTypes = data),\r\n      error => console.log(error),\r\n      () => console.log(\"Get ItemTypes\", this.ItemTypes)\r\n    );\r\n\r\n    this.loadAllItems();\r\n  }\r\n\r\n  loadAllItems() {\r\n    this.itmService.GetItems().subscribe(\r\n      data => (this.Items = data),\r\n      error => {\r\n        this.showError(\"Error in getting All Items \", \"Error\");\r\n      },\r\n      () => console.log(\"Items list\", this.Items)\r\n    );\r\n  }\r\n\r\n  getItemById(itemKey: string) {\r\n    this.itmService.GetItemByID(itemKey).subscribe(\r\n      _userbyId => {\r\n        this.dataModel = _userbyId;\r\n        this.itemKey = itemKey;\r\n        this.show_DivInfo = true;\r\n        this.show_lblEdit = false;\r\n        this.show_lblAdd = false;\r\n        this.show_DivAddUpdate = false;\r\n        this.show_btnAdd = true;\r\n        console.log(\"user by Id\", this.dataModel);\r\n      },\r\n      error => {\r\n        this.showError(\"Error in getting user \", \"Error\");\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n   \r\n    if (this.itemKey == null) {\r\n      this.itmService.CreateItem(this.dataModel).subscribe(\r\n        () => {\r\n          this.showSuccess(\"created successfully\", \"Create\");\r\n          this.loadAllItems();\r\n          this.itemKey = null;\r\n          this.show_DivAddUpdate = false;\r\n          this.show_btnAdd = true;\r\n          this.show_lblAdd=false;\r\n        },\r\n        error => {\r\n          this.showError(\"Error in Creation\", \"Error\");\r\n        }\r\n      );\r\n    } else {\r\n      this.itmService.UpdateItem(this.dataModel).subscribe(\r\n        () => {\r\n          this.showSuccess(\"Updated successfully\", \"Update\");\r\n          this.loadAllItems();\r\n          this.itemKey = null;\r\n          this.show_DivAddUpdate = false;\r\n          this.show_btnAdd = true;\r\n          this.show_lblEdit=false;\r\n        },\r\n        error => {\r\n          this.showError(\"Error in Update\", \"Error\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  bindFormControls() {\r\n    this.show_DivAddUpdate = true;\r\n    this.show_DivInfo = false;\r\n    this.show_btnAdd = false;\r\n    this.show_lblAdd = false;\r\n    this.show_lblEdit = true;\r\n  }\r\n\r\n  resetForm() {\r\n    this.dataModel = null;\r\n    this.dataModel = new Item();\r\n    this.itemKey = null;\r\n  }\r\n\r\n  toggle() {\r\n    this.show_DivAddUpdate = true;\r\n    this.isResetbtnhidden = true;\r\n    this.show_btnAdd = false;\r\n    this.show_lblAdd = true;\r\n    this.show_lblEdit = false;\r\n    this.show_DivInfo = false;\r\n    this.resetForm();\r\n  }\r\n\r\n  cancel() {\r\n    this.isResetbtnhidden = false;\r\n    if (this.dataModel != null) {\r\n      this.show_DivInfo = false;\r\n    }\r\n    this.show_DivAddUpdate = false;\r\n    this.show_btnAdd = true;\r\n    this.show_lblAdd = false;\r\n    this.show_lblEdit = false;\r\n  }\r\n\r\n  showSuccess(message: string, title: string) {\r\n    this.toastr.success(message, title, { timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  showError(message: string, title: string) {\r\n    this.toastr.error(message, \"Oops!\", { timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  showWarning(message: string, title: string) {\r\n    this.toastr.warning(message, title,{ timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  showInfo(message: string, title: string) {\r\n    this.toastr.info(message, title, { timeOut: 2000, closeButton: true });\r\n  }\r\n  clear_search()\r\n  {\r\n    this.searchText = undefined;\r\n  }\r\n\r\n  \r\n  sort(column) {\r\n    this.isDesc = !this.isDesc; //change the direction\r\n    this.column = column;\r\n    let direction = this.isDesc ? 1 : -1;    \r\n\r\n    this.Items = [...this.Items].sort((n1, n2) => {\r\n      if ((this.column == \"itemid\")) {\r\n        if (n1.itemid > n2.itemid) {\r\n          return 1* direction;\r\n        } else if (n1.itemid < n2.itemid) {\r\n          return -1* direction;\r\n        } else return 0;\r\n      }\r\n\r\n      if ((this.column == \"description\")) {\r\n        if (n1.description > n2.description) {\r\n          return 1* direction;\r\n        } else if (n1.description < n2.description) {\r\n          return -1* direction;\r\n        } else return 0;\r\n      }     \r\n    });\r\n  }\r\n}\r\n","export default \".pointer {\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvX21hc3Rlci9fcmF0ZXNoZWV0L3JhdGVzaGVldGxpc3QvQzpcXFVzZXJzXFxBcnVuXFxEb2N1bWVudHNcXEdpdEh1YlxcVE1TX0FkbWluXFxUTVNfV2ViL3NyY1xcYXBwXFx2aWV3c1xcX21hc3RlclxcX3JhdGVzaGVldFxccmF0ZXNoZWV0bGlzdFxccmF0ZXNoZWV0bGlzdC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvdmlld3MvX21hc3Rlci9fcmF0ZXNoZWV0L3JhdGVzaGVldGxpc3QvcmF0ZXNoZWV0bGlzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL19tYXN0ZXIvX3JhdGVzaGVldC9yYXRlc2hlZXRsaXN0L3JhdGVzaGVldGxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucG9pbnRlcntcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn0iLCIucG9pbnRlciB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn0iXX0= */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { Item } from \"../../../../_models/item\";\r\nimport { Ratesheet } from \"../../../../_models/ratesheet\";\r\nimport { Customer } from \"../../../../_models/customer\";\r\nimport { RateService } from \"../../../../_services/rate.service\";\r\nimport { CustomerService } from \"../../../../_services/customer.service\";\r\nimport { ItemService } from \"../../../../_services/item.service\";\r\n//import { nlLocale } from \"ngx-bootstrap\";\r\n\r\n@Component({\r\n  selector: \"app-ratesheetlist\",\r\n  templateUrl: \"./ratesheetlist.component.html\",\r\n  styleUrls: [\"./ratesheetlist.component.scss\"]\r\n})\r\nexport class RatesheetlistComponent implements OnInit {\r\n  ratesheet: Array<Item> = [];\r\n\r\n  private newAttribute: any = {};\r\n  private newAttributeinRate: any = {};\r\n  item: Item[] = [];\r\n\r\n  public newItem: any = {};\r\n  public dataModel: Ratesheet[];\r\n  public addModel: Ratesheet;\r\n  public rates: Ratesheet[];\r\n  public ratesbycustomer: Ratesheet[];\r\n  customers: Customer[];\r\n  CustomerKey: string;\r\n  selectedCustomer: any;\r\n\r\n  show_DivAddUpdate: boolean = false;\r\n  show_DivInfo: boolean = false;\r\n  show_btnAdd: boolean = false;\r\n  show_btnEdit: boolean = false;\r\n  show_lblAdd: boolean = false;\r\n  show_lblEdit: boolean = false;\r\n  isCancelbtnhidden: boolean = true;\r\n  isResetbtnhidden: boolean = true;\r\n  ratesCount: boolean = true;\r\n  itemKey: string;\r\n\r\n  isDesc: boolean = false;\r\n  column: string = \"CustId\";\r\n  p: number = 1;\r\n  count: number;\r\n\r\n  constructor(\r\n    private rateService: RateService,\r\n    private itmService: ItemService,\r\n    private customerService: CustomerService,\r\n    private router: Router,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getItems();\r\n    this.loadAllCustomerRates();\r\n    this.loadAllCustomers();\r\n  }\r\n\r\n  loadAllCustomers() {\r\n    this.customerService.getCustomers().subscribe(\r\n      data => (this.customers = data),\r\n      error => console.log(error),\r\n      () => console.log(\"Get customers complete\", this.customers)\r\n    );\r\n  }\r\n\r\n  loadAllCustomerRates() {\r\n    this.rateService.GetRates().subscribe(\r\n      data => (this.rates = data),\r\n      error => {\r\n        this.showError(\"Error in getting All Items \", \"Error\");\r\n      },\r\n      () => console.log(\"Rate list\", this.rates)\r\n    );\r\n  }\r\n  getItems() {\r\n    this.itmService.GetItems().subscribe(\r\n      data => (this.item = data),\r\n      error => {\r\n        this.showError(\"Error in getting All Items \", \"Error\");\r\n      },\r\n      () => console.log(\"Items list\", this.ratesheet)\r\n    );\r\n  }\r\n  GetRateByCustomer() {\r\n    if (this.CustomerKey == null || this.CustomerKey == undefined) {\r\n      return;\r\n    }\r\n    this.rateService.GetRateByCustomer(this.CustomerKey).subscribe(\r\n      _ratesByCustomer => {\r\n        this.dataModel = _ratesByCustomer;      \r\n\r\n        this.show_DivInfo = true;\r\n        this.show_DivAddUpdate = false;\r\n        console.log(\"user by Id\", this.dataModel);\r\n      },\r\n      error => {\r\n        this.showError(\"Error in getting user \", \"Error\");\r\n      }\r\n    );\r\n    console.log(\"Rates By Customer\", this.ratesbycustomer);\r\n    //this.dataModel = this.ratesbycustomer\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(\"On Submit Data\", this.item);\r\n    console.log(\"Ratesheet list\", this.ratesheet);\r\n\r\n    // if (this.addModel.customerkey == \"0\") {\r\n    //   this.showError(\"Please select Customer!\", \"Customer\");\r\n    //   return;\r\n    // }\r\n    if (this.ratesheet.length == 0) {\r\n      this.showError(\"No Rate-Items found to add!\", \"Customer\");\r\n      return;\r\n    }\r\n    //this.dataModel.item = new Item();\r\n    //this.dataModel.item=  Object.assign({}, ...this.ratesheet);\r\n    this.addModel.customerkey = this.CustomerKey;\r\n    this.addModel.item = this.ratesheet;\r\n\r\n    if (this.itemKey == null) {\r\n      this.rateService.AddRate(this.addModel).subscribe(\r\n        () => {\r\n          this.showSuccess(\"created successfully\", \"Create\");\r\n          this.loadAllCustomerRates();\r\n          this.itemKey = null;\r\n          this.show_DivAddUpdate = false;\r\n          this.show_lblAdd = false;\r\n        },\r\n        error => {\r\n          this.showError(\"Error in Creation\", \"Error\");\r\n        }\r\n      );\r\n    } else {\r\n      this.rateService.UpdateRate(this.dataModel).subscribe(\r\n        () => {\r\n          this.showSuccess(\"Updated successfully\", \"Update\");\r\n          this.loadAllCustomerRates();\r\n          this.itemKey = null;\r\n          this.show_DivAddUpdate = false;\r\n          this.show_lblEdit = false;\r\n        },\r\n        error => {\r\n          this.showError(\"Error in Update\", \"Error\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  bindFormControls() {\r\n    this.show_DivAddUpdate = true;\r\n    this.show_DivInfo = false;\r\n    this.show_btnAdd = false;\r\n    this.show_lblAdd = false;\r\n    this.show_lblEdit = true;\r\n  }\r\n\r\n  resetForm() {\r\n    this.dataModel = null;\r\n    this.addModel = new Ratesheet();\r\n    this.itemKey = null;\r\n  }\r\n\r\n  toggle() {\r\n    this.show_DivAddUpdate = true;\r\n    this.isResetbtnhidden = true;\r\n    this.show_btnAdd = false;\r\n    this.show_lblAdd = true;\r\n    this.show_lblEdit = false;\r\n    this.show_DivInfo = false;\r\n    this.resetForm();\r\n    this.addModel.customerkey = \"0\";\r\n    this.ratesheet = null;\r\n    this.ratesheet =new  Array<Item>();\r\n  }\r\n\r\n  cancel() {\r\n    this.isResetbtnhidden = false;\r\n    if (this.dataModel != null) {\r\n      this.show_DivInfo = false;\r\n    }\r\n    this.show_DivAddUpdate = false;\r\n    this.show_lblAdd = false;\r\n    this.show_lblEdit = false;\r\n  }\r\n\r\n  addFieldValue() {\r\n    if (Object.keys(this.newAttribute).length === 0) {\r\n      return;\r\n    }\r\n\r\n    for (var item of this.ratesheet) {\r\n      if (item.itemkey ==this.newAttribute.itemkey) {\r\n        this.showInfo(\"Add Rate\", \"Rate already fixed.\");\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.newItem = this.newAttribute;\r\n    this.ratesheet.push(this.newItem);\r\n    this.newAttribute = {};\r\n  }\r\n\r\n  addNewRowinRateSheet() {\r\n    if (Object.keys(this.newAttributeinRate).length === 0) {\r\n      return;\r\n    }\r\n    if (\r\n      this.newAttributeinRate.unitprice === undefined ||\r\n      this.newAttributeinRate.unitprice === null\r\n    ) {\r\n      this.showInfo(\"Add Rate\", \"Enter Unit Price.\");\r\n      return;\r\n    }\r\n    for (var data of this.dataModel) {\r\n      if (data.itemkey == this.itemKey) {\r\n        this.showInfo(\"Add Rate\", \"Rate already available.\");\r\n        return;\r\n      }\r\n    }\r\n    this.newItem = this.newAttributeinRate;\r\n    this.newItem.ratekey = null;\r\n    this.newItem.customerkey = this.CustomerKey;\r\n    this.newItem.createdate = null;\r\n    this.newItem.userkey = null;\r\n    this.newItem.customername = null;\r\n    this.newItem.Item = null;\r\n    this.newItem.lastupdatedate = null;\r\n\r\n    this.dataModel.push(this.newItem);\r\n    this.newAttributeinRate = {};\r\n  }\r\n  deleteFieldValue(index) {\r\n    this.ratesheet.splice(index, 1);\r\n  }\r\n  deleteFieldValueInRateSheet(index) {\r\n    this.dataModel.splice(index, 1);\r\n  }\r\n  drpAddnewCharge_ChangedEvent(val: any) {\r\n    this.itemKey = val;\r\n    this.newItem = this.item.find(x => x.itemkey == val);\r\n    this.newAttribute.description = this.newItem.description;\r\n    this.itemKey = null;\r\n  }\r\n\r\n  drpAddnewCharge_ChangedEventEdit(val: any) {\r\n    this.itemKey = val;\r\n    this.newItem = this.item.find(x => x.itemkey == val);\r\n    this.newAttributeinRate.description = this.newItem.description;\r\n    //this.itemKey = null;\r\n  }\r\n\r\n  drpCustomer_ChangedEvent(CustomerKey: any) {\r\n    // var test= this.rates.filter(x => x.customerkey == val);\r\n    // this.ratesbycustomer = new Array<Ratesheet>();\r\n    // this.ratesbycustomer.push(test);\r\n    // console.log(\"Rates By Customer\", this.ratesbycustomer);\r\n    console.log(\"Rates By Customer\", this.selectedCustomer);\r\n    this.CustomerKey = CustomerKey;\r\n    this.selectedCustomer = this.customers.find(\r\n      x => x.CustomerKey == CustomerKey\r\n    );\r\n    this.ratesbycustomer = this.rates.filter(x => x.customerkey == CustomerKey);\r\n    if (this.ratesbycustomer.length > 0) {\r\n      this.show_btnEdit = true;\r\n      this.ratesCount = false;\r\n      this.show_btnAdd = false;\r\n    } else {\r\n      this.show_btnEdit = false;\r\n      this.ratesCount = false;\r\n      this.show_btnAdd = true;\r\n    }\r\n\r\n    console.log(\"Rates By Customer\", this.ratesbycustomer);\r\n  }\r\n\r\n  updateRate() {\r\n    this.rateService.UpdateRate(this.dataModel).subscribe(\r\n      () => {\r\n        this.showSuccess(\"Updated successfully\", \"Update\");\r\n        this.loadAllCustomerRates();\r\n        this.show_DivInfo = false;\r\n        this.dataModel = null;\r\n        this.CustomerKey = null;\r\n        this.selectedCustomer = null;\r\n        this.itemKey = null;\r\n        this.show_DivAddUpdate = false;\r\n        this.show_lblEdit = false;\r\n      },\r\n      error => {\r\n        this.showError(\"Error in Update\", \"Error\");\r\n      }\r\n    );\r\n  }\r\n\r\n  showSuccess(message: string, title: string) {\r\n    this.toastr.success(message, title, { timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  showError(message: string, title: string) {\r\n    this.toastr.error(message, \"Oops!\", { timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  showWarning(message: string, title: string) {\r\n    this.toastr.warning(message, title, { timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  showInfo(message: string, title: string) {\r\n    this.toastr.info(message, title, { timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  sort(column) {\r\n    this.isDesc = !this.isDesc; //change the direction\r\n    this.column = column;\r\n    let direction = this.isDesc ? 1 : -1;\r\n\r\n    this.ratesbycustomer = [...this.ratesbycustomer].sort((n1, n2) => {\r\n      if (this.column == \"description\") {\r\n        if (n1.description > n2.description) {\r\n          return 1 * direction;\r\n        } else if (n1.description < n2.description) {\r\n          return -1 * direction;\r\n        } else return 0;\r\n      }\r\n\r\n      if (this.column == \"unitprice\") {\r\n        if (n1.unitprice > n2.unitprice) {\r\n          return 1 * direction;\r\n        } else if (n1.unitprice < n2.unitprice) {\r\n          return -1 * direction;\r\n        } else return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default \".ScrollStyle {\\n  max-height: 600px;\\n  overflow-y: scroll;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvX21hc3Rlci9fdXNlci91c2VybGlzdC9DOlxcVXNlcnNcXEFydW5cXERvY3VtZW50c1xcR2l0SHViXFxUTVNfQWRtaW5cXFRNU19XZWIvc3JjXFxhcHBcXHZpZXdzXFxfbWFzdGVyXFxfdXNlclxcdXNlcmxpc3RcXHVzZXJsaXN0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy9fbWFzdGVyL191c2VyL3VzZXJsaXN0L3VzZXJsaXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0ksaUJBQUE7RUFDQSxrQkFBQTtBQ0FKIiwiZmlsZSI6InNyYy9hcHAvdmlld3MvX21hc3Rlci9fdXNlci91c2VybGlzdC91c2VybGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4uU2Nyb2xsU3R5bGUge1xyXG4gICAgbWF4LWhlaWdodDogNjAwcHg7XHJcbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7XHJcbiAgfVxyXG4gICIsIi5TY3JvbGxTdHlsZSB7XG4gIG1heC1oZWlnaHQ6IDYwMHB4O1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG59Il19 */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { Address } from \"../../../../_models/address\";\r\nimport { User } from \"../../../../_models/User\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { UserService } from \"../../../../_services/user.service\";\r\n\r\n@Component({\r\n  selector: \"app-userlist\",\r\n  templateUrl: \"./userlist.component.html\",\r\n  styleUrls: [\"./userlist.component.scss\"]\r\n})\r\nexport class UserlistComponent implements OnInit {\r\n  Users: User[];\r\n  public dataModel: User;\r\n\r\n  show_addupdateUser: boolean = false;\r\n  show_UserInfo: boolean = false;\r\n  show_btnCreateUser: boolean = true;\r\n  show_lblAddNewUser: boolean = false;\r\n  show_lblEditUserDetail: boolean = false;\r\n  isCancelbtnhidden: boolean = true;\r\n  isResetbtnhidden: boolean = true;\r\n  userKey: string;\r\n  searchText: string;\r\n\r\n  constructor(\r\n    private usrService: UserService,\r\n    private router: Router,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.loadAllUsers();\r\n  }\r\n\r\n  loadAllUsers() {\r\n    this.usrService.getAll().subscribe(\r\n      data => (this.Users = data),\r\n      error => {\r\n        this.showError(\"Error in getting All user \", \"Error\");\r\n      },\r\n      () => console.log(\"Users list\", this.Users)\r\n    );\r\n  }\r\n\r\n  getUserById(userKey: string) {\r\n    this.usrService.getUserById(userKey).subscribe(\r\n      _userbyId => {\r\n        this.dataModel = _userbyId;\r\n        this.userKey = userKey;\r\n        this.show_UserInfo = true;\r\n        this.show_lblEditUserDetail = false;\r\n        this.show_lblAddNewUser = false;\r\n        this.show_addupdateUser = false;\r\n        this.show_btnCreateUser = true;\r\n        console.log(\"user by Id\", this.dataModel);\r\n      },\r\n      error => {\r\n        this.showError(\"Error in getting user \", \"Error\");\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n    // if (\r\n    //   this.dataModel.UserId == null ||\r\n    //   this.dataModel.UserId == undefined\r\n    // ) {\r\n    //  // this.showWarning(\"Please enter User Id.\", \"User\");\r\n    //  alert('Error!! \\n\\n' + 'Please enter User Id.');\r\n    //   return;\r\n    // }\r\n    // if (\r\n    //   this.dataModel.firstname == null ||\r\n    //   this.dataModel.firstname == undefined\r\n    // ) {\r\n    //  // this.showWarning(\"Please enter First Name.\", \"User\");\r\n    //   alert('Error!! \\n\\n' + 'Please enter First Name.');\r\n    //   return;\r\n    // }\r\n    // if (\r\n    //   this.dataModel.address.Address1 == null ||\r\n    //   this.dataModel.address.Address1 == undefined\r\n    // ) {\r\n    //  // this.showWarning(\"Please enter Address Line 1.\", \"User\");\r\n    //  alert('Error!! \\n\\n' + 'Please enter Address Line 1.');\r\n    //   return;\r\n    // }\r\n    // alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(this.dataModel))\r\n    // return;\r\n    if (this.userKey == null) {\r\n      this.usrService.CreateUser(this.dataModel).subscribe(\r\n        () => {\r\n          this.showSuccess(\"created successfully\", \"Create\");\r\n          this.loadAllUsers();\r\n          this.userKey = null;\r\n          this.show_addupdateUser = false;\r\n          this.show_btnCreateUser = true;\r\n          this.show_lblAddNewUser=false;\r\n        },\r\n        error => {\r\n          this.showError(\"Error in Creation\", \"Error\");\r\n        }\r\n      );\r\n    } else {\r\n      this.usrService.UpdateUser(this.dataModel).subscribe(\r\n        () => {\r\n          this.showSuccess(\"Updated successfully\", \"Update\");\r\n          this.loadAllUsers();\r\n          this.userKey = null;\r\n          this.show_addupdateUser = false;\r\n          this.show_btnCreateUser = true;\r\n          this.show_lblEditUserDetail=false;\r\n        },\r\n        error => {\r\n          this.showError(\"Error in Update\", \"Error\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  bindFormControls() {\r\n    this.show_addupdateUser = true;\r\n    this.show_UserInfo = false;\r\n    this.show_btnCreateUser = false;\r\n    this.show_lblAddNewUser = false;\r\n    this.show_lblEditUserDetail = true;\r\n  }\r\n\r\n  resetForm() {\r\n   // this.dataModel = null;\r\n    this.dataModel = new User();\r\n    this.dataModel.address = new Address();\r\n    this.userKey = null;\r\n  }\r\n\r\n  toggle() {\r\n    this.show_addupdateUser = true;\r\n    this.isResetbtnhidden = true;\r\n    this.show_btnCreateUser = false;\r\n    this.show_lblAddNewUser = true;\r\n    this.show_lblEditUserDetail = false;\r\n    this.show_UserInfo = false;\r\n    this.resetForm();\r\n  }\r\n\r\n  cancel() {\r\n    this.isResetbtnhidden = false;\r\n    if (this.dataModel != null) {\r\n      this.show_UserInfo = false;\r\n    }\r\n    this.show_addupdateUser = false;\r\n    this.show_btnCreateUser = true;\r\n    this.show_lblAddNewUser = false;\r\n    this.show_lblEditUserDetail = false;\r\n  }\r\n\r\n  showSuccess(message: string, title: string) {\r\n    this.toastr.success(message, title, { timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  showError(message: string, title: string) {\r\n    this.toastr.error(message, \"Oops!\", { timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  showWarning(message: string, title: string) {\r\n    this.toastr.warning(message, title,{ timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  showInfo(message: string, title: string) {\r\n    this.toastr.info(message, title, { timeOut: 2000, closeButton: true });\r\n  }\r\n  clear_search()\r\n  {\r\n    this.searchText = undefined;\r\n  }\r\n}\r\n","export default \".ScrollStyle {\\n  max-height: 600px;\\n  overflow-y: scroll;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvX21hc3Rlci9fdmVuZG9yL3ZlbmRvcmxpc3QvdmVuZG9ybGlzdC9DOlxcVXNlcnNcXEFydW5cXERvY3VtZW50c1xcR2l0SHViXFxUTVNfQWRtaW5cXFRNU19XZWIvc3JjXFxhcHBcXHZpZXdzXFxfbWFzdGVyXFxfdmVuZG9yXFx2ZW5kb3JsaXN0XFx2ZW5kb3JsaXN0XFx2ZW5kb3JsaXN0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy9fbWFzdGVyL192ZW5kb3IvdmVuZG9ybGlzdC92ZW5kb3JsaXN0L3ZlbmRvcmxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSxpQkFBQTtFQUNBLGtCQUFBO0FDQUoiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9fbWFzdGVyL192ZW5kb3IvdmVuZG9ybGlzdC92ZW5kb3JsaXN0L3ZlbmRvcmxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLlNjcm9sbFN0eWxlIHtcclxuICAgIG1heC1oZWlnaHQ6IDYwMHB4O1xyXG4gICAgb3ZlcmZsb3cteTogc2Nyb2xsO1xyXG4gIH1cclxuICAiLCIuU2Nyb2xsU3R5bGUge1xuICBtYXgtaGVpZ2h0OiA2MDBweDtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xufSJdfQ== */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Address } from \"../../../../../_models/address\";\r\nimport { VendorService } from \"../../../../../_services/vendor.service\";\r\nimport { Vendor } from \"../../../../../_models/vendor\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n@Component({\r\n  selector: \"app-vendorlist\",\r\n  templateUrl: \"./vendorlist.component.html\",\r\n  styleUrls: [\"./vendorlist.component.scss\"]\r\n})\r\nexport class VendorlistComponent implements OnInit {\r\n  vendors: Vendor[];\r\n  public dataModel: Vendor;\r\n  address: Address;\r\n  key: string;\r\n  searchText: string;\r\n  isCancelbtnhidden: boolean = true;\r\n  isResetbtnhidden: boolean = true;\r\n\r\n  show_divAddUpdate: boolean = false;\r\n  show_divInfo: boolean = false;\r\n  show_btnAdd: boolean = true;\r\n  show_lblAdd: boolean = false;\r\n  show_lblUpdate: boolean = false;\r\n\r\n  constructor(\r\n    private Service: VendorService,\r\n    private router: Router,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.dataModel = null;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.dataModel = new Vendor();\r\n    // this.dataModel.Address = new Address();\r\n    this.loadAllVendors();\r\n  }\r\n\r\n  loadAllVendors() {\r\n    this.Service.getVendors().subscribe(\r\n      data => (this.vendors = data),\r\n      error => console.log(error),\r\n      () => console.log(\"Get vendors\", this.vendors)\r\n    );\r\n  }\r\n  onSubmit() {\r\n    this.CreateVendor();\r\n  }\r\n  getVendorById(vendorkey: string) {\r\n    this.Service.GetVendorByID(vendorkey).subscribe(_updateVendor => {\r\n      this.dataModel = _updateVendor;\r\n      this.key = vendorkey;\r\n      this.show_divAddUpdate = false;\r\n      this.show_divInfo = true;\r\n      this.isCancelbtnhidden = true;\r\n      this.isResetbtnhidden = false;\r\n      console.log(\"Vendors list\", this.dataModel);\r\n    },error => {\r\n      this.showError(\"Error\", \"Error\");\r\n    });\r\n  }\r\n\r\n  CreateVendor() {\r\n    if (this.key == null) {\r\n      this.Service.createVendor(this.dataModel).subscribe(() => {\r\n        this.loadAllVendors();\r\n        this.showSuccess(\"created successfully\", \"Create\");\r\n        this.key = null;\r\n        this.show_divAddUpdate = false;\r\n      },error => {\r\n        this.showError(\"Error in vendor creation\", \"Error\");\r\n      });\r\n    } else {\r\n      this.dataModel.vendkey = this.key;\r\n      this.Service.updateVendor(this.dataModel).subscribe(() => {\r\n        this.loadAllVendors();\r\n        this.showSuccess(\"Updated successfully\", \"Update\");\r\n        this.key = null;\r\n        this.show_divAddUpdate = false;\r\n      },error => {\r\n        this.showError(\"Error in vendor update\", \"Error\");\r\n      });\r\n    }\r\n  }\r\n\r\n  resetForm() {\r\n    this.dataModel = null;\r\n    this.dataModel = new Vendor();\r\n    this.dataModel.Address = new Address();\r\n    this.key = null;\r\n  }\r\n\r\n  toggle() {\r\n    this.show_divAddUpdate = true;\r\n    this.show_lblAdd = true;\r\n    this.show_lblUpdate = false;\r\n    this.show_btnAdd = false;\r\n    this.isResetbtnhidden = true;\r\n    this.resetForm();\r\n  }\r\n\r\n  cancel() {\r\n    this.isResetbtnhidden = false;\r\n    this.show_divInfo = false;\r\n    this.show_divAddUpdate = false;\r\n    this.show_btnAdd = true;\r\n    this.show_lblAdd = false;\r\n    this.show_lblUpdate = false;\r\n    this.key = null;\r\n  }\r\n\r\n  bindFormControls() {\r\n    this.show_divAddUpdate = true;\r\n    this.show_divInfo = false;\r\n    this.show_btnAdd = false;\r\n    this.show_lblAdd = false;\r\n    this.show_lblUpdate = true;\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  numberOnly(event): boolean {\r\n    const charCode = event.which ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n\r\n  showSuccess(message: string, title: string) {\r\n    this.toastr.success(message, title, { timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  showError(message: string, title: string) {\r\n    this.toastr.error(message, \"Oops!\", { timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  showWarning(message: string, title: string) {\r\n    this.toastr.warning(message, title,{ timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  showInfo(message: string, title: string) {\r\n    this.toastr.info(message, title, { timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  clear_search()\r\n  {\r\n    this.searchText = undefined;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL19tYXN0ZXIvdXNlcnBlcm1pc3Npb25zL3VzZXJwZXJtaXNzaW9ucy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { User } from \"../../../_models/User\";\nimport { UserService } from \"../../../_services/user.service\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { UserPermissions } from \"../../../_models/UserPermissions\";\nimport { UserpermissionService } from \"../../../_services/userpermission.service\";\nimport { UserRole } from \"../../../_models/UserRole\";\n\n@Component({\n  selector: \"app-userpermissions\",\n  templateUrl: \"./userpermissions.component.html\",\n  styleUrls: [\"./userpermissions.component.scss\"]\n})\nexport class UserpermissionsComponent implements OnInit {\n  constructor(\n    private usrService: UserService,\n    private toastr: ToastrService,\n    private userpermission: UserpermissionService\n  ) {}\n\n  Users: User[];\n  roles: UserRole[];\n  role: UserRole;\n  UserPermissions: UserPermissions[];\n  AddUpdateUserPermissions: UserPermissions[];\n  temp_AddUpdateUserPermissions: UserPermissions[];\n  \n\n  show_DivAddUpdate: boolean = false;\n  show_DivInfo: boolean = false;\n  show_btnAdd: boolean = false;\n  show_btnEdit: boolean = false;\n  show_AddCancel: boolean = false;\n\n  userKey: string;\n  roleKey: string;\n  roleDescription: string;\n  IsNew: boolean;\n  searchText: string;\n\n  ngOnInit() {\n    this.loadAllUsers();\n    this.loadMenus();\n    this.loadRoles();\n  }\n  loadAllUsers() {\n    this.usrService.getAll().subscribe(\n      data => (this.Users = data),\n      error => {\n        this.showError(\"Error in getting All user \", \"Error\");\n      },\n      () => console.log(\"Users list\", this.Users)\n    );\n  }\n  loadMenus() {\n    this.userpermission.getMenus().subscribe(\n      data => {\n        this.AddUpdateUserPermissions = this.temp_AddUpdateUserPermissions = data;\n        console.log(\"AddUpdateUserPermissions \", this.AddUpdateUserPermissions);\n      },\n      error => {\n        this.showError(\"Error in getting user \", \"Error\");\n      }\n    );\n  }\n  loadRoles() {\n    this.userpermission.getRoles().subscribe(\n      data => (this.roles = data),\n      error => {\n        this.showError(\"Error in getting Roles \", \"Error\");\n      },\n      () => console.log(\"User roles\", this.roles)\n    );\n  }\n\n  fnNew_click() {\n    this.IsNew = true;\n    this.show_DivAddUpdate = true;\n    this.show_DivInfo = false;\n    this.show_AddCancel = true;\n  }\n  fnUpdate_click() {\n    this.IsNew = false;\n    this.show_DivAddUpdate = true;\n    this.show_DivInfo = false;\n    this.show_AddCancel = true;\n\n    this.AddUpdateUserPermissions = this.UserPermissions;\n  }\n\n  cancel() {\n    this.show_AddCancel = false;\n    this.show_DivAddUpdate = false;\n    this.show_DivInfo = true;\n\n    this.AddUpdateUserPermissions = null;\n    this.AddUpdateUserPermissions = new Array<UserPermissions>();\n  }\n  clear() {\n    this.show_btnEdit = false;\n    this.show_btnAdd = false;\n    this.show_DivAddUpdate = false;\n    this.show_DivInfo = false;\n    this.show_DivAddUpdate = false;\n    this.show_AddCancel = false;\n  }\n\n  drpUsers_ChangedEvent(UserKey: any) {\n    if (UserKey == 0) {\n      this.clear();\n      return;\n    }\n    this.userKey = UserKey;\n    this.getUserRoleByUserkey(UserKey);     \n    this.getPermissionsByUser(UserKey);\n  }\n\n  drpRoles_ChangedEvent(RoleKey: any) {\n    if (RoleKey == 0) {\n      return;\n    }\n    this.roleKey = RoleKey;\n  }\n\n  getPermissionsByUser(UserKey: string) {\n    this.userpermission.getpermissionsByuserkey(UserKey).subscribe(\n      data => {\n        this.UserPermissions = data;\n        console.log(\"UserPermissions \", this.UserPermissions);\n        this.show_AddCancel = false;\n        if (this.UserPermissions.length > 0) {\n          this.show_btnEdit = true;\n          this.show_btnAdd = false;\n          this.show_DivAddUpdate = false;\n          this.show_DivInfo = true;\n        }\n        if (this.UserPermissions.length == 0) {\n          this.show_btnEdit = false;\n          this.show_btnAdd = true;\n          this.show_DivAddUpdate = false;\n          this.show_DivInfo = false;\n        }\n      },\n      error => {\n        this.showError(\"Error in getting user \", \"Error\");\n      }\n    );\n  }\n\n  getUserRoleByRolekey(RoleKey: string) {\n    this.userpermission.getUserRoleByRolekey(RoleKey).subscribe(\n      data => {\n        this.role = data;\n      },\n      error => {\n        this.showError(\"Error in getting role \", \"Error\");\n      }\n    );\n  }\n\n  getUserRoleByUserkey(UserKey: string) {\n    this.userpermission.getUserRoleByUserkey(UserKey).subscribe(\n      data => {\n        this.role = data;\n         this.role.description = this.roles.find(x => x.rolekey == this.role.rolekey).description;\n    //this.role.rolekey = test.rolekey;\n  //  this.role.description = test.description;\n        console.log(\"Get_Role_ByUserkey\",  this.role );\n      },\n      error => {\n        this.showError(\"Error in getting role \", \"Error\");\n      }\n    );\n  }\n\n  onViewCheckboxChange(option, event) {\n    if (event.target.checked) {\n      for (var i = 0; i < this.AddUpdateUserPermissions.length; i++) {\n        if (this.AddUpdateUserPermissions[i].Modulename == option.Modulename) {\n          this.AddUpdateUserPermissions[i].fView = 1;\n          return;\n        }\n      }\n    } else {\n      for (var i = 0; i < this.AddUpdateUserPermissions.length; i++) {\n        if (this.AddUpdateUserPermissions[i].Modulename == option.Modulename) {\n          this.AddUpdateUserPermissions[i].fView = 0;\n          return;\n        }\n      }\n    }\n  }\n  onNewCheckboxChange(option, event) {\n    if (event.target.checked) {\n      for (var i = 0; i < this.AddUpdateUserPermissions.length; i++) {\n        if (this.AddUpdateUserPermissions[i].Modulename == option.Modulename) {\n          this.AddUpdateUserPermissions[i].fNew = 1;\n          return;\n        }\n      }\n    } else {\n      for (var i = 0; i < this.AddUpdateUserPermissions.length; i++) {\n        if (this.AddUpdateUserPermissions[i].Modulename == option.Modulename) {\n          this.AddUpdateUserPermissions[i].fNew = 0;\n          return;\n        }\n      }\n    }\n  }\n  onEditCheckboxChange(option, event) {\n    if (event.target.checked) {\n      for (var i = 0; i < this.AddUpdateUserPermissions.length; i++) {\n        if (this.AddUpdateUserPermissions[i].Modulename == option.Modulename) {\n          this.AddUpdateUserPermissions[i].fEdit = 1;\n          return;\n        }\n      }\n    } else {\n      for (var i = 0; i < this.AddUpdateUserPermissions.length; i++) {\n        if (this.AddUpdateUserPermissions[i].Modulename == option.Modulename) {\n          this.AddUpdateUserPermissions[i].fEdit = 0;\n          return;\n        }\n      }\n    }\n  }\n  onDeleteCheckboxChange(option, event) {\n    if (event.target.checked) {\n      for (var i = 0; i < this.AddUpdateUserPermissions.length; i++) {\n        if (this.AddUpdateUserPermissions[i].Modulename == option.Modulename) {\n          this.AddUpdateUserPermissions[i].fDelete = 1;\n          return;\n        }\n      }\n    } else {\n      for (var i = 0; i < this.AddUpdateUserPermissions.length; i++) {\n        if (this.AddUpdateUserPermissions[i].Modulename == option.Modulename) {\n          this.AddUpdateUserPermissions[i].fDelete = 0;\n          return;\n        }\n      }\n    }\n  }\n\n  onSubmit() {\n    if (this.userKey == \"0\") {\n      this.showError(\"Please select User\", \"User\");\n      return;\n    }\n    if (this.roleKey == \"0\" || this.roleKey == undefined) {\n      this.showError(\"Please select Role.\", \"User\");\n      return;\n    }\n\n    var role: any = {};\n    role.userkey = this.userKey;\n    role.rolekey = this.roleKey;\n\n    if (this.IsNew) {\n      //Adding role\n      this.userpermission.AddUserRole(role).subscribe(\n        () => {\n          // this.showSuccess(\"Permissions Created\", \"Add Permission\");\n        },\n        error => {\n          this.showError(\"Error in Creation\", \"Error\");\n          return;\n        }\n      );\n\n      //adding user permissions\n      for (var i = 0; i < this.AddUpdateUserPermissions.length; i++) {\n        this.AddUpdateUserPermissions[i].UserKey = this.userKey;\n      }\n\n      this.userpermission\n        .AddUserPermissions(this.AddUpdateUserPermissions)\n        .subscribe(\n          () => {\n            this.AddUpdateUserPermissions = null;\n            this.AddUpdateUserPermissions = new Array<UserPermissions>();\n            this.AddUpdateUserPermissions = this.temp_AddUpdateUserPermissions;\n          },\n          error => {\n            this.showError(\"Error in Creation\", \"Error\");\n            return;\n          }\n        );\n\n      this.showSuccess(\"Roles & Permission created.\", \"Roles & Permission\");\n    } else {\n      //Updating User Role\n      this.userpermission.UpdateUserRole(role).subscribe(\n        () => {\n          // this.showSuccess(\"Permissions Created\", \"Add Permission\");\n        },\n        error => {\n          this.showError(\"Error in Update\", \"Error\");\n        }\n      );\n\n      this.userpermission\n        .UpdateUserPermissions(this.AddUpdateUserPermissions)\n        .subscribe(\n          () => {\n            this.AddUpdateUserPermissions = null;\n            this.AddUpdateUserPermissions = new Array<UserPermissions>();\n            this.AddUpdateUserPermissions = this.temp_AddUpdateUserPermissions;\n\n            this.getPermissionsByUser(this.userKey);\n          },\n          error => {\n            this.showError(\"Error in Update\", \"Error\");\n          }\n        );\n\n      this.showSuccess(\"Permissions Updated.\", \"Update Permission\");\n    }\n  }\n\n  showSuccess(message: string, title: string) {\n    this.toastr.success(message, title, { timeOut: 2000, closeButton: true });\n  }\n\n  showError(message: string, title: string) {\n    this.toastr.error(message, \"Oops!\", { timeOut: 2000, closeButton: true });\n  }\n\n  showWarning(message: string, title: string) {\n    this.toastr.warning(message, title, { timeOut: 2000, closeButton: true });\n  }\n\n  showInfo(message: string, title: string) {\n    this.toastr.info(message, title, { timeOut: 2000, closeButton: true });\n  }\n}\n","export default \".card-header {\\n  height: 50px;\\n}\\n\\n.card-body {\\n  height: 165px;\\n}\\n\\n.btn {\\n  position: relative;\\n  margin: -5px 0px 24px;\\n}\\n\\n#drpcustomer {\\n  max-width: 200px;\\n  min-width: 200px;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n.menuItems {\\n  max-height: 200px;\\n  overflow-y: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvY2hpbGQvX2FkZHJlc3MvY3VzdG9tZXIvQzpcXFVzZXJzXFxBcnVuXFxEb2N1bWVudHNcXEdpdEh1YlxcVE1TX0FkbWluXFxUTVNfV2ViL3NyY1xcYXBwXFx2aWV3c1xcY2hpbGRcXF9hZGRyZXNzXFxjdXN0b21lclxcY3VzdG9tZXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3ZpZXdzL2NoaWxkL19hZGRyZXNzL2N1c3RvbWVyL2N1c3RvbWVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQWEsWUFBQTtBQ0ViOztBRERBO0VBQVcsYUFBQTtBQ0tYOztBRENBO0VBQ0ksa0JBQUE7RUFDQSxxQkFBQTtBQ0VKOztBREFBO0VBQ0ksZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0VBQ0EsdUJBQUE7QUNHSjs7QURBQTtFQUNJLGlCQUFBO0VBQ0EsZ0JBQUE7QUNHSiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2NoaWxkL19hZGRyZXNzL2N1c3RvbWVyL2N1c3RvbWVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQtaGVhZGVye2hlaWdodDogNTBweDt9XHJcbi5jYXJkLWJvZHl7aGVpZ2h0OiAxNjVweDt9XHJcblxyXG4vLyAuZm9ybS1jb250cm9sIHtcclxuLy8gICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuLy8gICAgIG1hcmdpbjogLTIwcHggMHB4IDI0cHg7XHJcbi8vIH1cclxuLmJ0biB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBtYXJnaW46IC01cHggMHB4IDI0cHg7XHJcbn1cclxuI2RycGN1c3RvbWVye1xyXG4gICAgbWF4LXdpZHRoOiAyMDBweDtcclxuICAgIG1pbi13aWR0aDogMjAwcHg7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7ICAgIFxyXG59XHJcblxyXG4ubWVudUl0ZW1zIHsgICAgICAgICBcclxuICAgIG1heC1oZWlnaHQ6IDIwMHB4O1xyXG4gICAgb3ZlcmZsb3cteTogYXV0bztcclxuICB9XHJcbiAgIiwiLmNhcmQtaGVhZGVyIHtcbiAgaGVpZ2h0OiA1MHB4O1xufVxuXG4uY2FyZC1ib2R5IHtcbiAgaGVpZ2h0OiAxNjVweDtcbn1cblxuLmJ0biB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luOiAtNXB4IDBweCAyNHB4O1xufVxuXG4jZHJwY3VzdG9tZXIge1xuICBtYXgtd2lkdGg6IDIwMHB4O1xuICBtaW4td2lkdGg6IDIwMHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbn1cblxuLm1lbnVJdGVtcyB7XG4gIG1heC1oZWlnaHQ6IDIwMHB4O1xuICBvdmVyZmxvdy15OiBhdXRvO1xufSJdfQ== */\"","import {\r\n  Component,\r\n  OnInit,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  ChangeDetectorRef\r\n} from \"@angular/core\";\r\nimport { Address } from \"../../../../_models/address\";\r\nimport { AddressService } from \"../../../../_services/address.service\";\r\nimport { MasterService } from \"../../../../_services/master.service\";\r\nimport { CustomerService } from \"../../../../_services/customer.service\";\r\nimport { Customer } from \"./../../../../_models/customer\";\r\n\r\n@Component({\r\n  selector: \"app-customer\",\r\n  templateUrl: \"./customer.component.html\",\r\n  styleUrls: [\"./customer.component.scss\"]\r\n})\r\nexport class CustomerComponent implements OnInit {\r\n  billtoCustomerName: string = \"No Customer Selected\";\r\n  customer: Customer[];\r\n  customerFilter : Customer[];\r\n  addressTobind: Address = new Address();\r\n\r\n  @Input() Type: number;\r\n  @Input() AddressType: number;\r\n  @Input() customerKeyTobind: string;\r\n  @Output() CustomerSelectedOutput = new EventEmitter<Customer>();   \r\n  @Output() OrdernoGenerated = new EventEmitter<string>();\r\n  @Input() editmode: boolean;\r\n\r\n  customercount: any;\r\n  Orderno: any;\r\n  creditCheck: boolean=undefined;\r\n  searchText:string;\r\n\r\n\r\n  selectedCustomer: Customer;// = new Customer();\r\n  constructor(\r\n    private service: CustomerService,\r\n    private master: MasterService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n   \r\n    this.service\r\n      .getCustomers()\r\n      .subscribe(\r\n        data => (this.customer =this.customerFilter= data),\r\n        error => console.log(error),\r\n        () => console.log(\"Get customer complete\", this.customer)\r\n      );\r\n  }\r\n\r\n  ngOnChanges() {\r\n   \r\n    if (this.customerKeyTobind != undefined) {\r\n      this.service.getCustomers().subscribe(\r\n        (data: any) => {\r\n          this.customer = this.customerFilter = data;\r\n          if (this.customerKeyTobind) {\r\n            this.selectedCustomer = this.customer.find(\r\n              x => x.CustomerKey === this.customerKeyTobind\r\n            );\r\n            this.billtoCustomerName = this.selectedCustomer.CustName;\r\n          }\r\n        },\r\n        error => console.log(error),\r\n        () => console.log(\"Get customer complete\")\r\n      );\r\n    }\r\n  }\r\n\r\n  onSelect(CustomerSelected: Customer): void {\r\n    this.selectedCustomer = CustomerSelected;\r\n    this.billtoCustomerName = this.selectedCustomer.CustName;\r\n    this.creditCheck = this.selectedCustomer.CreditCheck;\r\n    this.customercount = 0;\r\n    console.log(\"Customer Details with Address:\", this.selectedCustomer);\r\n    \r\n    this.master.getMaxcount_Customer(this.selectedCustomer.CustomerKey).subscribe(\r\n      data => {\r\n        this.customercount = data;\r\n\r\n        var year = new Date();\r\n        var autono = this.pad(this.customercount + 1, 2);\r\n    \r\n        let x = this.selectedCustomer.CustName.split(' ');\r\n        console.log(\"x : \", x);\r\n        console.log(\"x[1].length :\", x.length);\r\n        if (x.length == 1) {\r\n          this.Orderno =\r\n            x[0].substr(0, 4).toUpperCase() +\r\n            year\r\n              .getUTCFullYear()\r\n              .toString()\r\n               +\"-\"+\r\n            autono;\r\n          console.log(\"length is 1\");\r\n        } else {\r\n          this.Orderno =\r\n            x[0].substr(0, 2).toUpperCase() +\r\n            x[1].substr(0, 2).toUpperCase()  +\r\n            year\r\n              .getUTCFullYear()\r\n              .toString()\r\n               +\"-\"+\r\n            autono;\r\n          console.log(\"length is > 1\");\r\n        }\r\n        let date = new Date(Date.now());\r\n        \r\nthis.CustomerSelectedOutput.emit(this.selectedCustomer);       \r\n        this.OrdernoGenerated.emit(this.Orderno+\"-\"+date.getHours()+date.getMinutes()+date.getSeconds());\r\n      },\r\n      error => console.log(error),\r\n      () => console.log(\"Get customercount\", this.customercount)\r\n    );\r\n  }\r\n  pad(num: number, size: number): string {\r\n    let s = num + \"\";\r\n    while (s.length < size) s = \"0\" + s;\r\n    return s;\r\n  }\r\n        // Calling this enables the component\r\n    onEnableComponent() {\r\n      //this.disabled = false;\r\n  }\r\n\r\n  // Calling this disables the component\r\n  onDisableComponent() {\r\n     // this.disabled = true;\r\n  }\r\n  onSearchChange(searchValue: string): void {  \r\n    console.log(searchValue);\r\n     if(!searchValue){\r\n       this.assignCopy();\r\n   } // when nothing has typed\r\n   this.customerFilter = this.customer.filter(item => item.CustName.toLowerCase().indexOf(searchValue.toLowerCase()) !== -1\r\n   )\r\n  }\r\n  assignCopy(){\r\n   this.customerFilter = Object.assign([], this.customer);\r\n}\r\n}\r\n","export default \"#drpbroker {\\n  max-width: 150px;\\n  min-width: 150px;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n.btn {\\n  min-width: 80px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvY2hpbGQvX2Jyb2tlci9DOlxcVXNlcnNcXEFydW5cXERvY3VtZW50c1xcR2l0SHViXFxUTVNfQWRtaW5cXFRNU19XZWIvc3JjXFxhcHBcXHZpZXdzXFxjaGlsZFxcX2Jyb2tlclxcYnJva2VyLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy9jaGlsZC9fYnJva2VyL2Jyb2tlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLHVCQUFBO0FDQ0o7O0FERUE7RUFDSSxlQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9jaGlsZC9fYnJva2VyL2Jyb2tlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNkcnBicm9rZXJ7XHJcbiAgICBtYXgtd2lkdGg6IDE1MHB4O1xyXG4gICAgbWluLXdpZHRoOiAxNTBweDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpczsgICAgXHJcbn1cclxuXHJcbi5idG4ge1xyXG4gICAgbWluLXdpZHRoOiA4MHB4O1xyXG59IiwiI2RycGJyb2tlciB7XG4gIG1heC13aWR0aDogMTUwcHg7XG4gIG1pbi13aWR0aDogMTUwcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xufVxuXG4uYnRuIHtcbiAgbWluLXdpZHRoOiA4MHB4O1xufSJdfQ== */\"","import { Component, OnInit, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { Broker } from \"../../../_models/broker\";\r\nimport { BrokerService } from \"../../../_services/broker.service\";\r\n@Component({\r\n  selector: \"app-broker\",\r\n  templateUrl: \"./broker.component.html\",\r\n  styleUrls: [\"./broker.component.scss\"]\r\n})\r\nexport class BrokerComponent implements OnInit {\r\n  broker: Broker[];\r\n  brokerName: string = \"Select Broker\";\r\n  brokerKey: string;\r\n  selectedBroker: Broker;\r\n  @Input() brokerKeyTobind: string;\r\n  @Output() BrokerSelectedOutput = new EventEmitter<string>();\r\n  constructor(private service: BrokerService) {}\r\n\r\n  ngOnInit() {\r\n    // this.broker = [{ \"BrokerName\": \"Maersk Line\",\r\n    //   \"BrokerId\": \"ML0023\",\r\n    //   \"BrokerKey\":\"ae24e3ba-5aad-11e9-94fc-332aa5298740\",\r\n    //   \"Status\":\"1\"}];\r\n\r\n    this.service\r\n      .GetBrokers()\r\n      .subscribe(\r\n        data => (this.broker = data),\r\n        error => console.log(error),\r\n        () => console.log(\"Get brokers complete\")\r\n      );\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.brokerKeyTobind != \"\") {\r\n      this.service.GetBrokers().subscribe(\r\n        (data: any) => {\r\n          this.broker = data;\r\n          this.selectedBroker = this.broker.find(\r\n            x => x.BrokerKey === this.brokerKeyTobind\r\n          );\r\n          this.brokerName = this.selectedBroker.BrokerName;\r\n        },\r\n        error => console.log(error)\r\n      );    \r\n    }\r\n  }\r\n\r\n  onSelect(brokerSelected: Broker): void {\r\n    this.selectedBroker = brokerSelected;\r\n    this.brokerName = brokerSelected.BrokerName;\r\n    this.brokerKey = brokerSelected.BrokerKey;\r\n    this.BrokerSelectedOutput.emit(brokerSelected.BrokerKey);\r\n  }\r\n}\r\n","export default \"#drpcompany {\\n  max-width: 150px;\\n  min-width: 150px;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n.btn {\\n  min-width: 80px;\\n}\\n\\n.menuItems {\\n  max-height: 200px;\\n  overflow-y: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvY2hpbGQvX2NvbXBhbnkvY29tcGFueS9DOlxcVXNlcnNcXEFydW5cXERvY3VtZW50c1xcR2l0SHViXFxUTVNfQWRtaW5cXFRNU19XZWIvc3JjXFxhcHBcXHZpZXdzXFxjaGlsZFxcX2NvbXBhbnlcXGNvbXBhbnlcXGNvbXBhbnkuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3ZpZXdzL2NoaWxkL19jb21wYW55L2NvbXBhbnkvY29tcGFueS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLHVCQUFBO0FDQ0o7O0FERUE7RUFDSSxlQUFBO0FDQ0o7O0FERUE7RUFDSSxpQkFBQTtFQUNBLGdCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9jaGlsZC9fY29tcGFueS9jb21wYW55L2NvbXBhbnkuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjZHJwY29tcGFueXtcclxuICAgIG1heC13aWR0aDogMTUwcHg7XHJcbiAgICBtaW4td2lkdGg6IDE1MHB4O1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOyAgICBcclxufVxyXG5cclxuLmJ0biB7XHJcbiAgICBtaW4td2lkdGg6IDgwcHg7XHJcbn1cclxuXHJcbi5tZW51SXRlbXMgeyAgICAgICAgIFxyXG4gICAgbWF4LWhlaWdodDogMjAwcHg7XHJcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xyXG4gIH0iLCIjZHJwY29tcGFueSB7XG4gIG1heC13aWR0aDogMTUwcHg7XG4gIG1pbi13aWR0aDogMTUwcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xufVxuXG4uYnRuIHtcbiAgbWluLXdpZHRoOiA4MHB4O1xufVxuXG4ubWVudUl0ZW1zIHtcbiAgbWF4LWhlaWdodDogMjAwcHg7XG4gIG92ZXJmbG93LXk6IGF1dG87XG59Il19 */\"","import { Component, OnInit, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { Address } from \"../../../../_models/address\";\r\nimport { AddressService } from \"../../../../_services/address.service\";\r\nimport { MasterService } from \"../../../../_services/master.service\";\r\n\r\n@Component({\r\n  selector: \"app-company\",\r\n  templateUrl: \"./company.component.html\",\r\n  styleUrls: [\"./company.component.scss\"]\r\n})\r\nexport class CompanyComponent implements OnInit {\r\n  billtoCompanyName: string = \"Select\";\r\n  AddrName: string = \"\";\r\n  company: Address[];\r\n  companyFilter: Address[];\r\n  addressTobind: Address = new Address();\r\n\r\n  @Input() Type: number;\r\n  @Input() AddressType: number;\r\n  @Input() addressKeyTobind: string;\r\n  @Output() CustomerSelectedOutput = new EventEmitter<string>();\r\n  @Output() OrdernoGenerated = new EventEmitter<string>();\r\n\r\n  customercount: any;\r\n  Orderno: any;\r\n  searchText:string;\r\n\r\n  selectedCompany: Address;// = new Address();\r\n  constructor(private service: AddressService, private master: MasterService) {}\r\n\r\n  ngOnInit() {\r\n   // console.log(this.addressKeyTobind);\r\n    this.service\r\n      .getAddress(this.Type)\r\n      .subscribe(\r\n        data => (this.company = this.companyFilter=data),\r\n        error => console.log(error),\r\n        () => console.log(\"Get customer complete\",this.company)\r\n      );\r\n\r\n    // if (this.addressKeyTobind != undefined) {\r\n    //   this.addressTobind = this.company.find(\r\n    //     x => x.AddrKey === this.addressKeyTobind\r\n    //   );\r\n    //   console.log(this.addressTobind);\r\n    //   this.onSelect(this.addressTobind);\r\n    // }\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.addressKeyTobind != \"\") {\r\n      this.service.getAddress(this.Type).subscribe(\r\n        (data: any) => {\r\n          this.company =this.companyFilter= data;\r\n          if (this.addressKeyTobind) {\r\n            this.selectedCompany = this.company.find(\r\n              x => x.AddrKey === this.addressKeyTobind\r\n            );\r\n            this.billtoCompanyName = this.selectedCompany.Name;\r\n          }\r\n        },\r\n        error => console.log(error)        \r\n      );\r\n    }\r\n\r\n    if (this.AddressType === 1) {\r\n      this.AddrName = \"Consignee\";\r\n    }\r\n    if (this.AddressType === 2) {\r\n      this.AddrName = \"Pick-up   \";\r\n    }\r\n    if (this.AddressType === 3) {\r\n      this.AddrName = \"Delivery \";\r\n    }\r\n    if (this.AddressType === 4) {\r\n      this.AddrName = \"Return   \";\r\n    }\r\n  }\r\n\r\n  onSelect(CustomerSelected: Address): void {\r\n    this.selectedCompany = CustomerSelected;\r\n    this.billtoCompanyName = this.selectedCompany.Name;\r\n    console.log(this.selectedCompany);\r\n\r\n    // this.master.getMaxcount_Customer(this.selectedCompany.Name).subscribe(\r\n    //   data => {\r\n    //     this.customercount = data;\r\n\r\n    //     var year = new Date();\r\n    //     var autono = this.pad(this.customercount + 1, 4);\r\n    //     this.Orderno =\r\n    //       this.selectedCompany.Name.substr(0, 2).toUpperCase() +\r\n    //       year\r\n    //         .getUTCFullYear()\r\n    //         .toString()\r\n    //         .substr(2, 2) +\r\n    //       autono;\r\n\r\n    //     this.CustomerSelectedOutput.emit(CustomerSelected.AddrKey);\r\n    //     this.OrdernoGenerated.emit(this.Orderno);\r\n    //   },\r\n    //   error => console.log(error),\r\n    //   () => console.log(\"Get customercount\", this.customercount)\r\n    // );\r\n\r\n    this.CustomerSelectedOutput.emit(CustomerSelected.AddrKey);\r\n  }\r\n  pad(num: number, size: number): string {\r\n    let s = num + \"\";\r\n    while (s.length < size) s = \"0\" + s;\r\n    return s;\r\n  }\r\n\r\n  onSearchChange(searchValue: string): void {  \r\n    console.log(searchValue);\r\n     if(!searchValue){\r\n       this.assignCopy();\r\n   } // when nothing has typed\r\n   this.companyFilter = this.company.filter(item => item.Name.toLowerCase().indexOf(searchValue.toLowerCase()) !== -1\r\n   )\r\n  }\r\n  assignCopy(){\r\n   this.companyFilter = Object.assign([], this.company);\r\n}\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2NoaWxkL2FkZHJlc3MvYWRkcmVzcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { Address } from \"../../../_models/address\";\r\nimport { City } from \"../../../_models/city\";\r\nimport { CityService } from \"../../../_services/city.service\";\r\nimport { identifierModuleUrl } from \"@angular/compiler\";\r\n\r\n@Component({\r\n  selector: \"app-address\",\r\n  templateUrl: \"./address.component.html\",\r\n  styleUrls: [\"./address.component.scss\"],\r\n})\r\nexport class AddressComponent implements OnInit {\r\n  @Input() Address: Address;\r\n  @Output() AddressOut = new EventEmitter<Address>();\r\n\r\n  citylist: City[];\r\n  CityFilter: City[];\r\n  city:City;\r\n  citySelected: string;\r\n  IsNoEntry: boolean = false;\r\n  constructor(private cityService: CityService) {}\r\n\r\n  ngOnInit() {\r\n    this.loadAllCity();   \r\n  }\r\n\r\n  BindCity()\r\n  {\r\n    if(this.Address != null|| this.Address!= undefined )\r\n    {\r\n      //this.citySelected = this.citylist.find((city) =>city.citykey).cityname;   \r\n      this.city = this.citylist.find(x => x.cityname == this.Address.City);   \r\n      this.citySelected = this.city.cityname;\r\n      console.log(\"City Selected : \",this.citySelected);\r\n    }\r\n  }\r\n\r\n  loadAllCity() {\r\n    this.cityService.GetCity().subscribe(\r\n      (data) => (this.citylist = this.CityFilter = data,this.BindCity()),\r\n      (error) => console.log(error),\r\n      () => console.log(\"Get citylist\", this.citylist)\r\n    );\r\n  }\r\n\r\n  onCitySelect(citySelected: City): void {\r\n    this.citySelected = citySelected.cityname;\r\n    this.Address.City = citySelected.citykey;\r\n    this.AddressOut.emit(this.Address);\r\n  }\r\n\r\n  onCitySearchChange(searchValue: string): void {\r\n    if (!searchValue) {\r\n      this.LoadCitylist();\r\n    } // when nothing has typed\r\n    this.CityFilter = this.citylist.filter(\r\n      (city) =>\r\n        city.cityname.toLowerCase().indexOf(searchValue.toLowerCase()) !== -1\r\n    );\r\n    if (this.CityFilter.length == 0) {\r\n      this.IsNoEntry = true;\r\n    } else {\r\n      this.IsNoEntry = false;\r\n    }\r\n  }\r\n  LoadCitylist() {\r\n    this.CityFilter = Object.assign([], this.citylist);\r\n  }\r\n\r\n  onAddress1KeyPress(event: any) {\r\n    this.Address.Address1 = event.target.value;\r\n    this.AddressOut.emit(this.Address);\r\n  }\r\n  onAddress2KeyPress(event: any) {\r\n    this.Address.Address2 = event.target.value;\r\n    this.AddressOut.emit(this.Address);\r\n  }\r\n  onStateKeyPress(event: any) {\r\n    this.Address.State = event.target.value;\r\n    this.AddressOut.emit(this.Address);\r\n  }\r\n  onZipKeyPress(event: any) {\r\n    this.Address.Zip = event.target.value;\r\n    this.AddressOut.emit(this.Address);\r\n  }\r\n  onCountryKeyPress(event: any) {\r\n    this.Address.Country = event.target.value;\r\n    this.AddressOut.emit(this.Address);\r\n  }\r\n  onWebsiteKeyPress(event: any) {\r\n    this.Address.Website = event.target.value;\r\n    this.AddressOut.emit(this.Address);\r\n  }\r\n  onPhone1KeyPress(event: any) {\r\n    this.Address.Phone = event.target.value;\r\n    this.AddressOut.emit(this.Address);\r\n  }\r\n  onPhone2KeyPress(event: any) {\r\n    this.Address.Phone2 = event.target.value;\r\n    this.AddressOut.emit(this.Address);\r\n  }\r\n  onFaxKeyPress(event: any) {\r\n    this.Address.Fax = event.target.value;\r\n    this.AddressOut.emit(this.Address);\r\n  }\r\n  onEmail1KeyPress(event: any) {\r\n    this.Address.Email = event.target.value;\r\n    this.AddressOut.emit(this.Address);\r\n  }\r\n  onEmail2KeyPress(event: any) {\r\n    this.Address.Email2 = event.target.value;\r\n    this.AddressOut.emit(this.Address);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2NoaWxkL2JpbGxpbmdyYXRlcy9iaWxsaW5ncmF0ZXMuY29tcG9uZW50LnNjc3MifQ== */\"","import { OnInit, Component } from '@angular/core';\r\n\r\n//import { ModalDirective } from 'ngx-bootstrap/modal';\r\n\r\n@Component({\r\n  selector: 'app-billingrates',\r\n  templateUrl: './billingrates.component.html',\r\n  styleUrls: ['./billingrates.component.scss']\r\n})\r\nexport class BillingratesComponent implements OnInit {\r\n  public billingModal;\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2NoaWxkL2NvbnRhaW5lci9jb250YWluZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Output, EventEmitter, Input } from \"@angular/core\";\r\nimport { Order_details } from \"../../../_models/order_details\";\r\n//import { BsDatepickerConfig } from \"ngx-bootstrap/datepicker\";\r\nimport { MasterService } from \"../../../_services/master.service\";\r\nimport { Containersize } from \"../../../common/master\";\r\n\r\n@Component({\r\n  selector: \"app-container\",\r\n  templateUrl: \"./container.component.html\",\r\n  styleUrls: [\"./container.component.scss\"]\r\n})\r\nexport class ContainerComponent implements OnInit {\r\n  //bsConfig: Partial<BsDatepickerConfig>;\r\n  @Input() public ContainerDetails: Array<Order_details> = [];\r\n  @Input() isContainerAttributeVisible: boolean = false;\r\n  private AddContainerDetails: Array<Order_details> = [];\r\n  private newAttribute: any = {};\r\n\r\n  @Output() ContainerDetailsOutput = new EventEmitter<any>();\r\n  containersizelist: Containersize[];\r\n  selectedcontainer: Order_details;\r\n\r\n  dropdownList = [];\r\n  selectedItems = [];\r\n  dropdownSettings = {};\r\n\r\n  ContainerSize: string;\r\n  containerSizeDesc: string;\r\n  ContainerNo: string;\r\n  Chassis: string;\r\n  SealNo: string;\r\n  Weight: string;\r\n  Comments: string;\r\n  CommentItems = new Array();\r\n\r\n  hazard:string;trixale:string;overweight:string;needstobescaled:string;\r\n\r\n  constructor(private service: MasterService) {}\r\n\r\n  ngOnInit() {\r\n    // this.bsConfig = Object.assign(\r\n    //   {},\r\n    //   { containerClass: \"theme-orange\" },\r\n    //   { dateInputFormat: \"MM/DD/YYYY\" }\r\n    // );\r\n\r\n    this.service\r\n      .getContainerSizeList()\r\n      .subscribe(\r\n        data => (this.containersizelist = data),\r\n        error => console.log(error),\r\n        () => console.log(\"Get containersizelist complete\")\r\n      );\r\n\r\n    this.dropdownList = [\r\n      { item_id: 1, item_text: \"Hazard\" },\r\n      { item_id: 2, item_text: \"Overweight\" },\r\n      { item_id: 3, item_text: \"Triaxle\" },\r\n      { item_id: 4, item_text: \"Needs to be scaled\" }\r\n    ];\r\n    this.selectedItems = [\r\n      // { item_id: 3, item_text: 'Pune' },\r\n      // { item_id: 4, item_text: 'Navsari' }\r\n    ];\r\n    this.dropdownSettings = {\r\n      singleSelection: false,\r\n      idField: \"item_id\",\r\n      textField: \"item_text\",\r\n      selectAllText: \"Select All\",\r\n      unSelectAllText: \"UnSelect All\",\r\n      itemsShowLimit: 4,\r\n      allowSearchFilter: false\r\n    };\r\n  }\r\n\r\n  addFieldValue() {\r\n    this.AddContainerDetails.push(this.newAttribute);\r\n    this.newAttribute = {};\r\n    this.ContainerDetailsOutput.emit(this.AddContainerDetails);\r\n  }\r\n\r\n  deleteFieldValue(index) {\r\n    this.ContainerDetails.splice(index, 1);\r\n  }\r\n  onSelectedcontainersize(ContainerNo: string) {\r\n    this.newAttribute.ContainerNo = ContainerNo;\r\n  }\r\n\r\n  onItemSelect(item: any) {\r\n    console.log(item);\r\n  }\r\n  onSelectAll(items: any) {\r\n    console.log(items);\r\n  }\r\n\r\n  Checkbox1_Change(values: any) {\r\n    //Checkbox1_Change_Hazard\r\n    if (values.currentTarget.checked) {\r\n      this.CommentItems.push(\"Hazard\");\r\n      console.log(\"Hazard Added\", this.CommentItems);\r\n    } else {\r\n      const index = this.CommentItems.indexOf(\"Hazard\");\r\n      this.CommentItems.splice(index, 1);\r\n      console.log(\"Hazard Removed\", this.CommentItems);\r\n    }\r\n  }\r\n  Checkbox2_Change(values: any) {\r\n    //Checkbox2_Change_OverWeight\r\n    if (values.currentTarget.checked) {\r\n      this.CommentItems.push(\"Over Weight\");\r\n      console.log(\"Over Weight Added\", this.CommentItems);\r\n    } else {\r\n      const index = this.CommentItems.indexOf(\"Over Weight\");\r\n      this.CommentItems.splice(index, 1);\r\n      console.log(\"Over Weight Removed\", this.CommentItems);\r\n    }\r\n  }\r\n  Checkbox3_Change(values: any) {\r\n    //Checkbox3_Change_Triaxle\r\n    console.log(values.currentTarget.checked);\r\n\r\n    if (values.currentTarget.checked) {\r\n      this.CommentItems.push(\"Triaxle\");\r\n      console.log(\"Triaxle Added\", this.CommentItems);\r\n    } else {\r\n      const index = this.CommentItems.indexOf(\"Triaxle\");\r\n      this.CommentItems.splice(index, 1);\r\n      console.log(\"Triaxle Removed\", this.CommentItems);\r\n    }\r\n  }\r\n  Checkbox4_Change(values: any) {\r\n    if (values.currentTarget.checked) {\r\n      this.CommentItems.push(\"Needs to be scaled\");\r\n      console.log(\"Needs to be scaled Added\", this.CommentItems);\r\n    } else {\r\n      const index = this.CommentItems.indexOf(\"Needs to be scaled\");\r\n      this.CommentItems.splice(index, 1);\r\n      console.log(\"Needs to be scaled Removed\", this.CommentItems);\r\n    }\r\n  }\r\n\r\n  add() {\r\n    var containerDetails: any = {};\r\n    containerDetails.ContainerNo = this.ContainerNo;\r\n    containerDetails.ContainerSize = this.ContainerSize;\r\n    containerDetails.containerSizeDesc = this.containerSizeDesc;\r\n    containerDetails.Chassis = this.Chassis;\r\n    containerDetails.SealNo = this.SealNo;\r\n    containerDetails.Weight = this.Weight;\r\n\r\n    containerDetails.Comments = this.Comments = this.CommentItems.toString();\r\n    this.AddContainerDetails.push(containerDetails);\r\n    this.ContainerDetailsOutput.emit(this.AddContainerDetails);\r\n\r\n    this.ContainerNo = undefined;\r\n    this.ContainerSize = undefined;\r\n    this.containerSizeDesc =undefined;\r\n    this.Chassis = undefined;\r\n    this.SealNo = undefined;\r\n    this.Weight = undefined;\r\n    this.Comments = undefined;\r\n    this.CommentItems = [];\r\n\r\n    this.hazard = undefined;\r\n    this.trixale= undefined;\r\n    this.overweight= undefined;\r\n    this.needstobescaled= undefined;\r\n  }\r\n\r\n  drpcontainersizeChanged(value:any)\r\n  {\r\n    this.containerSizeDesc = this.containersizelist.find(x => x.containersize == value).description;   \r\n  }\r\n  edit(index:any)\r\n  {\r\n    var selectedcontainerdetails = this.ContainerDetails.filter(x=>x.OrderDetailKey==index);\r\n    \r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2NoaWxkL2NvbnRhaW5lcnNpemUvY29udGFpbmVyc2l6ZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Output, Input, EventEmitter } from '@angular/core';\r\nimport { Containersize } from '../../../common/master';\r\nimport { MasterService } from '../../../_services/master.service';\r\n\r\n@Component({\r\n  selector: 'app-containersize',\r\n  templateUrl: './containersize.component.html',\r\n  styleUrls: ['./containersize.component.scss']\r\n})\r\nexport class ContainersizeComponent implements OnInit {\r\n  \r\n  drpContainerSize: Containersize[];\r\n  selectedContainersize: Containersize = new Containersize();\r\n\r\n@Input() bindContainersize: number;\r\n@Output() ContainersizeSelectedOutput = new EventEmitter<string>();\r\n\r\nconstructor(private service: MasterService) {}\r\n\r\nngOnInit() {  \r\n  this.service\r\n    .getContainerSizeList()\r\n    .subscribe(\r\n      data => (this.drpContainerSize = data),\r\n      error => console.log(error),\r\n      () => console.log(\"Get ContainerSize complete\")\r\n    );\r\n}\r\n\r\nngOnChanges() {\r\n  this.selectedContainersize.containersize= this.bindContainersize;\r\n}\r\n\r\nonSelect(Selected: Containersize): void {\r\n  this.ContainersizeSelectedOutput.emit(Selected.description);\r\n  this.selectedContainersize = Selected;  \r\n}\r\n\r\n\r\n}\r\n\r\n\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2NoaWxkL29yZGVyaW5mby9vcmRlcmluZm8uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { DeliveryOrderHeader } from \"../../../_models/DeliveryOrderHeader\";\r\nimport { DeliveryOrderService } from \"../../../_services/deliveryOrder.service\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-orderinfo\",\r\n  templateUrl: \"./orderinfo.component.html\",\r\n  styleUrls: [\"./orderinfo.component.scss\"]\r\n})\r\nexport class OrderinfoComponent implements OnInit {\r\n  private orderkey: string;\r\n  public orderinfo: DeliveryOrderHeader;\r\n  constructor(\r\n    private service: DeliveryOrderService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.orderinfo = new DeliveryOrderHeader();\r\n    this.orderkey = this.route.snapshot.paramMap.get(\"order\");\r\n\r\n    if ( this.orderkey != undefined) {    \r\n      this.service.GetbyKey(this.orderkey ).subscribe(data => {\r\n        (this.orderinfo = data),\r\n          error => console.log(error)          \r\n      });\r\n\r\n      this.service\r\n        .GetOrderDetailsbyKey(this.orderkey)\r\n        .subscribe(\r\n          data => (this.orderinfo.orderdetails = data),\r\n          error => console.log(error),\r\n          () => console.log(\"Get OrderDetail\", this.orderinfo.orderdetails)\r\n        );\r\n    }\r\n  }\r\n\r\n  ngOnChange()\r\n  {\r\n    this.service\r\n    .GetOrderDetailsbyKey(this.orderkey)\r\n    .subscribe(\r\n      data => (this.orderinfo.orderdetails = data),\r\n      error => console.log(error),\r\n      () => console.log(\"Get OrderDetail\", this.orderinfo.orderdetails)\r\n    );\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2NvbnRhaW5lci1zdGF0dXMvY29udGFpbmVyLXN0YXR1cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SchedulerlistComponent } from '../schedulerlist/schedulerlist.component';\r\n@Component({\r\n  selector: 'app-container-status',\r\n  templateUrl: './container-status.component.html',\r\n  styleUrls: ['./container-status.component.scss']\r\n})\r\nexport class ContainerStatusComponent implements OnInit {\r\n \r\n  constructor(private _NgbModal: NgbModal) {      \r\n   }  \r\n\r\n  ngOnInit() {\r\n  }\r\n   // open modal\r\n   openModal() {\r\n    this._NgbModal.open(SchedulerlistComponent, {backdrop: 'static',size: 'lg', keyboard: true, centered: true,\r\n      windowClass: 'modal-job-scrollable'\r\n    });\r\n  \r\n    // upwrap the \"app-ng-modal\" data to enable the \"modal-dialog-scrollable\"\r\n    // and make the modal scrollable\r\n    // (() => {\r\n    //   const node: HTMLElement | null = document.querySelector('app-ng-modal');\r\n    //   if (node) {\r\n    //     while (node.firstChild) {\r\n    //       (node.parentNode as HTMLElement).insertBefore(node.firstChild, node);\r\n    //     }\r\n    //   }\r\n    //   // make the modal scrollable by adding the class .modal-dialog-scrollable\r\n    //   // here wait for one second so that we can find the .modal-dialog\r\n    //   setTimeout(() => {\r\n    //     const modalDialog = document.querySelector('.modal-job-scrollable .modal-dialog');\r\n    //     if (modalDialog) {\r\n    //       modalDialog.classList.add('modal-dialog-scrollable');\r\n    //     }\r\n    //   }, 1000)\r\n    // })();\r\n  }\r\n}\r\n","export default \".btnround {\\n  border-radius: 70%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvZGlzcGF0Y2gvQzpcXFVzZXJzXFxBcnVuXFxEb2N1bWVudHNcXEdpdEh1YlxcVE1TX0FkbWluXFxUTVNfV2ViL3NyY1xcYXBwXFx2aWV3c1xcZGlzcGF0Y2hcXGRpc3BhdGNoLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy9kaXNwYXRjaC9kaXNwYXRjaC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUFXLGtCQUFBO0FDRVgiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9kaXNwYXRjaC9kaXNwYXRjaC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5idG5yb3VuZCB7Ym9yZGVyLXJhZGl1czogNzAlO30iLCIuYnRucm91bmQge1xuICBib3JkZXItcmFkaXVzOiA3MCU7XG59Il19 */\"","\r\nimport { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { Order_details } from \"../../_models/order_details\";\r\nimport { DeliveryOrderService } from \"../../_services/deliveryOrder.service\";\r\nimport { Router, ActivatedRoute, Routes } from \"@angular/router\";\r\nimport { RoutesService } from \"../../_services/routes.service\";\r\nimport { Tms_routes } from \"../../_models/tms_routes\";\r\nimport { DriverService } from './../../_services/driver.service';\r\nimport { Driver } from \"../../_models/driver\";\r\n@Component({\r\n  selector: 'app-dispatch',\r\n  templateUrl: './dispatch.component.html',\r\n  styleUrls: ['./dispatch.component.scss']\r\n})\r\nexport class DispatchComponent implements OnInit {\r\n  //bsConfig: Partial<BsDatepickerConfig>;\r\n  @Input() orderKeyinput: string;\r\n  @Input() public ContainerDetails: Array<Order_details> = [];\r\n  @Input() isContainerAttributeVisible: boolean = false;\r\n \r\n  dataSaved = false;\r\n  message = null;\r\n  collapsesign: string;\r\n  tmpRoutes:Tms_routes;\r\n  driverList:Driver[];\r\n  constructor(\r\n    private service: DeliveryOrderService,\r\n    private routeservice: RoutesService,\r\n    private driverservice:DriverService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    //this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.collapsesign = \"+\";\r\n\r\n    // this.bsConfig = Object.assign(\r\n    //   {},\r\n    //   { containerClass: \"theme-orange\" },\r\n    //   { dateInputFormat: \"MM/DD/YYYY\" }\r\n    // );\r\n\r\n    this.service\r\n      .GetOrderDetailsbyKey(this.orderKeyinput)\r\n      .subscribe(\r\n        data => (this.ContainerDetails = data),\r\n        error => console.log(error),\r\n        () => console.log(\"Get OrderDetail\", this.ContainerDetails)\r\n      );\r\n\r\n      this.driverservice.getDrivers()\r\n      .subscribe(\r\n        data => (this.driverList = data),\r\n        error => console.log(error),\r\n        () => console.log(\"Get driverList\", this.driverList)\r\n      );\r\n  }\r\n  ScheduleFieldValue(fld:Tms_routes) {  \r\n    this.routeservice.insertRoutesDetails(fld).subscribe(() => {\r\n      this.dataSaved = true;\r\n      this.message = \"Success\";\r\n      alert(this.message);\r\n    });\r\n    \r\n  }\r\n\r\n  ngOnChanges() {\r\n    // alert('Scheduler Onchange:  '+ this.orderKeyinput);\r\n    this.service\r\n      .GetOrderDetailsbyKey(this.orderKeyinput)\r\n      .subscribe(\r\n        data => (this.ContainerDetails = data),\r\n        error => console.log(error),\r\n        () => console.log(\"Get OrderDetail\", this.ContainerDetails)\r\n      );\r\n  }\r\n  collapseSign(tmsRoutes:Tms_routes ) {\r\n    if (this.collapsesign === \"+\") {\r\n      this.collapsesign = \"-\";\r\n    }\r\n    else if (this.collapsesign === \"-\") {\r\n      this.collapsesign = \"+\";\r\n    }\r\n\r\n    //this.temptmsRoutes.OrderKey = tmsRoutes.OrderKey;\r\n    //this.temptmsRoutes.OrderDetailKey = tmsRoutes.OrderDetailKey;\r\n  }\r\n}\r\n","export default \".table tbody tr:hover td, .table tbody tr:hover th {\\n  background-color: steelblue;\\n}\\n\\n.ScrollStyle {\\n  max-height: 600px;\\n  overflow-y: scroll;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvZGlzcGF0Y2hBc3NpZ25tZW50L0M6XFxVc2Vyc1xcQXJ1blxcRG9jdW1lbnRzXFxHaXRIdWJcXFRNU19BZG1pblxcVE1TX1dlYi9zcmNcXGFwcFxcdmlld3NcXGRpc3BhdGNoQXNzaWdubWVudFxcZGlzcGF0Y2hBc3NpZ25tZW50LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy9kaXNwYXRjaEFzc2lnbm1lbnQvZGlzcGF0Y2hBc3NpZ25tZW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlBO0VBQ0ksMkJBQUE7QUNISjs7QURNQTtFQUNJLGlCQUFBO0VBQ0Esa0JBQUE7QUNISiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2Rpc3BhdGNoQXNzaWdubWVudC9kaXNwYXRjaEFzc2lnbm1lbnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyAudGFibGUtaG92ZXIgdGJvZHkgdHI6aG92ZXIgdGQge1xyXG4vLyAgICAgYmFja2dyb3VuZDogc3RlZWxibHVlO1xyXG4vLyB9XHJcblxyXG4udGFibGUgdGJvZHkgdHI6aG92ZXIgdGQsIC50YWJsZSB0Ym9keSB0cjpob3ZlciB0aCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBzdGVlbGJsdWU7XHJcbn1cclxuXHJcbi5TY3JvbGxTdHlsZSB7XHJcbiAgICBtYXgtaGVpZ2h0OiA2MDBweDtcclxuICAgIG92ZXJmbG93LXk6IHNjcm9sbDtcclxuICB9XHJcbiAgIiwiLnRhYmxlIHRib2R5IHRyOmhvdmVyIHRkLCAudGFibGUgdGJvZHkgdHI6aG92ZXIgdGgge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBzdGVlbGJsdWU7XG59XG5cbi5TY3JvbGxTdHlsZSB7XG4gIG1heC1oZWlnaHQ6IDYwMHB4O1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG59Il19 */\"","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { Order_details } from \"../../_models/order_details\";\r\nimport { DeliveryOrderService } from \"../../_services/deliveryOrder.service\";\r\nimport { Router, ActivatedRoute, Routes } from \"@angular/router\";\r\nimport { RoutesService } from \"../../_services/routes.service\";\r\nimport { Tms_routes } from \"../../_models/tms_routes\";\r\nimport { DriverService } from \"./../../_services/driver.service\";\r\nimport { Driver } from \"../../_models/driver\";\r\nimport { DispatchAssignmentService } from \"../../_services/dispatchAssignment.service\";\r\nimport { DeliveryOrderHeader } from \"../../_models/DeliveryOrderHeader\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { findLast } from \"@angular/compiler/src/directive_resolver\";\r\n@Component({\r\n  selector: \"app-dispatchAssignment\",\r\n  templateUrl: \"./dispatchAssignment.component.html\",\r\n  styleUrls: [\"./dispatchAssignment.component.scss\"]\r\n})\r\nexport class DispatchAssignmentComponent implements OnInit {\r\n  //bsConfig: Partial<BsDatepickerConfig>;\r\n  @Input() orderKeyinput: string;\r\n  @Input() public ContainerDetails: Array<Order_details> = [];\r\n  @Input() isContainerAttributeVisible: boolean = false;\r\n  showDispatch = false;\r\n  showImage = true;\r\n\r\n  HeaderData: DeliveryOrderHeader;\r\n  public DetailsData: Array<Order_details> = [];\r\n  dataSaved = false;\r\n  message = null;\r\n  collapsesign: string;\r\n  public routes: Tms_routes;\r\n  driverList: Driver[];\r\n  selectedKey: string;\r\n\r\n  driverkey: string;\r\n  drivernotes: string;\r\n  OrderKey: string;\r\n  OrderDetailKey: string;\r\n\r\n  constructor(\r\n    private orderService: DeliveryOrderService,\r\n    private dispatchAssignmentservice: DispatchAssignmentService,\r\n    private routeservice: RoutesService,\r\n    private driverservice: DriverService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private toastr: ToastrService\r\n  ) {\r\n    //this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.collapsesign = \"+\";\r\n\r\n    // this.bsConfig = Object.assign(\r\n    //   {},\r\n    //   { containerClass: \"theme-orange\" },\r\n    //   { dateInputFormat: \"MM/DD/YYYY\" }\r\n    // );\r\n\r\n    this.loaddata();\r\n\r\n    this.driverservice\r\n      .getDrivers()\r\n      .subscribe(\r\n        data => (this.driverList = data),\r\n        error => console.log(error),\r\n        () => console.log(\"Get driverList\", this.driverList)\r\n      );\r\n  }\r\n  update() {\r\n    if (this.driverkey == null || this.drivernotes == null) {\r\n      this.showError(\"Enter the missing fields.\", \"Scheduler\");\r\n      return;\r\n    }\r\n\r\n    var route = new Tms_routes();\r\n    route.OrderKey = this.OrderKey;\r\n    route.OrderDetailKey = this.OrderDetailKey;\r\n    route.driverkey = this.driverkey;\r\n    route.drivernotes = this.drivernotes;\r\n\r\n    this.dispatchAssignmentservice\r\n      .AddDispatchAssignmentData(route)\r\n      .subscribe(() => {\r\n        this.dataSaved = true;\r\n        this.message = \"Success\";\r\n        //alert(this.message);\r\n        this.showSuccess(\"Container sent to dispatch delivery!!\", \"Dispatch\");\r\n        this.loaddata();\r\n        this.showImage = true;\r\n        this.showDispatch = false;\r\n      });\r\n  }\r\n\r\n  ngOnChanges() {}\r\n  collapseSign(tmsRoutes: Tms_routes) {\r\n    if (this.collapsesign === \"+\") {\r\n      this.collapsesign = \"-\";\r\n    } else if (this.collapsesign === \"-\") {\r\n      this.collapsesign = \"+\";\r\n    }\r\n\r\n    //this.temptmsRoutes.OrderKey = tmsRoutes.OrderKey;\r\n    //this.temptmsRoutes.OrderDetailKey = tmsRoutes.OrderDetailKey;\r\n  }\r\n\r\n  rowclickEvent(value: any) {\r\n    this.selectedKey = null;\r\n\r\n    this.orderService.GetbyKey(value.OrderKey).subscribe(\r\n      data => {\r\n        this.HeaderData = data;\r\n        this.DetailsData = value;\r\n        this.OrderKey = value.OrderKey;\r\n        this.OrderDetailKey = value.OrderDetailKey;\r\n        this.selectedKey = value.OrderDetailKey;\r\n        this.showImage = false;\r\n        this.showDispatch = true;\r\n        this.driverkey = undefined;\r\n        this.drivernotes = undefined;\r\n        console.log(\"OrderKey \", this.OrderKey);\r\n        console.log(\"OrderDetailKey \", this.OrderDetailKey);\r\n        console.log(\"DetailsData \", this.DetailsData);\r\n      },\r\n      error => console.log(error),\r\n      () => console.log(\"order Header Data \", this.HeaderData)\r\n    );\r\n  }\r\n\r\n  loaddata() {\r\n    this.dispatchAssignmentservice\r\n      .GetOrderstoDispatchAssignment()\r\n      .subscribe(\r\n        data => (this.ContainerDetails = data),\r\n        error => console.log(error),\r\n        () => console.log(\"Get OrderDetail\", this.ContainerDetails)\r\n      );\r\n  }\r\n\r\n  showSuccess(message: string, title: string) {\r\n    this.toastr.success(message, title, { timeOut: 2000, closeButton: true });\r\n  }\r\n  showError(message: string, title: string) {\r\n    this.toastr.error(message, \"Oops!\", { timeOut: 2000, closeButton: true });\r\n  }\r\n}\r\n","export default \".table-custom tbody.thead {\\n  display: block;\\n  height: 200px;\\n  width: 1000px;\\n  overflow-y: scroll;\\n  overflow-x: scroll;\\n}\\n\\nthead,\\ntbody tr {\\n  display: table;\\n  width: 100%;\\n  table-layout: fixed;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvZGlzcGF0Y2h1cGRhdGUvQzpcXFVzZXJzXFxBcnVuXFxEb2N1bWVudHNcXEdpdEh1YlxcVE1TX0FkbWluXFxUTVNfV2ViL3NyY1xcYXBwXFx2aWV3c1xcZGlzcGF0Y2h1cGRhdGVcXGRpc3BhdGNodXBkYXRlLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy9kaXNwYXRjaHVwZGF0ZS9kaXNwYXRjaHVwZGF0ZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDSTtFQUNFLGNBQUE7RUFDQSxhQUFBO0VBQ0EsYUFBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7QUNBTjs7QURJRTs7RUFFSSxjQUFBO0VBQ0EsV0FBQTtFQUNBLG1CQUFBO0FDRE4iLCJmaWxlIjoic3JjL2FwcC92aWV3cy9kaXNwYXRjaHVwZGF0ZS9kaXNwYXRjaHVwZGF0ZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50YWJsZS1jdXN0b20ge1xyXG4gICAgdGJvZHkudGhlYWQge1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgaGVpZ2h0OiAyMDBweDsgICBcclxuICAgICAgd2lkdGg6IDEwMDBweDsgICAgICAgIFxyXG4gICAgICBvdmVyZmxvdy15OiBzY3JvbGw7XHJcbiAgICAgIG92ZXJmbG93LXg6IHNjcm9sbDtcclxuICAgIH1cclxuICAgIFxyXG4gIH1cclxuICB0aGVhZCxcclxuICAgIHRib2R5IHRyIHtcclxuICAgICAgZGlzcGxheTogdGFibGU7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICB0YWJsZS1sYXlvdXQ6IGZpeGVkO1xyXG4gICAgfSIsIi50YWJsZS1jdXN0b20gdGJvZHkudGhlYWQge1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiAyMDBweDtcbiAgd2lkdGg6IDEwMDBweDtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICBvdmVyZmxvdy14OiBzY3JvbGw7XG59XG5cbnRoZWFkLFxudGJvZHkgdHIge1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgd2lkdGg6IDEwMCU7XG4gIHRhYmxlLWxheW91dDogZml4ZWQ7XG59Il19 */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DriverService } from '../../_services/driver.service';\r\nimport { Driver } from '../../_models/driver';\r\nimport { DispatchDeliveryService } from '../../_services/dispatchDelivery.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Dispatch } from '../../_models/dispatch';\r\nimport { DeliveryOrderHeader } from '../../_models/DeliveryOrderHeader';\r\n\r\n@Component({\r\n  selector: 'app-dispatchupdate',\r\n  templateUrl: './dispatchupdate.component.html',\r\n  styleUrls: ['./dispatchupdate.component.scss']\r\n})\r\nexport class DispatchupdateComponent implements OnInit {\r\n  @Input() public dispatchdata: DeliveryOrderHeader;\r\n\r\n  @Input() public OrderDetailKey: string ;\r\n\r\n  dispatchList: DeliveryOrderHeader;\r\n  driverList: Driver[];\r\n  dispatchDetails: Array<Dispatch> = [];\r\n  routekey: string = \"\";\r\n  //OrderDetailKey: string = \"\";\r\n  driverkey: string;\r\n  drivernotes: string;\r\n  appointmentNo: string;\r\n  PortWaitingTimeFrom: Date;\r\n  PortWaitingTimeTo: Date;\r\n  CustomerWaitingTimeFrom: Date;\r\n  CustomerWaitingTimeTo: Date;\r\n  Chassis: string;\r\n  legno: string;\r\n  legtype: number;\r\n  actualarrival: Date;\r\n  actualdeparture: Date;\r\n  rowindex: number = -1;\r\n  lbladdupdate: string;  \r\n  showaddupdateEntryDiv: boolean = false;\r\n\r\n  constructor( private _NgbActiveModal: NgbActiveModal,  private driverservice: DriverService,\r\n    private dispatchDeliveryService: DispatchDeliveryService,  \r\n    private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {    \r\n    this.dispatchDeliveryService.GetDispatch_OrderandDetails(this.OrderDetailKey).subscribe(\r\n      data => (this.dispatchList = data),\r\n      error => console.log(error),\r\n      () => console.log(\"Get dispatchList\", this.dispatchList)\r\n    );\r\n\r\n    console.log(\"Dispatch update :\", this.dispatchList);\r\n    this.driverservice.getDrivers().subscribe(\r\n      data => (this.driverList = data),\r\n      error => console.log(error),\r\n      () => console.log(\"Get driverList\", this.driverList)\r\n    );\r\n\r\n    this.dispatchDeliveryService.GetDispatchItems(this.OrderDetailKey).subscribe(\r\n      data => (this.dispatchDetails = data),\r\n      error => console.log(error),\r\n      () => console.log(\"Get dispatchDetails\", this.dispatchDetails)\r\n    );\r\n\r\n  }\r\n\r\n  Submit() {\r\n    this.dispatchDeliveryService\r\n      .UpdateDispatchDeliveryData(this.dispatchDetails)\r\n      .subscribe(\r\n        result => {\r\n          this.showSuccess(\"Container update done!!\", \"Dispatch\");      \r\n          this.clear();\r\n          this. closeModal();\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.showError(\"An Unexpected Error Occured.\", \"Dispatch\");\r\n          return;\r\n        }\r\n      );    \r\n  }\r\n\r\n  addupdateDispatch() {  \r\n\r\n    if (this.routekey != \"\" || this.rowindex >= 0) {\r\n      this.dispatchDetails[this.rowindex].appointmentno = this.appointmentNo;\r\n      this.dispatchDetails[this.rowindex].driverkey = this.driverkey;\r\n      this.dispatchDetails[this.rowindex].drivernotes = this.drivernotes;\r\n      this.dispatchDetails[this.rowindex].chassis = this.Chassis;\r\n      this.dispatchDetails[this.rowindex].legno = this.legno;\r\n      this.dispatchDetails[this.rowindex].legtype = this.legtype;\r\n      this.dispatchDetails[\r\n        this.rowindex\r\n      ].portwaitingtimefrom = this.PortWaitingTimeFrom;\r\n      this.dispatchDetails[\r\n        this.rowindex\r\n      ].portwaitingtimeto = this.PortWaitingTimeTo;\r\n      this.dispatchDetails[\r\n        this.rowindex\r\n      ].customerwaitingtimefrom = this.CustomerWaitingTimeFrom;\r\n      this.dispatchDetails[\r\n        this.rowindex\r\n      ].customerwaitingtimeto = this.CustomerWaitingTimeTo;\r\n      this.dispatchDetails[this.rowindex].actualarrival = this.actualarrival;\r\n      this.dispatchDetails[\r\n        this.rowindex\r\n      ].actualdeparture = this.actualdeparture;\r\n\r\n      return;\r\n    }\r\n\r\n    var newRow: any = {};\r\n    newRow.OrderDetailKey =  this.OrderDetailKey;\r\n    newRow.appointmentno = this.appointmentNo;\r\n    newRow.driverkey = this.driverkey;\r\n    newRow.drivernotes = this.drivernotes;\r\n    newRow.chassis = this.Chassis;\r\n    newRow.legno = this.legno;\r\n    newRow.legtype = this.legtype;   \r\n    newRow.portwaitingtimefrom = this.PortWaitingTimeFrom;\r\n    newRow.portwaitingtimeto = this.PortWaitingTimeTo;\r\n    newRow.customerwaitingtimefrom = this.CustomerWaitingTimeFrom;\r\n    newRow.customerwaitingtimeto = this.CustomerWaitingTimeTo;\r\n    newRow.actualarrival = this.actualarrival;\r\n    newRow.actualdeparture = this.actualdeparture;\r\n    this.dispatchDetails.push(newRow);\r\n    console.log(\"New Row\", newRow);\r\n    this.clear();\r\n    this.showaddupdateEntryDiv = false;   \r\n  }\r\n\r\n  editRow(details: Dispatch, index: number) {\r\n    this.rowindex = index;\r\n    this.OrderDetailKey = details.OrderDetailKey;\r\n    this.routekey = details.Routekey;\r\n    this.appointmentNo = details.appointmentno;\r\n    this.driverkey = details.driverkey;\r\n    this.drivernotes = details.drivernotes;\r\n    this.Chassis = details.chassis;\r\n    this.legno = details.legno;\r\n    this.legtype = details.legtype;\r\n    this.PortWaitingTimeFrom = details.portwaitingtimefrom;\r\n    this.PortWaitingTimeTo = details.portwaitingtimeto;\r\n    this.CustomerWaitingTimeFrom = details.customerwaitingtimefrom;\r\n    this.CustomerWaitingTimeTo = details.customerwaitingtimeto;\r\n    this.actualarrival = details.actualarrival;\r\n    this.actualdeparture = details.actualdeparture;  \r\n    this.lbladdupdate = \"Update\";\r\n    this.showaddupdateEntryDiv = true;\r\n  }\r\n\r\n  deleteRow(details: Dispatch, index: number) {\r\n    if (details.Routekey != \"\" && details.Routekey != undefined) {\r\n      this.showWarning(\"\", \"Selected row cannot be deleted!\");\r\n      return;\r\n    }\r\n    this.dispatchDetails.splice(index, 1);\r\n  }\r\n\r\n  clear() {\r\n    this.Chassis = undefined;\r\n    this.legno = undefined;\r\n    this.legtype = undefined;\r\n    this.actualarrival = undefined;\r\n    this.actualdeparture = undefined;\r\n    this.appointmentNo = undefined;\r\n    this.driverkey = undefined;\r\n    this.drivernotes = undefined;\r\n    this.Chassis = undefined;\r\n    this.legno = undefined;\r\n    this.legtype = undefined;\r\n    this.PortWaitingTimeFrom = undefined;\r\n    this.PortWaitingTimeTo = undefined;\r\n    this.CustomerWaitingTimeFrom = undefined;\r\n    this.CustomerWaitingTimeTo = undefined;\r\n    this.actualarrival = undefined;\r\n    this.actualdeparture = undefined;\r\n    this.rowindex = -1;\r\n  }\r\n  showaddupdateEntry() {\r\n    this.showaddupdateEntryDiv = true;\r\n    this.lbladdupdate = \"Add\";\r\n  }\r\n\r\n  showSuccess(message: string, title: string) {\r\n    this.toastr.success(message, title, { timeOut: 2000, closeButton: true });\r\n  }\r\n  showError(message: string, title: string) {\r\n    this.toastr.error(message, \"Oops!\", { timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  showWarning(message: string, title: string) {\r\n    this.toastr.warning(message, title);\r\n  }\r\n\r\n  showInfo(message: string, title: string) {\r\n    this.toastr.info(message, title, { timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  \r\n  get activeModal() {\r\n    return this._NgbActiveModal;\r\n  }\r\n\r\n  closeModal() { this._NgbActiveModal.close('success'); }\r\n}\r\n","export default \".table-custom tbody {\\n  height: 200px;\\n  overflow: auto;\\n}\\n\\n.scrollbar {\\n  width: 100%;\\n  height: 93%;\\n  margin-top: 0px;\\n  float: left;\\n  overflow-y: scroll;\\n}\\n\\n#scrollbar-style::-webkit-scrollbar-track {\\n  box-shadow: 1px 1px 0px rgba(0, 0, 0, 0.1);\\n  background-color: lightslategrey;\\n  border-radius: 10px;\\n}\\n\\n#scrollbar-style::-webkit-scrollbar {\\n  width: 7px;\\n  background-color: #1a1818;\\n}\\n\\n#scrollbar-style::-webkit-scrollbar-thumb {\\n  background-color: darkslategrey;\\n  background-image: -webkit-linear-gradient(90deg, rgba(255, 255, 255, 0.2) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.2) 50%, rgba(255, 255, 255, 0.2) 75%, transparent 75%, transparent);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvZGlzcGF0aGRlbGl2ZXJ5L0M6XFxVc2Vyc1xcQXJ1blxcRG9jdW1lbnRzXFxHaXRIdWJcXFRNU19BZG1pblxcVE1TX1dlYi9zcmNcXGFwcFxcdmlld3NcXGRpc3BhdGhkZWxpdmVyeVxcZGlzcGF0aGRlbGl2ZXJ5LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy9kaXNwYXRoZGVsaXZlcnkvZGlzcGF0aGRlbGl2ZXJ5LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNFO0VBQ0UsYUFBQTtFQUNBLGNBQUE7QUNBSjs7QURJQTtFQUNFLFdBQUE7RUFDQSxXQUFBO0VBRUEsZUFBQTtFQUVBLFdBQUE7RUFDQSxrQkFBQTtBQ0hGOztBRE1BO0VBR0UsMENBQUE7RUFDQSxnQ0FBQTtFQUNBLG1CQUFBO0FDSEY7O0FETUE7RUFDRSxVQUFBO0VBQ0EseUJBQUE7QUNIRjs7QURNQTtFQUNFLCtCQUFBO0VBQ0EsME1BQUE7QUNIRiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2Rpc3BhdGhkZWxpdmVyeS9kaXNwYXRoZGVsaXZlcnkuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGFibGUtY3VzdG9tIHtcclxuICB0Ym9keSB7ICAgXHJcbiAgICBoZWlnaHQ6IDIwMHB4OyAgIFxyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgfVxyXG59XHJcblxyXG4uc2Nyb2xsYmFyIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDkzJTtcclxuICAvL2hlaWdodDpjYWxjKDEwMCUgLSAyMDBweCk7XHJcbiAgbWFyZ2luLXRvcDogMHB4O1xyXG4gIC8vYmFja2dyb3VuZC1jb2xvcjpncmVlbjtcclxuICBmbG9hdDogbGVmdDtcclxuICBvdmVyZmxvdy15OiBzY3JvbGw7XHJcbn1cclxuXHJcbiNzY3JvbGxiYXItc3R5bGU6Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNrIHtcclxuICAtd2Via2l0LWJveC1zaGFkb3c6IDFweCAxcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICAtbW96LWJveC1zaGFkb3c6IDFweCAxcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICBib3gtc2hhZG93OiAxcHggMXB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRzbGF0ZWdyZXk7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxufVxyXG5cclxuI3Njcm9sbGJhci1zdHlsZTo6LXdlYmtpdC1zY3JvbGxiYXIge1xyXG4gIHdpZHRoOiA3cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI2LCAyNCwgMjQpO1xyXG59XHJcblxyXG4jc2Nyb2xsYmFyLXN0eWxlOjotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogZGFya3NsYXRlZ3JleTtcclxuICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudChcclxuICAgIDkwZGVnLFxyXG4gICAgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpIDI1JSxcclxuICAgIHRyYW5zcGFyZW50IDI1JSxcclxuICAgIHRyYW5zcGFyZW50IDUwJSxcclxuICAgIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKSA1MCUsXHJcbiAgICByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMikgNzUlLFxyXG4gICAgdHJhbnNwYXJlbnQgNzUlLFxyXG4gICAgdHJhbnNwYXJlbnRcclxuICApO1xyXG59XHJcblxyXG4iLCIudGFibGUtY3VzdG9tIHRib2R5IHtcbiAgaGVpZ2h0OiAyMDBweDtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi5zY3JvbGxiYXIge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA5MyU7XG4gIG1hcmdpbi10b3A6IDBweDtcbiAgZmxvYXQ6IGxlZnQ7XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbn1cblxuI3Njcm9sbGJhci1zdHlsZTo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2sge1xuICAtd2Via2l0LWJveC1zaGFkb3c6IDFweCAxcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgLW1vei1ib3gtc2hhZG93OiAxcHggMXB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIGJveC1zaGFkb3c6IDFweCAxcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRzbGF0ZWdyZXk7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG59XG5cbiNzY3JvbGxiYXItc3R5bGU6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgd2lkdGg6IDdweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzFhMTgxODtcbn1cblxuI3Njcm9sbGJhci1zdHlsZTo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrc2xhdGVncmV5O1xuICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCg5MGRlZywgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpIDI1JSwgdHJhbnNwYXJlbnQgMjUlLCB0cmFuc3BhcmVudCA1MCUsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKSA1MCUsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKSA3NSUsIHRyYW5zcGFyZW50IDc1JSwgdHJhbnNwYXJlbnQpO1xufSJdfQ== */\"","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { Order_details } from \"../../_models/order_details\";\r\nimport { DeliveryOrderService } from \"../../_services/deliveryOrder.service\";\r\nimport { Router, ActivatedRoute, Routes } from \"@angular/router\";\r\nimport { RoutesService } from \"../../_services/routes.service\";\r\nimport { Tms_routes } from \"../../_models/tms_routes\";\r\nimport { DriverService } from \"./../../_services/driver.service\";\r\nimport { Driver } from \"../../_models/driver\";\r\nimport { DispatchDeliveryService } from \"../../_services/dispatchDelivery.service\";\r\nimport { DeliveryOrderHeader } from \"../../_models/DeliveryOrderHeader\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { Dispatch } from \"../../_models/dispatch\";\r\nimport { DispatchupdateComponent } from \"../dispatchupdate/dispatchupdate.component\";\r\nimport { NgbModal, NgbModalRef } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { CityService } from '../../_services/city.service';\r\n\r\n@Component({\r\n  selector: \"app-dispathdelivery\",\r\n  templateUrl: \"./dispathdelivery.component.html\",\r\n  styleUrls: [\"./dispathdelivery.component.scss\"]\r\n})\r\nexport class DispathdeliveryComponent implements OnInit {\r\n  //bsConfig: Partial<BsDatepickerConfig>;\r\n  @Input() orderKeyinput: string;\r\n  @Input() public ContainerDetails: Array<Order_details> = [];\r\n  @Input() isContainerAttributeVisible: boolean = false;\r\n\r\n  HeaderData: DeliveryOrderHeader;\r\n  dataSaved = false;\r\n  message = null;\r\n  collapsesign: string;\r\n  routes: Tms_routes;\r\n  driverList: Driver[];\r\n  selectedKey: string;\r\n  dataShow: boolean;\r\n  tempOrderDetailKey: string;\r\n  public DetailsData: Order_details;\r\n  showDispatch = false;\r\n  showImage = true;\r\n  public SearchRecentContainer: string;\r\n\r\n  dispatchList: Array<any> = [];\r\n  dispatchData: any;\r\n\r\n  dispatchDetails: Array<any> = [];\r\n  routekey: string = \"\";\r\n  OrderDetailKey: string = \"\";\r\n  driverkey: string;\r\n  driver: string;\r\n  drivernotes: string;\r\n  appointmentNo: string;\r\n  PortWaitingTimeFrom: Date;\r\n  PortWaitingTimeTo: Date;\r\n  CustomerWaitingTimeFrom: Date;\r\n  CustomerWaitingTimeTo: Date;\r\n  Chassis: string;\r\n  legno: string;\r\n  legtype: number;\r\n  actualarrival: Date;\r\n  actualdeparture: Date;\r\n  rowindex: number = -1;\r\n  lbladdupdate: string;\r\n  showaddupdateEntryDiv: boolean = false;\r\n  showdispatchitemlist: boolean = true;\r\n  showaddupdatedispatchitems: boolean = false;\r\n  searchText: string;\r\n  modalRef: NgbModalRef;\r\n  userData:any;\r\n  constructor(\r\n    private _NgbModal: NgbModal,\r\n    private orderService: DeliveryOrderService,\r\n    private dispatchDeliveryService: DispatchDeliveryService,\r\n    private routeservice: RoutesService,\r\n    private driverservice: DriverService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private toastr: ToastrService,\r\n    private cityService: CityService\r\n  ) {\r\n    //this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n    this.cityService.GetCity().subscribe(\r\n      data => {\r\n        Object.assign(this.userData, data);\r\n      },\r\n      error => {\r\n        console.log(\"Something wrong here\");\r\n      }); \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadDrivers();\r\n    this.GetOrderstoDispatchDelivery();\r\n    this.loadDispatchItemsList();\r\n    this.showdispatchitemlist = true;\r\n  }\r\n  loadDrivers() {\r\n    this.driverservice.getDrivers().subscribe(\r\n      data => (this.driverList = data),\r\n      error => console.log(error),\r\n      () => console.log(\"Get driverList\", this.driverList)\r\n    );\r\n  }\r\n  GetOrderstoDispatchDelivery() {\r\n    this.dispatchDeliveryService.GetOrderstoDispatchDelivery().subscribe(\r\n      data => (this.ContainerDetails = data),\r\n      error => console.log(error),\r\n      () => console.log(\"Get OrderDetail\", this.ContainerDetails)\r\n    );\r\n  }\r\n  loadDispatchItemsList() {\r\n    this.dispatchDeliveryService.GetDispatchItemsList().subscribe(\r\n      data => (this.dispatchList = data),\r\n      error => console.log(error),\r\n      () => console.log(\"Get dispatchList\", this.dispatchList)\r\n    );\r\n  }\r\n\r\n  update() {\r\n    if (\r\n      this.Chassis == null ||\r\n      this.legno == null ||\r\n      this.actualarrival == null ||\r\n      this.actualdeparture == null\r\n    ) {\r\n      this.showError(\"Enter the missing fields.\", \"Delivery\");\r\n      return;\r\n    }\r\n    var routesData = new Tms_routes();\r\n\r\n    routesData.OrderKey = this.DetailsData.OrderKey;\r\n    routesData.OrderDetailKey = this.DetailsData.OrderDetailKey;\r\n    routesData.legtype = 0;\r\n    routesData.Chassis = this.Chassis;\r\n    routesData.legno = this.legno;\r\n    routesData.actualarrival = this.actualarrival;\r\n    routesData.actualdeparture = this.actualdeparture;\r\n\r\n    // this.dispatchDeliveryService\r\n    //   .UpdateDispatchDeliveryData(routesData)\r\n    //   .subscribe(() => {\r\n    //     this.dataSaved = true;\r\n    //     this.message = \"Success\";\r\n\r\n    //     this.showSuccess(\"Container sent to Invoice!!\", \"Dispatch\");\r\n    //     this.selectedKey = null;\r\n    //     this.showImage = true;\r\n    //     this.showDispatch = false;\r\n    //     this.clear();\r\n    //   });\r\n  }\r\n\r\n  ngOnChanges() {}\r\n\r\n  rowclickEvent(value: Order_details) {\r\n    if (this.tempOrderDetailKey == value.OrderDetailKey) {\r\n      this.tempOrderDetailKey = null;\r\n      this.selectedKey = null;\r\n      this.showImage = false;\r\n      this.showdispatchitemlist = false;\r\n      this.showaddupdatedispatchitems = true;\r\n      return;\r\n    } else {\r\n      this.dataShow = true;\r\n    }\r\n\r\n    this.orderService.GetbyKey(value.OrderKey).subscribe(\r\n      data => {\r\n        this.HeaderData = data;\r\n        this.DetailsData = value;\r\n        this.showImage = false;\r\n        this.showdispatchitemlist = false;\r\n        this.showaddupdatedispatchitems = true;\r\n        this.tempOrderDetailKey = value.OrderDetailKey;\r\n        console.log(\"order Order-Header Data \", this.HeaderData);\r\n        console.log(\"order Order-Details Data \", this.DetailsData);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        this.showImage = true;\r\n      },\r\n      () => console.log(\"order Header Data \", this.HeaderData)\r\n    );\r\n    this.selectedKey = value.OrderDetailKey;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.dispatchDeliveryService\r\n      .UpdateDispatchDeliveryData(this.dispatchDetails)\r\n      .subscribe(\r\n        () => {\r\n          var dispatch = new Dispatch();\r\n          dispatch.OrderDetailKey = this.DetailsData.OrderDetailKey;\r\n          dispatch.status = 7;\r\n          this.dispatchDeliveryService.UpdateStatus(dispatch).subscribe(\r\n            data => {\r\n              this.showSuccess(\"Dispatch data saved!\", \"Dispatch\");\r\n              this.GetOrderstoDispatchDelivery();\r\n              this.loadDispatchItemsList();\r\n              this.showdispatchitemlist = true;\r\n              this.showaddupdatedispatchitems = false;\r\n              this.selectedKey = null;\r\n              this.showImage = true;\r\n              this.showDispatch = false;\r\n              this.clear();\r\n            },\r\n            error => console.log(error),\r\n            () => console.log(\"Get dispatchList\", this.dispatchList)\r\n          );\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.showError(\"An Unexpected Error Occured.\", \"Dispatch\");\r\n          return;\r\n        }\r\n      );\r\n  }\r\n\r\n  hold_Dispatch() {\r\n    var dispatch = new Dispatch();\r\n    dispatch.OrderDetailKey = this.OrderDetailKey;\r\n    dispatch.status = 8;\r\n    this.dispatchDeliveryService.UpdateStatus(dispatch).subscribe(\r\n      data => {\r\n        this.showSuccess(\"Dispatch data saved!\", \"Dispatch\");\r\n        this.GetOrderstoDispatchDelivery();\r\n        this.loadDispatchItemsList();\r\n        this.showdispatchitemlist = true;\r\n        this.showaddupdatedispatchitems = false;\r\n        this.selectedKey = null;\r\n        this.showImage = true;\r\n        this.showDispatch = false;\r\n        this.clear();\r\n      },\r\n      error => console.log(error),\r\n      () => console.log(\"Get dispatchList\", this.dispatchList)\r\n    );\r\n  }\r\n\r\n  Complete_Dispatch() {\r\n    var dispatch = new Dispatch();\r\n    dispatch.OrderDetailKey = this.OrderDetailKey;\r\n    dispatch.status = 9;\r\n    this.dispatchDeliveryService.UpdateStatus(dispatch).subscribe(\r\n      data => {\r\n        this.showSuccess(\"Dispatch data saved!\", \"Dispatch\");\r\n        this.GetOrderstoDispatchDelivery();\r\n        this.loadDispatchItemsList();\r\n        this.showdispatchitemlist = true;\r\n        this.showaddupdatedispatchitems = false;\r\n        this.selectedKey = null;\r\n        this.showImage = true;\r\n        this.showDispatch = false;\r\n        this.clear();\r\n      },\r\n      error => console.log(error),\r\n      () => console.log(\"Get dispatchList\", this.dispatchList)\r\n    );\r\n  }\r\n\r\n  Cancel() {\r\n    this.dispatchDetails = [];\r\n    this.showdispatchitemlist = true;\r\n    this.showaddupdatedispatchitems = false;\r\n    this.selectedKey = \"\";\r\n    this.GetOrderstoDispatchDelivery();\r\n    this.loadDispatchItemsList();\r\n  }\r\n\r\n  addupdateDispatch() {\r\n    // if (\r\n    //   this.appointmentNo != undefined &&\r\n    //    this.driverkey != undefined && this.drivernotes != undefined && this.Chassis != undefined &&\r\n    //    this.legno != undefined && this.legtype != undefined &&\r\n    //   this.PortWaitingTimeFrom != undefined &&\r\n    //   this.PortWaitingTimeTo != undefined &&\r\n    //   this.CustomerWaitingTimeFrom != undefined &&\r\n    //   this.CustomerWaitingTimeTo != undefined &&\r\n    //   this.actualarrival != undefined &&\r\n    //   this.actualdeparture != undefined\r\n    // ) {\r\n    //   this.showWarning(\"\", \"Empty row cannot be added!\");\r\n    //   return;\r\n    // }\r\n\r\n    if (this.routekey != \"\" || this.rowindex >= 0) {\r\n      this.dispatchDetails[this.rowindex].appointmentno = this.appointmentNo;\r\n      this.dispatchDetails[this.rowindex].driverkey = this.driverkey;\r\n      this.dispatchDetails[this.rowindex].driver = this.driver;\r\n      this.dispatchDetails[this.rowindex].drivernotes = this.drivernotes;\r\n      this.dispatchDetails[this.rowindex].chassis = this.Chassis;\r\n      this.dispatchDetails[this.rowindex].legno = this.legno;\r\n      this.dispatchDetails[this.rowindex].legtype = this.legtype;\r\n      this.dispatchDetails[\r\n        this.rowindex\r\n      ].portwaitingtimefrom = this.PortWaitingTimeFrom;\r\n      this.dispatchDetails[\r\n        this.rowindex\r\n      ].portwaitingtimeto = this.PortWaitingTimeTo;\r\n      this.dispatchDetails[\r\n        this.rowindex\r\n      ].customerwaitingtimefrom = this.CustomerWaitingTimeFrom;\r\n      this.dispatchDetails[\r\n        this.rowindex\r\n      ].customerwaitingtimeto = this.CustomerWaitingTimeTo;\r\n      this.dispatchDetails[this.rowindex].actualarrival = this.actualarrival;\r\n      this.dispatchDetails[\r\n        this.rowindex\r\n      ].actualdeparture = this.actualdeparture;\r\n      this.clear();\r\n      this.showaddupdateEntryDiv = false;\r\n      return;\r\n    }\r\n\r\n    var newRow: any = {};\r\n    newRow.OrderDetailKey = this.DetailsData.OrderDetailKey;\r\n    newRow.appointmentno = this.appointmentNo;\r\n    newRow.driverkey = this.driverkey;\r\n    newRow.driver = this.driver;\r\n    newRow.drivernotes = this.drivernotes;\r\n    newRow.chassis = this.Chassis;\r\n    newRow.legno = this.legno;\r\n    newRow.legtype = this.legtype;\r\n    if (\r\n      this.PortWaitingTimeFrom == null ||\r\n      this.PortWaitingTimeFrom == undefined\r\n    ) {\r\n      this.PortWaitingTimeFrom = null;\r\n    }\r\n    //newRow.portwaitingtimefrom = this.PortWaitingTimeFrom;\r\n    newRow.portwaitingtimeto = this.PortWaitingTimeTo;\r\n    newRow.customerwaitingtimefrom = this.CustomerWaitingTimeFrom;\r\n    newRow.customerwaitingtimeto = this.CustomerWaitingTimeTo;\r\n    newRow.actualarrival = this.actualarrival;\r\n    newRow.actualdeparture = this.actualdeparture;\r\n    this.dispatchDetails.push(newRow);\r\n    console.log(\"New Row\", newRow);\r\n    this.clear();\r\n    this.showaddupdateEntryDiv = false;\r\n  }\r\n\r\n  editRow(details: Dispatch, index: number) {\r\n    this.rowindex = index;\r\n    this.OrderDetailKey = details.OrderDetailKey;\r\n    this.routekey = details.Routekey;\r\n    this.appointmentNo = details.appointmentno;\r\n    this.driverkey = details.driverkey;\r\n    this.drivernotes = details.drivernotes;\r\n    this.Chassis = details.chassis;\r\n    this.legno = details.legno;\r\n    this.legtype = details.legtype;\r\n    this.PortWaitingTimeFrom = details.portwaitingtimefrom;\r\n    this.PortWaitingTimeTo = details.portwaitingtimeto;\r\n    this.CustomerWaitingTimeFrom = details.customerwaitingtimefrom;\r\n    this.CustomerWaitingTimeTo = details.customerwaitingtimeto;\r\n    this.actualarrival = details.actualarrival;\r\n    this.actualdeparture = details.actualdeparture;\r\n    this.showaddupdateEntryDiv = true;\r\n    this.lbladdupdate = \"Update\";\r\n  }\r\n\r\n  drpdriver_ChangedEvent(driverkey: string) {\r\n    var Data = this.driverList.find(key => key.DriverKey == driverkey);\r\n    this.driverkey = Data.DriverKey;\r\n    this.driver = Data.DriverId;\r\n  }\r\n\r\n  deleteRow(details: Dispatch, index: number) {\r\n    if (details.Routekey != \"\" && details.Routekey != undefined) {\r\n      this.showWarning(\"\", \"Selected row cannot be deleted!\");\r\n      return;\r\n    }\r\n    this.dispatchDetails.splice(index, 1);\r\n  }\r\n\r\n  clear() {\r\n    this.Chassis = undefined;\r\n    this.legno = undefined;\r\n    this.legtype = undefined;\r\n    this.actualarrival = undefined;\r\n    this.actualdeparture = undefined;\r\n    this.appointmentNo = undefined;\r\n    this.driverkey = undefined;\r\n    this.drivernotes = undefined;\r\n    this.Chassis = undefined;\r\n    this.legno = undefined;\r\n    this.legtype = undefined;\r\n    this.PortWaitingTimeFrom = undefined;\r\n    this.PortWaitingTimeTo = undefined;\r\n    this.CustomerWaitingTimeFrom = undefined;\r\n    this.CustomerWaitingTimeTo = undefined;\r\n    this.actualarrival = undefined;\r\n    this.actualdeparture = undefined;\r\n    this.rowindex = -1;\r\n  }\r\n\r\n  showaddupdateEntry() {\r\n    this.showaddupdateEntryDiv = true;\r\n    this.lbladdupdate = \"Add\";\r\n  }\r\n\r\n  updateclick(data: any) {\r\n    this.dispatchData = this.dispatchDetails.find(\r\n      x => x.OrderDetailKey == data.OrderDetailKey\r\n    );\r\n  }\r\n\r\n  load_DispatchForEdit(data: any) {\r\n    this.showaddupdatedispatchitems = true;\r\n    this.showdispatchitemlist = false;\r\n\r\n    //this.HeaderData = new DeliveryOrderHeader();\r\n    //this.HeaderData.orderdetails = new Array<Order_details>();\r\n\r\n    this.orderService.GetbyKey(data.OrderKey).subscribe(\r\n      data => {\r\n        this.HeaderData = data;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        this.showImage = true;\r\n      }\r\n    );\r\n    console.log(\"data\", data);\r\n    this.dispatchList = data;\r\n\r\n    // this.dispatchDeliveryService.GetDispatch_OrderandDetails(data.OrderDetails.OrderDetailKey).subscribe(\r\n    //   result => {this.HeaderData =result;console.log(\"Get HeaderData\", this.HeaderData);\r\n    //   },\r\n    //   error => console.log(error),\r\n    //   () => console.log(\"Get HeaderData\", this.HeaderData)\r\n    // );\r\n    //this.dispatchList  = data;\r\n    //console.log(\"Get dispatchList\", this.dispatchList)\r\n\r\n    this.dispatchDetails = data.dispatchdetails;\r\n    console.log(\"Get orderdetails\", this.dispatchDetails);\r\n    this.DetailsData = data.OrderDetails;\r\n    console.log(\"Get orderdetails\", this.DetailsData);\r\n\r\n    //this.HeaderData.OrderNo =data.OrderNo;\r\n    //  this.HeaderData.OrderDate =data.OrderDate;\r\n    //  this.HeaderData.ordertypedescription =data.ordertypedescription;\r\n  }\r\n\r\n  showSuccess(message: string, title: string) {\r\n    this.toastr.success(message, title, { timeOut: 2000, closeButton: true });\r\n  }\r\n  showError(message: string, title: string) {\r\n    this.toastr.error(message, \"Oops!\", { timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  showWarning(message: string, title: string) {\r\n    this.toastr.warning(message, title);\r\n  }\r\n\r\n  showInfo(message: string, title: string) {\r\n    this.toastr.info(message, title, { timeOut: 2000, closeButton: true });\r\n  } \r\n}\r\n","export default \"::ng-deep.bs-datepicker {\\n  height: 300px;\\n}\\n\\n::ng-deep.bs-datepicker-container {\\n  padding: 0px;\\n}\\n\\n.card-header {\\n  height: 50px;\\n}\\n\\n.disabled {\\n  cursor: not-allowed;\\n}\\n\\n.ScrollStyle {\\n  height: 600px;\\n  overflow-y: scroll;\\n}\\n\\n@media (min-width: 768px) {\\n  .modal-xl {\\n    width: 100%;\\n    max-width: 1200px;\\n  }\\n}\\n\\ndiv.a {\\n  line-height: normal;\\n}\\n\\nspan.font {\\n  font-family: Arial, Helvetica, sans-serif;\\n  font-size: 11px;\\n  letter-spacing: 1.2px;\\n  word-spacing: 2.8px;\\n  font-weight: 400;\\n  -webkit-text-decoration: none solid #444444;\\n          text-decoration: none solid #444444;\\n  font-style: normal;\\n  font-variant: normal;\\n  text-transform: none;\\n}\\n\\n.tag {\\n  border-radius: 50%;\\n  height: 15px;\\n  width: 15px;\\n  display: inline-block;\\n}\\n\\n.tag-default {\\n  background-color: gray;\\n}\\n\\n.tag-success {\\n  background-color: green;\\n}\\n\\n.tag-warning {\\n  background-color: orange;\\n}\\n\\n.tag-danger {\\n  background-color: red;\\n}\\n\\n.table-custom tbody {\\n  display: block;\\n  height: 200px;\\n  overflow: auto;\\n}\\n\\nthead,\\ntbody tr {\\n  display: table;\\n  width: 100%;\\n  table-layout: fixed;\\n}\\n\\n.scrollbar {\\n  float: left;\\n  height: 300px;\\n  overflow-y: scroll;\\n}\\n\\n#style-10::-webkit-scrollbar-track {\\n  box-shadow: 1px 1px 0px rgba(0, 0, 0, 0.1);\\n  background-color: #5f5c5d;\\n  border-radius: 10px;\\n}\\n\\n#style-10::-webkit-scrollbar {\\n  width: 7px;\\n  background-color: #1a1818;\\n}\\n\\n#style-10::-webkit-scrollbar-thumb {\\n  background-color: darkslategrey;\\n  background-image: -webkit-linear-gradient(90deg, rgba(255, 255, 255, 0.2) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.2) 50%, rgba(255, 255, 255, 0.2) 75%, transparent 75%, transparent);\\n}\\n\\np {\\n  font-family: Lato;\\n}\\n\\n.pointer {\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvZG9pbnRha2UvQzpcXFVzZXJzXFxBcnVuXFxEb2N1bWVudHNcXEdpdEh1YlxcVE1TX0FkbWluXFxUTVNfV2ViL3NyY1xcYXBwXFx2aWV3c1xcZG9pbnRha2VcXGRvaW50YWtlLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy9kb2ludGFrZS9kb2ludGFrZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7QUNDRjs7QURFQTtFQUNFLFlBQUE7QUNDRjs7QURFQTtFQUNFLFlBQUE7QUNDRjs7QURFQTtFQUNFLG1CQUFBO0FDQ0Y7O0FERUE7RUFJQyxhQUFBO0VBQ0Esa0JBQUE7QUNGRDs7QURXQTtFQUNFO0lBQ0UsV0FBQTtJQUNBLGlCQUFBO0VDUkY7QUFDRjs7QURXQTtFQUNFLG1CQUFBO0FDVEY7O0FEa0JBO0VBQ0UseUNBQUE7RUFDQSxlQUFBO0VBQ0EscUJBQUE7RUFDQSxtQkFBQTtFQUNBLGdCQUFBO0VBQ0EsMkNBQUE7VUFBQSxtQ0FBQTtFQUNBLGtCQUFBO0VBQ0Esb0JBQUE7RUFDQSxvQkFBQTtBQ2ZGOztBRGtCQTtFQUNFLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7RUFDQSxxQkFBQTtBQ2ZGOztBRGtCQTtFQUNFLHNCQUFBO0FDZkY7O0FEa0JBO0VBQ0UsdUJBQUE7QUNmRjs7QURrQkE7RUFDRSx3QkFBQTtBQ2ZGOztBRGtCQTtFQUNFLHFCQUFBO0FDZkY7O0FEbUJFO0VBQ0UsY0FBQTtFQUNBLGFBQUE7RUFDQSxjQUFBO0FDaEJKOztBRG9CQTs7RUFFSSxjQUFBO0VBQ0EsV0FBQTtFQUNBLG1CQUFBO0FDakJKOztBRHFCQTtFQUNFLFdBQUE7RUFDQSxhQUFBO0VBRUEsa0JBQUE7QUNuQkY7O0FEc0JBO0VBR0UsMENBQUE7RUFDQSx5QkFBQTtFQUNBLG1CQUFBO0FDbkJGOztBRHNCQTtFQUNFLFVBQUE7RUFDQSx5QkFBQTtBQ25CRjs7QURzQkE7RUFFRSwrQkFBQTtFQUNELDBNQUFBO0FDcEJEOztBRDZCQTtFQUNFLGlCQUFBO0FDMUJGOztBRDRCQTtFQUNJLGVBQUE7QUN6QkoiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9kb2ludGFrZS9kb2ludGFrZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjo6bmctZGVlcC5icy1kYXRlcGlja2VyIHtcclxuICBoZWlnaHQ6IDMwMHB4O1xyXG59XHJcblxyXG46Om5nLWRlZXAuYnMtZGF0ZXBpY2tlci1jb250YWluZXIge1xyXG4gIHBhZGRpbmc6IDBweDtcclxufVxyXG5cclxuLmNhcmQtaGVhZGVyIHtcclxuICBoZWlnaHQ6IDUwcHg7XHJcbn1cclxuXHJcbi5kaXNhYmxlZCB7XHJcbiAgY3Vyc29yOiBub3QtYWxsb3dlZDtcclxufVxyXG5cclxuLlNjcm9sbFN0eWxlIHtcclxuICAvLyBtYXgtaGVpZ2h0OiA2MDBweDtcclxuICAvLyBvdmVyZmxvdy15OiBzY3JvbGw7IFxyXG4gXHJcblx0aGVpZ2h0OiA2MDBweDtcdFxyXG5cdG92ZXJmbG93LXk6IHNjcm9sbDtcclxuXHJcbn1cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XHJcbiAgLm1vZGFsLXhsIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWF4LXdpZHRoOiAxMjAwcHg7XHJcbiAgfVxyXG59XHJcblxyXG5kaXYuYSB7XHJcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcclxufVxyXG5cclxuLy8gdGgge1xyXG4vLyAgIC8vIGJhY2tncm91bmQtY29sb3I6IHJnYigxMzAsIDE3NCwgMTkyKTtcclxuLy8gICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNjYsIDgxLCA4OCk7XHJcbi8vICAgY29sb3I6IHdoaXRlO1xyXG4vLyB9XHJcblxyXG5zcGFuLmZvbnQge1xyXG4gIGZvbnQtZmFtaWx5OiBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xyXG4gIGZvbnQtc2l6ZTogMTFweDtcclxuICBsZXR0ZXItc3BhY2luZzogMS4ycHg7XHJcbiAgd29yZC1zcGFjaW5nOiAyLjhweDtcclxuICBmb250LXdlaWdodDogNDAwO1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZSBzb2xpZCByZ2IoNjgsIDY4LCA2OCk7XHJcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gIGZvbnQtdmFyaWFudDogbm9ybWFsO1xyXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xyXG59XHJcblxyXG4udGFnIHtcclxuICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgaGVpZ2h0OiAxNXB4O1xyXG4gIHdpZHRoOiAxNXB4O1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxufVxyXG5cclxuLnRhZy1kZWZhdWx0IHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmF5O1xyXG59XHJcblxyXG4udGFnLXN1Y2Nlc3Mge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGdyZWVuO1xyXG59XHJcblxyXG4udGFnLXdhcm5pbmcge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IG9yYW5nZTtcclxufVxyXG5cclxuLnRhZy1kYW5nZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJlZDtcclxufVxyXG5cclxuLnRhYmxlLWN1c3RvbSB7XHJcbiAgdGJvZHkge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBoZWlnaHQ6IDIwMHB4O1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgfVxyXG4gIFxyXG59XHJcbnRoZWFkLFxyXG4gIHRib2R5IHRyIHtcclxuICAgIGRpc3BsYXk6IHRhYmxlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICB0YWJsZS1sYXlvdXQ6IGZpeGVkO1xyXG4gIH1cclxuICBcclxuICAvL3Njcm9sbCBiYXIgd2l0aCBjb2xvciAgXHJcbi5zY3JvbGxiYXIgeyAgXHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbiAgaGVpZ2h0OiAzMDBweDsgIFxyXG4gIC8vYmFja2dyb3VuZDogYmxhY2s7XHJcbiAgb3ZlcmZsb3cteTogc2Nyb2xsOyBcclxufVxyXG5cclxuI3N0eWxlLTEwOjotd2Via2l0LXNjcm9sbGJhci10cmFjayB7IFxyXG4gIC13ZWJraXQtYm94LXNoYWRvdzogMXB4IDFweCAwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gIC1tb3otYm94LXNoYWRvdzogMXB4IDFweCAwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gIGJveC1zaGFkb3c6IDFweCAxcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoOTUsIDkyLCA5Myk7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxufVxyXG5cclxuI3N0eWxlLTEwOjotd2Via2l0LXNjcm9sbGJhciB7XHJcbiAgd2lkdGg6IDdweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjYsIDI0LCAyNCk7XHJcbn1cclxuXHJcbiNzdHlsZS0xMDo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWJcclxue1xyXG4gIGJhY2tncm91bmQtY29sb3I6ZGFya3NsYXRlZ3JleTtcdCAgXHJcblx0YmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQoOTBkZWcsXHJcblx0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmdiYSgyNTUsIDI1NSwgMjU1LCAuMikgMjUlLFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0ICB0cmFuc3BhcmVudCAyNSUsXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQgIHRyYW5zcGFyZW50IDUwJSxcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdCAgcmdiYSgyNTUsIDI1NSwgMjU1LCAuMikgNTAlLFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0ICByZ2JhKDI1NSwgMjU1LCAyNTUsIC4yKSA3NSUsXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQgIHRyYW5zcGFyZW50IDc1JSxcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdCAgdHJhbnNwYXJlbnQpXHJcbn1cclxucCB7XHJcbiAgZm9udC1mYW1pbHk6IExhdG87XHJcbn1cclxuLnBvaW50ZXJ7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn0iLCI6Om5nLWRlZXAuYnMtZGF0ZXBpY2tlciB7XG4gIGhlaWdodDogMzAwcHg7XG59XG5cbjo6bmctZGVlcC5icy1kYXRlcGlja2VyLWNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDBweDtcbn1cblxuLmNhcmQtaGVhZGVyIHtcbiAgaGVpZ2h0OiA1MHB4O1xufVxuXG4uZGlzYWJsZWQge1xuICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xufVxuXG4uU2Nyb2xsU3R5bGUge1xuICBoZWlnaHQ6IDYwMHB4O1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAubW9kYWwteGwge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1heC13aWR0aDogMTIwMHB4O1xuICB9XG59XG5kaXYuYSB7XG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7XG59XG5cbnNwYW4uZm9udCB7XG4gIGZvbnQtZmFtaWx5OiBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDExcHg7XG4gIGxldHRlci1zcGFjaW5nOiAxLjJweDtcbiAgd29yZC1zcGFjaW5nOiAyLjhweDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lIHNvbGlkICM0NDQ0NDQ7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC12YXJpYW50OiBub3JtYWw7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4udGFnIHtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBoZWlnaHQ6IDE1cHg7XG4gIHdpZHRoOiAxNXB4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi50YWctZGVmYXVsdCB7XG4gIGJhY2tncm91bmQtY29sb3I6IGdyYXk7XG59XG5cbi50YWctc3VjY2VzcyB7XG4gIGJhY2tncm91bmQtY29sb3I6IGdyZWVuO1xufVxuXG4udGFnLXdhcm5pbmcge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBvcmFuZ2U7XG59XG5cbi50YWctZGFuZ2VyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xufVxuXG4udGFibGUtY3VzdG9tIHRib2R5IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogMjAwcHg7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG50aGVhZCxcbnRib2R5IHRyIHtcbiAgZGlzcGxheTogdGFibGU7XG4gIHdpZHRoOiAxMDAlO1xuICB0YWJsZS1sYXlvdXQ6IGZpeGVkO1xufVxuXG4uc2Nyb2xsYmFyIHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIGhlaWdodDogMzAwcHg7XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbn1cblxuI3N0eWxlLTEwOjotd2Via2l0LXNjcm9sbGJhci10cmFjayB7XG4gIC13ZWJraXQtYm94LXNoYWRvdzogMXB4IDFweCAwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICAtbW96LWJveC1zaGFkb3c6IDFweCAxcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgYm94LXNoYWRvdzogMXB4IDFweCAwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNWY1YzVkO1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xufVxuXG4jc3R5bGUtMTA6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgd2lkdGg6IDdweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzFhMTgxODtcbn1cblxuI3N0eWxlLTEwOjotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7XG4gIGJhY2tncm91bmQtY29sb3I6IGRhcmtzbGF0ZWdyZXk7XG4gIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KDkwZGVnLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMikgMjUlLCB0cmFuc3BhcmVudCAyNSUsIHRyYW5zcGFyZW50IDUwJSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpIDUwJSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpIDc1JSwgdHJhbnNwYXJlbnQgNzUlLCB0cmFuc3BhcmVudCk7XG59XG5cbnAge1xuICBmb250LWZhbWlseTogTGF0bztcbn1cblxuLnBvaW50ZXIge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59Il19 */\"","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  OnDestroy,\r\n  SimpleChanges,\r\n  OnChanges,\r\n  ViewChild\r\n} from \"@angular/core\";\r\nimport { DeliveryOrderHeader } from \"../../_models/DeliveryOrderHeader\";\r\nimport { Order_type } from \"../../_models/order_type.enum\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Broker } from \"../../_models/broker\";\r\nimport { DeliveryOrderService } from \"../../_services/deliveryOrder.service\";\r\nimport { Params, Router, ActivatedRoute } from \"@angular/router\";\r\nimport \"rxjs/add/operator/filter\";\r\nimport \"rxjs/add/operator/switchMap\";\r\n//import { v } from \"@angular/core/src/render3\";\r\nimport { switchMap } from \"rxjs/operators\";\r\nimport { Order_details } from \"./../../_models/order_details\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport * as moment from \"moment\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { HttpClient, HttpEventType, HttpResponse } from \"@angular/common/http\";\r\n\r\nimport {\r\n  OrderType,\r\n  Priority,\r\n  Containersize,\r\n  Status,\r\n  HoldReason,\r\n  Source,\r\n  Carrier,\r\n  LoadDischargePort\r\n} from \"../../common/master\";\r\nimport { MasterService } from \"../../_services/master.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { AppSettings } from \"./../../_constants/appsettings\";\r\nimport { FileUploadService } from \"../../_services/fileupload.service\";\r\nimport { findLast } from \"@angular/compiler/src/directive_resolver\";\r\nimport { FileUploaderService } from \"../../_services/file-uploader.service\";\r\nimport { Customer } from '../../_models/customer';\r\n\r\n//const URL = \"https://evening-anchorage-3159.herokuapp.com/api/\";\r\n//const URL = 'http://localhost:4200/api';\r\n\r\n@Component({\r\n  selector: \"app-dointake\",\r\n  templateUrl: \"./dointake.component.html\",\r\n  styleUrls: [\"./dointake.component.scss\"]\r\n})\r\nexport class DOIntakeComponent implements OnInit, OnChanges, OnDestroy {\r\n  subscription: Subscription; \r\n  @Input() orderKeyinput: string;  \r\n  Orderlist: Array<DeliveryOrderHeader> = [];\r\n\r\n  ordertypelist: OrderType[];\r\n  prioritylist: Priority[];\r\n  containersizelist: Containersize[];\r\n  statuslist: Status[];\r\n  holdreasonlist: HoldReason[];\r\n  sourcelist: Source[];\r\n  carrierlist: Carrier[];\r\n  LoadDischargePortList: LoadDischargePort[];\r\n\r\n  isEditmode: boolean = false;\r\n\r\n  public doHeader: DeliveryOrderHeader;\r\n  public orderinfo: Order_details[];\r\n  searchText: string;\r\n\r\n  isContainerAttributeVisible: boolean = true;\r\n  CreateOrEditOrder: boolean = false;\r\n  lblCreateOrEdit: string = \"\";\r\n  ShowOrderList: boolean = true;\r\n  btnShowcreateNewOrder: boolean = true;\r\n  editmode = false;\r\n  showDO = false;\r\n  showImage = false;\r\n  customer_disabled = false;\r\n  selectedKey: string;\r\n\r\n  orderNo: string;\r\n  errorMessage: string;\r\n  orderKey: string;\r\n  selectedBillToKey = \"\";\r\n  HolddropdownVisible = false;\r\n  showordernodate: boolean = false;\r\n\r\n  myFiles: string[] = [];\r\n  error: string;\r\n  fileUpload = { status: \"\", message: \"\", filePath: \"\" };\r\n  fileUploadcount: number;\r\n\r\n  //uploader = new FileUploader({ url: AppSettings._BaseURL + \"FileUpload\" });\r\n\r\n  display = \"none\"; //default Variable\r\n\r\n  public hasBaseDropZoneOver: boolean = false;\r\n  public hasAnotherDropZoneOver: boolean = false;\r\n\r\n  addupdatecontainer: Array<Order_details> = [];\r\n  public ContainerDetails: Array<Order_details> = [];\r\n  private AddContainerDetails: Order_details;\r\n  private newAttribute: any = {};\r\n  rowindex: number;\r\n\r\n  dropdownList = [];\r\n  selectedItems = [];\r\n  dropdownSettings = {};\r\n\r\n  public OrderDetailKey: string = \"\";\r\n  public containerid:string=\"\";\r\n  public ContainerSize: string = \"\";\r\n  public ContainerSizeDesc: string = \"\";\r\n  public ContainerNo: string = \"\";\r\n  public Chassis: string = \"\";\r\n  public SealNo: string = \"\";\r\n  public Weight: number;\r\n  public Comments: string = \"\";\r\n  public CommentItems = new Array();\r\n\r\n  hazard: string;\r\n  trixale: string;\r\n  overweight: string;\r\n  needstobescaled: string;\r\n  IsHazardChecked: boolean = false;\r\n  IsOverweightChecked: boolean = false;\r\n  IsTrixaleChecked: boolean = false;\r\n  IsNeedstobescaledChecked: boolean = false;\r\n\r\n  isDesc: boolean = false;\r\n  column: string = \"OrderNo\";\r\n  p: number = 1;\r\n  count: number;\r\n\r\n  constructor(\r\n    private toastr: ToastrService,\r\n    private http: HttpClient,\r\n    private service: DeliveryOrderService,\r\n    private master: MasterService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private fileUploadService: FileUploadService,\r\n    private fileUploaderService:FileUploaderService,\r\n  ) {\r\n    this.doHeader = null;\r\n    // this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n  }\r\n\r\n  onSelectedCustKeyAddress(customer: Customer) {\r\n    this.doHeader.CustKey =customer.CustomerKey; \r\n    this.doHeader.BillToAddress = customer.addrkey;\r\n  }\r\n  // onSelectedBilltoAddress(addressKey: string) {\r\n  //   this.doHeader.BillToAddress = addressKey;\r\n  // }\r\n  onSelectedPickupAddress(addressKey: string) {\r\n    this.doHeader.SourceAddress = addressKey;\r\n  }\r\n  onSelectedConsigneeAddress(addressKey: string) {\r\n    this.doHeader.DestinationAddress = addressKey;\r\n  }\r\n  onSelectedReturnAddress(addressKey: string) {\r\n    this.doHeader.ReturnAddress = addressKey;\r\n  }\r\n  onSelectedBroker(brokerkey: string) {\r\n    this.doHeader.Brokerkey = brokerkey;\r\n  }\r\n\r\n  onSelectedContainerDetails(Order_details: any[]) {\r\n    this.doHeader.orderdetails = Order_details;\r\n  }\r\n  onOrdernoGenerated(newOrderno: string) {\r\n    this.showordernodate = true;\r\n    this.doHeader.OrderNo = \"\";\r\n    this.doHeader.OrderNo = newOrderno;\r\n    this.doHeader.OrderDate = new Date(); //.toLocaleDateString();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.doHeader = null;\r\n    this.doHeader = new DeliveryOrderHeader();\r\n    this.doHeader.orderdetails = new Array<Order_details>();\r\n    //this.orderNo = this.route.snapshot.paramMap.get(\"order\");\r\n    this.orderNo = this.orderKeyinput;\r\n    this.showDO = false;\r\n    this.fileUploaderService.clearQueue();\r\n    \r\n    this.master.getContainerSizeList().subscribe(\r\n      data => (this.containersizelist = data),\r\n      error => console.log(error),\r\n      () => console.log(\"Get containersizelist\", this.containersizelist)\r\n    );\r\n\r\n    this.master.getPriorityList().subscribe(\r\n      data => (this.prioritylist = data),\r\n      error => console.log(error),\r\n      () => console.log(\"Get prioritylist\", this.prioritylist)\r\n    );\r\n\r\n    this.master.getOrderTypeList().subscribe(\r\n      data => (this.ordertypelist = data),\r\n      error => console.log(error),\r\n      () => console.log(\"Get ordertypelist\", this.ordertypelist)\r\n    );\r\n\r\n    this.master.getHoldReasonList().subscribe(\r\n      data => (this.holdreasonlist = data),\r\n      error => console.log(error),\r\n      () => console.log(\"Get holdreasonlist\", this.holdreasonlist)\r\n    );\r\n\r\n    this.master.getStatusList().subscribe(\r\n      data => (this.statuslist = data),\r\n      error => console.log(error),\r\n      () => console.log(\"Get statuslist\", this.statuslist)\r\n    );\r\n\r\n    this.master.getSourceList().subscribe(\r\n      data => (this.sourcelist = data),\r\n      error => console.log(error),\r\n      () => console.log(\"Get sourcelist\", this.sourcelist)\r\n    );\r\n\r\n    this.master.getLoadDischargePortList(3).subscribe(\r\n      data => (this.LoadDischargePortList = data),\r\n      error => console.log(error),\r\n      () => console.log(\"Get LoadDischargePortList\", this.LoadDischargePortList)\r\n    );\r\n\r\n    this.master.getCarrierList().subscribe(\r\n      data => (this.carrierlist = data),\r\n      error => console.log(error),\r\n      () => console.log(\"Get carrierlist\", this.carrierlist)\r\n    );\r\n\r\n    this.service.getOrderlist().subscribe(\r\n      data => (this.Orderlist = data, \r\n        this.count =this.Orderlist.length ),\r\n      error => console.log(error),\r\n      () => console.log(\"Get OrderList complete\", this.Orderlist)\r\n    );\r\n\r\n    if (this.orderNo != undefined) {\r\n      this.isContainerAttributeVisible = false;\r\n      this.CreateOrEditOrder = false;\r\n\r\n      //getting order info from the DB..\r\n      this.service.GetbyKey(this.orderNo).subscribe(data => {\r\n        ((this.doHeader = data),\r\n        this.service.GetOrderDetailsbyKey(this.orderNo).subscribe(\r\n          data => (this.doHeader.orderdetails = data),\r\n          error => console.log(error),\r\n          () => console.log(\"Get OrderDetail\", this.doHeader.orderdetails)\r\n        )),\r\n          error => console.log(error),\r\n          () =>\r\n            console.log(\r\n              \"Get Order Detail BillToAddress\",\r\n              this.doHeader.BillToAddress\r\n            );\r\n      });      \r\n    }\r\n\r\n    if(this.Orderlist.length<1)\r\n    {\r\n        this.showImage = true;\r\n    }\r\n\r\n    this.dropdownList = [\r\n      { item_id: 1, item_text: \"Hazard\" },\r\n      { item_id: 2, item_text: \"Overweight\" },\r\n      { item_id: 3, item_text: \"Triaxle\" },\r\n      { item_id: 4, item_text: \"Needs to be scaled\" }\r\n    ];\r\n    this.selectedItems = [\r\n      // { item_id: 3, item_text: 'Pune' },\r\n      // { item_id: 4, item_text: 'Navsari' }\r\n    ];\r\n    this.dropdownSettings = {\r\n      singleSelection: false,\r\n      idField: \"item_id\",\r\n      textField: \"item_text\",\r\n      selectAllText: \"Select All\",\r\n      unSelectAllText: \"UnSelect All\",\r\n      itemsShowLimit: 4,\r\n      allowSearchFilter: false\r\n    };\r\n  }\r\n\r\n  OnSubmit(form) {\r\n    if (\r\n      this.doHeader.CustKey == null ||\r\n      this.doHeader.CustKey == undefined ||\r\n      this.doHeader.CustKey == \"\"\r\n    ) {\r\n      this.showError(\"Customer is required\", \"Header\");\r\n      return;\r\n    }\r\n    // if (\r\n    //   this.doHeader.BillToAddress == null ||\r\n    //   this.doHeader.BillToAddress == undefined ||\r\n    //   this.doHeader.BillToAddress == \"\"\r\n    // ) {\r\n    //   this.showError(\"Consignee is required\", \"Header\");\r\n    //   return;\r\n    // }\r\n    if (\r\n      this.doHeader.SourceAddress == null ||\r\n      this.doHeader.SourceAddress == undefined ||\r\n      this.doHeader.SourceAddress == \"\"\r\n    ) {\r\n      this.showError(\"Pickup is required\", \"Header\");\r\n      return;\r\n    }\r\n    if (\r\n      this.doHeader.DestinationAddress == null ||\r\n      this.doHeader.DestinationAddress == undefined ||\r\n      this.doHeader.DestinationAddress == \"\"\r\n    ) {\r\n      this.showError(\"Delivery is required\", \"Header\");\r\n      return;\r\n    }\r\n\r\n    if (\r\n      this.doHeader.orderdetails == null ||\r\n      this.doHeader.orderdetails.length == 0\r\n    ) {\r\n      this.showError(\"Container data is missing!!\", \"Container\");\r\n      return;\r\n    }\r\n    \r\n    this.doHeader.BillToAddress = this.doHeader.CustKey;\r\n    if (!this.isEditmode) {\r\n      this.service.saveDOHeader(form.value).subscribe(\r\n        result => {\r\n          this.orderKey = result;\r\n          if (this.orderKey != undefined && this.orderKey != \"\") {\r\n            this.saveDeliveryDetails();\r\n          }\r\n        },\r\n        error => {\r\n          this.errorMessage = error;\r\n          this.showError(this.errorMessage, \"New-Order\");\r\n        }\r\n      );\r\n    } else {\r\n      this.service.updateDOHeader(form.value).subscribe(\r\n        result => {\r\n          if (result) {\r\n            this.updateDeliveryOrderDetails();\r\n          }\r\n        },\r\n        error => {\r\n          this.errorMessage = error;\r\n          this.showError(this.errorMessage, \"New-Order\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  updateDeliveryOrderDetails() {\r\n    for (let order of this.doHeader.orderdetails) {\r\n      order.OrderKey = this.doHeader.OrderKey;\r\n    }\r\n    this.service\r\n      .updateDeliveryOrderDetails(this.doHeader.orderdetails)\r\n      .subscribe(\r\n        results => {\r\n          this.showSuccess(\"Order Updated successfully\", \"Order Update\");\r\n          this.service.getOrderlist().subscribe(\r\n            data => (this.Orderlist = data,\r\n            this.count = this.Orderlist.length),\r\n            error => console.log(error),\r\n            () => console.log(\"Get OrderList complete\", this.Orderlist)\r\n          );\r\n          this.cancel();\r\n        },\r\n        error => (this.errorMessage = error)\r\n      );\r\n  }\r\n\r\n  private saveDeliveryDetails() {\r\n    for (let order of this.doHeader.orderdetails) {\r\n      order.OrderKey = this.orderKey;\r\n    }\r\n\r\n    this.service.saveOrderDetails(this.doHeader.orderdetails).subscribe(\r\n      results => {\r\n        this.showSuccess(\"Order Created successfully\", \"New-Order\");\r\n        this.service.getOrderlist().subscribe(\r\n          data => (this.Orderlist = data),\r\n          error => console.log(error),\r\n          () => console.log(\"Get OrderList complete\", this.Orderlist)\r\n        );\r\n        this.createNewOrder();\r\n        this.cancel();\r\n       // this.getOrderInfo(this.orderKey);\r\n      },\r\n      error => (this.errorMessage = error)\r\n    );\r\n  }\r\n\r\n  clear() {\r\n    this.doHeader.BrokerRefNo = undefined;\r\n    this.doHeader.OrderKey = undefined;\r\n    this.doHeader.OrderNo = undefined;\r\n    //this.doHeader. CustKey:string ;\r\n    this.doHeader.OrderDate = undefined;\r\n    //BillToAddress: string ;\r\n    //SourceAddress: string ;\r\n    // DestinationAddress: string ;\r\n    //ReturnAddress: string ;\r\n    //Source:string ;\r\n    this.doHeader.Source = undefined;\r\n    this.doHeader.OrderType = undefined;\r\n    this.doHeader.Status = undefined;\r\n    this.doHeader.StatusDate = undefined;\r\n    this.doHeader.HoldReason = undefined;\r\n    this.doHeader.HoldDate = undefined;\r\n    this.doHeader.BrokerName = \"Select Broker\";\r\n    //BrokerId:string ;\r\n    //Brokerkey: string;\r\n    // PortofOriginKey=undefined;\r\n    // CarrierKey=undefined;\r\n    this.doHeader.VesselName = undefined;\r\n    this.doHeader.BillofLading = undefined;\r\n    this.doHeader.BookingNo = undefined;\r\n    this.doHeader.CutOffDate = undefined;\r\n    this.doHeader.Priority = undefined;\r\n    this.doHeader.IsHazardous = undefined;\r\n    this.doHeader.CreatedBy = undefined;\r\n    this.doHeader.CreatedDate = undefined;\r\n\r\n    this.doHeader.orderdetails = null;\r\n  }\r\n\r\n  delay(ms: number) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n\r\n  ngOnChanges() {}\r\n\r\n  ngOnDestroy() {\r\n    this.subscription && this.subscription.unsubscribe();\r\n  }\r\n\r\n  StatusDropDownChanged(val: number) {\r\n    if (val.toString() === \"8\") {\r\n      //OnHold\r\n      this.HolddropdownVisible = true;\r\n    } else {\r\n      this.HolddropdownVisible = false;\r\n    }\r\n  }\r\n\r\n  onUploadSubmit() {\r\n    if (this.myFiles.length === 0) {\r\n      return this.showWarning(\"No File(s) selected\", \"Upload\");\r\n    }\r\n    for (var i = 0; i < this.myFiles.length; i++) {\r\n      const frmData = new FormData();\r\n      frmData.append(\"fileUpload\", this.myFiles[i]);\r\n      frmData.append(\"DO\", this.doHeader.OrderNo);\r\n      frmData.append(\"CreatedBy\", this.doHeader.CreatedBy);\r\n\r\n      // this.fileUploadService.upload(frmData).subscribe(\r\n      //   res => {\r\n      //     this.fileUpload.status = res.toString();\r\n      //     console.log(\"his.fileUpload.status\", this.fileUpload.status);\r\n      //     this.fileUploadcount = this.fileUploadcount + 1;\r\n      //     this.myFiles = [];\r\n      //   },\r\n      //   err => {\r\n      //     this.error = err;\r\n      //     this.showError(this.error, \"Upload Error\");\r\n      //   }\r\n      // );\r\n\r\n      // this.fileUploaderService.uploadAll(this.doHeader.OrderNo,this.doHeader.CreatedBy).subscribe(\r\n      //   res => {\r\n      //     this.fileUpload.status = res.toString();\r\n      //     console.log(\"his.fileUpload.status\", this.fileUpload.status);\r\n      //     this.fileUploadcount = this.fileUploadcount + 1;\r\n      //     this.myFiles = [];\r\n      //   },\r\n      //   err => {\r\n      //     this.error = err;\r\n      //     this.showError(this.error, \"Upload Error\");\r\n      //   }\r\n      // );\r\n\r\n      \r\n    }\r\n    this.showSuccess(\"File(s) uploaded successfully\", \"Upload\");\r\n  }\r\n\r\n  showSuccess(message: string, title: string) {\r\n    this.toastr.success(message, title, { timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  showError(message: string, title: string) {\r\n    this.toastr.error(message, title, { timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  showWarning(message: string, title: string) {\r\n    this.toastr.warning(message, title);\r\n  }\r\n\r\n  showInfo(message: string, title: string) {\r\n    this.toastr.info(message, title, { timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  showToast(position: any = \"top-left\") {\r\n    this.toastr.info(\"This is a toast.\", \"Toast\", { positionClass: position });\r\n  }\r\n\r\n  onSelectedFile(e) {\r\n    this.myFiles = [];\r\n    this.fileUploadcount = 0;\r\n    for (var i = 0; i < e.target.files.length; i++) {\r\n      this.myFiles.push(e.target.files[i]);\r\n    }\r\n  }\r\n\r\n  view(inputKey: string) {\r\n    this.getOrderInfo(inputKey);\r\n    this.customer_disabled = true;\r\n    this.display = \"block\";\r\n    this.showDO = false;\r\n    this.ShowOrderList = true;\r\n    this.CreateOrEditOrder = false;\r\n    this.showImage = false;\r\n  }\r\n  update(inputKey: string) {\r\n    this.lblCreateOrEdit = \"Update\";\r\n    this.isEditmode = true;\r\n    this.getOrderInfo(inputKey);\r\n    this.CreateOrEditOrder = true;\r\n    this.editmode = true;\r\n    this.showDO = false;\r\n    this.ShowOrderList = false;\r\n    this.showImage = false;\r\n  }\r\n  getOrderInfo(inputKey: string) {\r\n    this.doHeader = null;\r\n    this.doHeader = new DeliveryOrderHeader();\r\n    this.doHeader.orderdetails = new Array<Order_details>();\r\n\r\n    this.btnShowcreateNewOrder = true;\r\n    this.selectedKey = null;\r\n\r\n    this.service.GetbyKey(inputKey).subscribe(data => {\r\n      (this.doHeader = data), console.log(\"testing Model----\", this.doHeader);\r\n      this.service.GetOrderDetailsbyKey(inputKey).subscribe(\r\n        data => (this.doHeader.orderdetails = data),\r\n        error => console.log(error),\r\n        () => console.log(\"Get OrderDetail\", this.doHeader.orderdetails)\r\n      ),\r\n        error => console.log(error);\r\n    });\r\n\r\n    this.isContainerAttributeVisible = true;\r\n    this.selectedKey = inputKey;\r\n  }\r\n\r\n  createNewOrder() {\r\n    this.doHeader = null;\r\n    this.doHeader = new DeliveryOrderHeader();\r\n    this.doHeader.orderdetails = new Array<Order_details>();\r\n    this.doHeader.CustKey = \"\";\r\n    this.doHeader.BillToAddress = \"\";\r\n    this.doHeader.SourceAddress = \"\";\r\n    this.doHeader.DestinationAddress = \"\";\r\n    this.doHeader.ReturnAddress = \"\";\r\n    this.doHeader.Brokerkey = \"\";\r\n    this.doHeader.Comment = \"\";\r\n    this.ContainerDetails = new Array<Order_details>();\r\n    this.customer_disabled = false;\r\n    this.CreateOrEditOrder = true;\r\n    this.lblCreateOrEdit = \"Create\";\r\n    this.btnShowcreateNewOrder = false;\r\n    this.ShowOrderList = false;\r\n    this.showDO = false;\r\n    this.showImage = false;\r\n    this.editmode = false;\r\n  }\r\n\r\n  openModalDialog() {\r\n    this.display = \"block\"; //Set block css\r\n  }\r\n\r\n  closeModalDialog() {\r\n    this.display = \"none\"; //set none css after close dialog\r\n  }\r\n\r\n  cancel() {\r\n    this.ShowOrderList = true;\r\n    this.CreateOrEditOrder = false;\r\n    this.showImage = false;\r\n    this.isEditmode = false;\r\n    this.fileUploaderService.clearQueue();\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  deleteFieldValue(index) {\r\n    this.doHeader.orderdetails.splice(index, 1);\r\n  }\r\n  onSelectedcontainersize(ContainerNo: string) {\r\n    this.newAttribute.ContainerNo = ContainerNo;\r\n  }\r\n\r\n  onItemSelect(item: any) {\r\n    console.log(item);\r\n  }\r\n  onSelectAll(items: any) {\r\n    console.log(items);\r\n  }\r\n\r\n  Checkbox1_Change(values: any) {\r\n    //Checkbox1_Change_Hazard\r\n    if (values.currentTarget.checked) {\r\n      this.CommentItems.push(\"Hazard\");\r\n      console.log(\"Hazard Added\", this.CommentItems);\r\n    } else {\r\n      const index = this.CommentItems.indexOf(\"Hazard\");\r\n      this.CommentItems.splice(index, 1);\r\n      console.log(\"Hazard Removed\", this.CommentItems);\r\n    }\r\n  }\r\n  Checkbox2_Change(values: any) {\r\n    //Checkbox2_Change_OverWeight\r\n    if (values.currentTarget.checked) {\r\n      this.CommentItems.push(\"Over Weight\");\r\n      console.log(\"Over Weight Added\", this.CommentItems);\r\n    } else {\r\n      const index = this.CommentItems.indexOf(\"Over Weight\");\r\n      this.CommentItems.splice(index, 1);\r\n      console.log(\"Over Weight Removed\", this.CommentItems);\r\n    }\r\n  }\r\n  Checkbox3_Change(values: any) {\r\n    //Checkbox3_Change_Triaxle\r\n    console.log(values.currentTarget.checked);\r\n\r\n    if (values.currentTarget.checked) {\r\n      this.CommentItems.push(\"Triaxle\");\r\n      console.log(\"Triaxle Added\", this.CommentItems);\r\n    } else {\r\n      const index = this.CommentItems.indexOf(\"Triaxle\");\r\n      this.CommentItems.splice(index, 1);\r\n      console.log(\"Triaxle Removed\", this.CommentItems);\r\n    }\r\n  }\r\n  Checkbox4_Change(values: any) {\r\n    if (values.currentTarget.checked) {\r\n      this.CommentItems.push(\"Needs to be scaled\");\r\n      console.log(\"Needs to be scaled Added\", this.CommentItems);\r\n    } else {\r\n      const index = this.CommentItems.indexOf(\"Needs to be scaled\");\r\n      this.CommentItems.splice(index, 1);\r\n      console.log(\"Needs to be scaled Removed\", this.CommentItems);\r\n    }\r\n  }\r\n\r\n  add() {\r\n    console.log(\"Testing....\", this.ContainerNo);\r\n\r\n    if (this.OrderDetailKey != \"\") {\r\n\r\n      this.doHeader.orderdetails[this.rowindex].containerid=this.containerid;\r\n      this.doHeader.orderdetails[this.rowindex].ContainerNo = this.ContainerNo;\r\n      this.doHeader.orderdetails[\r\n        this.rowindex\r\n      ].ContainerSize = this.ContainerSize;\r\n      this.doHeader.orderdetails[\r\n        this.rowindex\r\n      ].ContainerSizeDesc = this.ContainerSizeDesc;\r\n      this.doHeader.orderdetails[this.rowindex].Chassis = this.Chassis;\r\n      this.doHeader.orderdetails[this.rowindex].SealNo = this.SealNo;\r\n      this.doHeader.orderdetails[this.rowindex].Weight = this.Weight;\r\n      this.doHeader.orderdetails[\r\n        this.rowindex\r\n      ].Comments = this.Comments = this.CommentItems.toString();\r\n      this.rowRefresh();\r\n      return;\r\n    }\r\n\r\n    var containerDetails: any = {};\r\n    containerDetails.ContainerNo = this.ContainerNo;\r\n    containerDetails.ContainerSize = this.ContainerSize;\r\n    containerDetails.ContainerSizeDesc = this.ContainerSizeDesc;\r\n    containerDetails.Chassis = this.Chassis;\r\n    containerDetails.SealNo = this.SealNo;\r\n    containerDetails.Weight = this.Weight;\r\n    containerDetails.Comments = this.Comments = this.CommentItems.toString();\r\n    containerDetails.containerid= this.doHeader.OrderNo + \"-\"+ ( this.doHeader.orderdetails.length +1 );\r\n    this.doHeader.orderdetails.push(containerDetails);\r\n\r\n    this.rowRefresh();\r\n  }\r\n  rowRefresh() {\r\n    this.OrderDetailKey = \"\";\r\n    this.containerid=\"\";\r\n    this.ContainerNo = undefined;\r\n    this.ContainerSize = undefined;\r\n    this.ContainerSizeDesc = undefined;\r\n    this.Chassis = undefined;\r\n    this.SealNo = undefined;\r\n    this.Weight = undefined;\r\n    this.Comments = undefined;\r\n    this.CommentItems = [];\r\n\r\n    this.hazard = undefined;\r\n    this.trixale = undefined;\r\n    this.overweight = undefined;\r\n    this.needstobescaled = undefined;\r\n\r\n    this.IsHazardChecked = false;\r\n    this.IsOverweightChecked = false;\r\n    this.IsTrixaleChecked = false;\r\n    this.IsNeedstobescaledChecked = false;\r\n  }\r\n\r\n  drpcontainersizeChanged(value: any) {\r\n    this.ContainerSizeDesc = this.containersizelist.find(\r\n      x => x.containersize == value\r\n    ).description;\r\n  }\r\n  edit(details: Order_details, index: number) {\r\n    this.rowindex = index;\r\n   this.containerid= details.containerid;\r\n    this.ContainerNo = details.ContainerNo;\r\n    this.OrderDetailKey = details.OrderDetailKey;\r\n    this.ContainerSize = details.ContainerSize;\r\n    this.ContainerSizeDesc = details.ContainerSizeDesc;\r\n    this.Chassis = details.Chassis;\r\n    this.SealNo = details.SealNo;\r\n    this.Weight = details.Weight;\r\n\r\n    var comments_array = details.Comments.split(\",\");\r\n    this.CommentItems = comments_array;\r\n\r\n    for (var i = 0; i < comments_array.length; i++) {\r\n      // Trim the excess whitespace.\r\n      comments_array[i] = comments_array[i]\r\n        .replace(/^\\s*/, \"\")\r\n        .replace(/\\s*$/, \"\");\r\n\r\n      if (comments_array[i] == \"Hazard\") {\r\n        this.IsHazardChecked = true;\r\n      } else if (comments_array[i] == \"Over Weight\") {\r\n        this.IsOverweightChecked = true;\r\n      } else if (comments_array[i] == \"Triaxle\") {\r\n        this.IsTrixaleChecked = true;\r\n      } else if (comments_array[i] == \"Needs to be scaled\") {\r\n        this.IsNeedstobescaledChecked = true;\r\n      }\r\n    }\r\n  }\r\n  \r\n  onCompleteItem($event) {\r\n    console.log($event);\r\n  //  alert(\"Upload Complete\");\r\n  }\r\n  \r\n  sort(column) {\r\n    this.isDesc = !this.isDesc; //change the direction\r\n    this.column = column;\r\n    let direction = this.isDesc ? 1 : -1;    \r\n\r\n    this.Orderlist = [...this.Orderlist].sort((n1, n2) => {\r\n      if ((this.column == \"OrderNo\")) {\r\n        if (n1.OrderNo > n2.OrderNo) {\r\n          return 1* direction;\r\n        } else if (n1.OrderNo < n2.OrderNo) {\r\n          return -1* direction;\r\n        } else return 0;\r\n      }\r\n\r\n      if ((this.column == \"ordertypedescription\")) {\r\n        if (n1.ordertypedescription > n2.ordertypedescription) {\r\n          return 1* direction;\r\n        } else if (n1.ordertypedescription < n2.ordertypedescription) {\r\n          return -1* direction;\r\n        } else return 0;\r\n      }\r\n      if ((this.column == \"BillToAddr\")) {\r\n        if (n1.BillToAddr > n2.BillToAddr) {\r\n          return 1* direction;\r\n        } else if (n1.BillToAddr < n2.BillToAddr) {\r\n          return -1* direction;\r\n        } else return 0;\r\n      }\r\n      if ((this.column == \"SourceAddr\")) {\r\n        if (n1.SourceAddr > n2.SourceAddr) {\r\n          return 1* direction;\r\n        } else if (n1.SourceAddr < n2.SourceAddr) {\r\n          return -1* direction;\r\n        } else return 0;\r\n      }\r\n      if ((this.column == \"DestinationAddr\")) {\r\n        if (n1.DestinationAddr > n2.DestinationAddr) {\r\n          return 1* direction;\r\n        } else if (n1.DestinationAddr < n2.DestinationAddr) {\r\n          return -1* direction;\r\n        } else return 0;\r\n      }\r\n      if ((this.column == \"statusdescription\")) {\r\n        if (n1.statusdescription > n2.statusdescription) {\r\n          return 1* direction;\r\n        } else if (n1.statusdescription < n2.statusdescription) {\r\n          return -1* direction;\r\n        } else return 0;\r\n      }     \r\n    });\r\n  }\r\n}\r\n","export default \".tag {\\n  border-radius: 50%;\\n  height: 15px;\\n  width: 15px;\\n  display: inline-block;\\n}\\n\\n.tag-default {\\n  background-color: gray;\\n}\\n\\n.tag-success {\\n  background-color: green;\\n}\\n\\n.tag-warning {\\n  background-color: orange;\\n}\\n\\n.tag-danger {\\n  background-color: red;\\n}\\n\\n.ScrollStyle {\\n  max-height: 600px;\\n  overflow-y: scroll;\\n}\\n\\n.table-custom tbody {\\n  display: block;\\n  height: 100px;\\n  overflow: auto;\\n}\\n\\nthead,\\ntbody tr {\\n  display: table;\\n  width: 100%;\\n  table-layout: fixed;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvZmlsZS11cGxvYWQvQzpcXFVzZXJzXFxBcnVuXFxEb2N1bWVudHNcXEdpdEh1YlxcVE1TX0FkbWluXFxUTVNfV2ViL3NyY1xcYXBwXFx2aWV3c1xcZmlsZS11cGxvYWRcXGZpbGUtdXBsb2FkLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy9maWxlLXVwbG9hZC9maWxlLXVwbG9hZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7RUFDQSxxQkFBQTtBQ0NKOztBREVFO0VBQ0Usc0JBQUE7QUNDSjs7QURFRTtFQUNFLHVCQUFBO0FDQ0o7O0FERUU7RUFDRSx3QkFBQTtBQ0NKOztBREVFO0VBQ0UscUJBQUE7QUNDSjs7QURHQTtFQUNFLGlCQUFBO0VBQ0Esa0JBQUE7QUNBRjs7QURJRTtFQUNFLGNBQUE7RUFDQSxhQUFBO0VBQ0EsY0FBQTtBQ0RKOztBREtBOztFQUVJLGNBQUE7RUFDQSxXQUFBO0VBQ0EsbUJBQUE7QUNGSiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2ZpbGUtdXBsb2FkL2ZpbGUtdXBsb2FkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRhZyB7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICBoZWlnaHQ6IDE1cHg7XHJcbiAgICB3aWR0aDogMTVweDtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICB9XHJcbiAgXHJcbiAgLnRhZy1kZWZhdWx0IHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGdyYXk7XHJcbiAgfVxyXG4gIFxyXG4gIC50YWctc3VjY2VzcyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjtcclxuICB9XHJcbiAgXHJcbiAgLnRhZy13YXJuaW5nIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IG9yYW5nZTtcclxuICB9XHJcbiAgXHJcbiAgLnRhZy1kYW5nZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xyXG4gIH1cclxuXHJcbiAgXHJcbi5TY3JvbGxTdHlsZSB7XHJcbiAgbWF4LWhlaWdodDogNjAwcHg7XHJcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xyXG59XHJcblxyXG4udGFibGUtY3VzdG9tIHtcclxuICB0Ym9keSB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGhlaWdodDogMTAwcHg7XHJcbiAgICBvdmVyZmxvdzogYXV0bztcclxuICB9XHJcbiAgXHJcbn1cclxudGhlYWQsXHJcbiAgdGJvZHkgdHIge1xyXG4gICAgZGlzcGxheTogdGFibGU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHRhYmxlLWxheW91dDogZml4ZWQ7XHJcbiAgfSIsIi50YWcge1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGhlaWdodDogMTVweDtcbiAgd2lkdGg6IDE1cHg7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnRhZy1kZWZhdWx0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JheTtcbn1cblxuLnRhZy1zdWNjZXNzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JlZW47XG59XG5cbi50YWctd2FybmluZyB7XG4gIGJhY2tncm91bmQtY29sb3I6IG9yYW5nZTtcbn1cblxuLnRhZy1kYW5nZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG59XG5cbi5TY3JvbGxTdHlsZSB7XG4gIG1heC1oZWlnaHQ6IDYwMHB4O1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG59XG5cbi50YWJsZS1jdXN0b20gdGJvZHkge1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiAxMDBweDtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbnRoZWFkLFxudGJvZHkgdHIge1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgd2lkdGg6IDEwMCU7XG4gIHRhYmxlLWxheW91dDogZml4ZWQ7XG59Il19 */\"","import { Observable } from \"rxjs/Rx\";\r\nimport {\r\n  FileQueueObject,\r\n  FileUploaderService\r\n} from \"../../_services/file-uploader.service\";\r\nimport { Output, EventEmitter, OnInit, Input, Component } from \"@angular/core\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { FiledownloadService } from \"../../_services/filedownload.service\";\r\nimport { saveAs } from \"file-saver\";\r\n@Component({\r\n  selector: \"app-file-upload\",\r\n  templateUrl: \"./file-upload.component.html\",\r\n  styleUrls: [\"./file-upload.component.scss\"]\r\n})\r\nexport class FileUploadComponent implements OnInit {\r\n  @Output() onCompleteItem = new EventEmitter();\r\n  @Input() orderno: string;\r\n  @Input() CreatedBy: string;\r\n\r\n  fileUploadcount: number = 0;\r\n  viewPDF: boolean = false;\r\n  display = \"none\";\r\n  //@ViewChild('fileInput',{static: true}) fileInput;\r\n  @Input() queue: Observable<FileQueueObject[]>;\r\n\r\n  constructor(\r\n    public uploader: FileUploaderService,\r\n    private toastr: ToastrService,\r\n    private filedownloadService: FiledownloadService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.uploader.clearQueue();\r\n    this.queue = this.uploader.queue;\r\n    this.uploader.onCompleteItem = this.completeItem;\r\n    console.log(\"this.queue \", this.queue);\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.uploader.clearQueue();\r\n    this.uploader.addToQueue2(this.queue, this.orderno, this.CreatedBy);\r\n    this.queue = this.uploader.queue;\r\n    console.log(\"this.queue \", this.queue);\r\n  }\r\n\r\n  completeItem = (item: FileQueueObject, response: any) => {\r\n    this.onCompleteItem.emit({ item, response });\r\n  };\r\n\r\n  addToQueue(e) {\r\n    this.fileUploadcount = e.target.files.length;\r\n\r\n    // const fileBrowser = this.fileInput.nativeElement;\r\n    this.uploader.addToQueue(e.target.files, this.orderno, this.CreatedBy);\r\n    console.log(\"this.queue \", this.queue);\r\n  }\r\n  upload() {\r\n    if (this.fileUploadcount === 0) {\r\n      return this.showWarning(\"No File(s) selected\", \"Upload\");\r\n    }\r\n    this.uploader.uploadAll(this.orderno, this.CreatedBy);\r\n    this.fileUploadcount = 0;\r\n  }\r\n  viewFile() {\r\n    this.viewPDF = true;\r\n    this.display = \"block\";\r\n  }\r\n  clear() {\r\n    this.fileUploadcount = 0;\r\n    this.uploader.clearQueue();\r\n    this.fileUploadcount = 0;\r\n  }\r\n  showWarning(message: string, title: string) {\r\n    this.toastr.warning(message, title);\r\n  }\r\n \r\n  closeModalDialog() {\r\n    this.display = \"none\"; //set none css after close dialog\r\n    this.viewPDF = false;\r\n  }\r\n  DownLoadFiles(attachmentFileName: string) {\r\n    let fileName = attachmentFileName;\r\n    //file type extension\r\n    let checkFileType = fileName.split(\".\").pop();\r\n    var fileType;\r\n    if (checkFileType === \"txt\") {\r\n      fileType = \"text/plain\";\r\n    }\r\n    if (checkFileType === \"pdf\") {\r\n      fileType = \"application/pdf\";\r\n    }\r\n    if (checkFileType === \"doc\") {\r\n      fileType = \"application/vnd.ms-word\";\r\n    }\r\n    if (checkFileType === \"docx\") {\r\n      fileType = \"application/vnd.ms-word\";\r\n    }\r\n    if (checkFileType === \"xls\") {\r\n      fileType = \"application/vnd.ms-excel\";\r\n    }\r\n    if (checkFileType === \"png\") {\r\n      fileType = \"image/png\";\r\n    }\r\n    if (checkFileType === \"jpg\") {\r\n      fileType = \"image/jpeg\";\r\n    }\r\n    if (checkFileType === \"jpeg\") {\r\n      fileType = \"image/jpeg\";\r\n    }\r\n    if (checkFileType === \"gif\") {\r\n      fileType = \"image/gif\";\r\n    }\r\n    if (checkFileType === \"csv\") {\r\n      fileType = \"text/csv\";\r\n    }\r\n\r\n    this.filedownloadService\r\n      .DownloadFile(this.orderno, fileName, fileType)\r\n      .subscribe(\r\n        success => {\r\n          if (confirm(\"Are you sure to download the file? \")) {\r\n            saveAs(success, fileName);\r\n          }\r\n        },\r\n        err => {\r\n          console.log(\"Error Downloads\", err);\r\n          alert(\"Server error while downloading file.\");\r\n        }\r\n      );\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2ZpbGV1cGxvYWQvZmlsZXVwbG9hZC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { FileUploadService } from \"../../_services/fileupload.service\";\r\nimport {\r\n  HttpClient,\r\n  HttpErrorResponse,\r\n  HttpEventType,\r\n  HttpHeaders,\r\n  HttpResponse\r\n} from \"@angular/common/http\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-fileupload\",\r\n  templateUrl: \"./fileupload.component.html\",\r\n  styleUrls: [\"./fileupload.component.scss\"]\r\n})\r\nexport class FileuploadComponent implements OnInit {\r\n  myFiles: string[] = [];\r\n  error: string;\r\n  fileUpload = { status: \"\", message: \"\", filePath: \"\" };\r\n  fileUploadcount: number;\r\n\r\n  constructor(\r\n    private toastr: ToastrService,\r\n    private fileUploadService: FileUploadService,\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  onSelectedFile(e) {\r\n    this.myFiles = [];\r\n    this.fileUploadcount = 0;\r\n    for (var i = 0; i < e.target.files.length; i++) {\r\n      this.myFiles.push(e.target.files[i]);\r\n    }\r\n  }\r\n\r\n  // onSubmit() {\r\n  //   const frmData = new FormData();\r\n  //   for (var i = 0; i < this.myFiles.length; i++) {\r\n  //     frmData.append(\"fileUpload\", this.myFiles[i]);\r\n\r\n  //     this.http.post('http://localhost:51902/FileUpload', frmData, {reportProgress: true, observe: 'events'})\r\n  //     .subscribe(event => {\r\n  //       if (event.type === HttpEventType.UploadProgress) {\r\n  //         this.percentDone = Math.round(100 * event.loaded / event.total);\r\n  //       } else if (event instanceof HttpResponse) {\r\n  //         this.uploadSuccess = true;\r\n  //       }\r\n  //   });\r\n  //   }\r\n  // }\r\n\r\n  onSubmit() {\r\n    if (this.myFiles.length === 0) {\r\n      return this.showWarning(\"No File(s) selected\", \"Upload\");\r\n    }\r\n    for (var i = 0; i < this.myFiles.length; i++) {\r\n      const frmData = new FormData();\r\n      frmData.append(\"fileUpload\", this.myFiles[i]);\r\n      this.fileUploadService.upload(frmData).subscribe(\r\n        res => {\r\n          (           \r\n            this.fileUpload.status= res.toString());\r\n            // this.showSuccess(\"File(s) uploaded successfully\", \"Upload\");\r\n           (this.fileUploadcount = this.fileUploadcount + 1);\r\n          this.myFiles = [];   \r\n        },\r\n        err =>{ (this.error = err)\r\n          this.showError(this.error, \"Upload Error\");\r\n          },\r\n      );\r\n    }\r\n    this.showSuccess(\"File(s) uploaded successfully\", \"Upload\");\r\n  }\r\n  showSuccess(message: string, title: string) {\r\n    this.toastr.success(message, title, { timeOut: 4000, closeButton: true });\r\n  }\r\n\r\n  showError(message: string, title: string) {\r\n    this.toastr.error(message, \"Oops!\", { timeOut: 4000, closeButton: true });\r\n  }\r\n\r\n  showWarning(message: string, title: string) {\r\n    this.toastr.warning(message, title);\r\n  }\r\n\r\n  // onSubmit() {\r\n  //   const frmData = new FormData();\r\n  //   for (var i = 0; i < this.myFiles.length; i++) {\r\n  //     frmData.append(\"fileUpload\", this.myFiles[i]);\r\n  //     this.http\r\n  //       .post(\"http://localhost:51902/FileUpload\", frmData)\r\n  //       .subscribe(event => {\r\n\r\n  //           console.log(event);\r\n\r\n  //       });\r\n  //   }\r\n  // }\r\n}\r\n","export default \".scrollbar {\\n  width: 100%;\\n  height: 93%;\\n  margin-top: 0px;\\n  float: left;\\n  overflow-y: scroll;\\n}\\n\\n#style::-webkit-scrollbar-track {\\n  box-shadow: 1px 1px 0px rgba(0, 0, 0, 0.1);\\n  background-color: lightslategrey;\\n  border-radius: 10px;\\n}\\n\\n#style::-webkit-scrollbar {\\n  width: 7px;\\n  background-color: #1a1818;\\n}\\n\\n#style::-webkit-scrollbar-thumb {\\n  background-color: darkslategrey;\\n  background-image: -webkit-linear-gradient(90deg, rgba(255, 255, 255, 0.2) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.2) 50%, rgba(255, 255, 255, 0.2) 75%, transparent 75%, transparent);\\n}\\n\\np {\\n  font-family: Lato;\\n}\\n\\n.pointer {\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvaW52b2ljZS9pbnZvaWNlL0M6XFxVc2Vyc1xcQXJ1blxcRG9jdW1lbnRzXFxHaXRIdWJcXFRNU19BZG1pblxcVE1TX1dlYi9zcmNcXGFwcFxcdmlld3NcXGludm9pY2VcXGludm9pY2VcXGludm9pY2UuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3ZpZXdzL2ludm9pY2UvaW52b2ljZS9pbnZvaWNlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBO0VBQ0UsV0FBQTtFQUNBLFdBQUE7RUFFQSxlQUFBO0VBRUEsV0FBQTtFQUNBLGtCQUFBO0FDSkY7O0FET0E7RUFHRSwwQ0FBQTtFQUNBLGdDQUFBO0VBQ0EsbUJBQUE7QUNKRjs7QURPQTtFQUNFLFVBQUE7RUFDQSx5QkFBQTtBQ0pGOztBRE9BO0VBQ0UsK0JBQUE7RUFDQSwwTUFBQTtBQ0pGOztBRGVBO0VBQ0UsaUJBQUE7QUNaRjs7QURjQTtFQUNJLGVBQUE7QUNYSiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2ludm9pY2UvaW52b2ljZS9pbnZvaWNlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcblxyXG5cclxuLnNjcm9sbGJhciB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiA5MyU7XHJcbiAgLy9oZWlnaHQ6Y2FsYygxMDAlIC0gMjAwcHgpO1xyXG4gIG1hcmdpbi10b3A6IDBweDtcclxuICAvL2JhY2tncm91bmQtY29sb3I6Z3JlZW47XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xyXG59XHJcblxyXG4jc3R5bGU6Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNrIHtcclxuICAtd2Via2l0LWJveC1zaGFkb3c6IDFweCAxcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICAtbW96LWJveC1zaGFkb3c6IDFweCAxcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICBib3gtc2hhZG93OiAxcHggMXB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRzbGF0ZWdyZXk7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxufVxyXG5cclxuI3N0eWxlOjotd2Via2l0LXNjcm9sbGJhciB7XHJcbiAgd2lkdGg6IDdweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjYsIDI0LCAyNCk7XHJcbn1cclxuXHJcbiNzdHlsZTo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGRhcmtzbGF0ZWdyZXk7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQoXHJcbiAgICA5MGRlZyxcclxuICAgIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKSAyNSUsXHJcbiAgICB0cmFuc3BhcmVudCAyNSUsXHJcbiAgICB0cmFuc3BhcmVudCA1MCUsXHJcbiAgICByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMikgNTAlLFxyXG4gICAgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpIDc1JSxcclxuICAgIHRyYW5zcGFyZW50IDc1JSxcclxuICAgIHRyYW5zcGFyZW50XHJcbiAgKTtcclxufVxyXG5wIHtcclxuICBmb250LWZhbWlseTogTGF0bztcclxufVxyXG4ucG9pbnRlcntcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG4iLCIuc2Nyb2xsYmFyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogOTMlO1xuICBtYXJnaW4tdG9wOiAwcHg7XG4gIGZsb2F0OiBsZWZ0O1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG59XG5cbiNzdHlsZTo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2sge1xuICAtd2Via2l0LWJveC1zaGFkb3c6IDFweCAxcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgLW1vei1ib3gtc2hhZG93OiAxcHggMXB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIGJveC1zaGFkb3c6IDFweCAxcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRzbGF0ZWdyZXk7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG59XG5cbiNzdHlsZTo6LXdlYmtpdC1zY3JvbGxiYXIge1xuICB3aWR0aDogN3B4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWExODE4O1xufVxuXG4jc3R5bGU6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogZGFya3NsYXRlZ3JleTtcbiAgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQoOTBkZWcsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKSAyNSUsIHRyYW5zcGFyZW50IDI1JSwgdHJhbnNwYXJlbnQgNTAlLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMikgNTAlLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMikgNzUlLCB0cmFuc3BhcmVudCA3NSUsIHRyYW5zcGFyZW50KTtcbn1cblxucCB7XG4gIGZvbnQtZmFtaWx5OiBMYXRvO1xufVxuXG4ucG9pbnRlciB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn0iXX0= */\"","import { DeliveryOrderHeader } from \"../../../_models/DeliveryOrderHeader\";\r\nimport { Order_details } from \"../../../_models/order_details\";\r\nimport { InvoiceService } from \"../../../_services/invoice.service\";\r\nimport { Invoicemodel } from \"../../../_models/invoicemodel\";\r\nimport { Invoice } from \"./../../../_models/invoice\";\r\nimport { Address } from \"./../../../_models/address\";\r\nimport { Item } from \"../../../_models/item\";\r\nimport { ItemService } from \"../../../_services/item.service\";\r\nimport { Invoicedetails } from \"../../../_models/invoicedetails\";\r\nimport { OnInit, Component } from \"@angular/core\";\r\nimport { Rate } from \"../../../_models/rate\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\n@Component({\r\n  selector: \"app-invoice\",\r\n  templateUrl: \"./invoice.component.html\",\r\n  styleUrls: [\"./invoice.component.scss\"]\r\n})\r\nexport class InvoiceComponent implements OnInit {\r\n  Itemlist: Item[];\r\n  BillToAddress: Address;\r\n\r\n  public Data: Invoicemodel[];\r\n  public invoiceList: Invoicemodel[];\r\n  public invoiceModel: Invoicemodel;\r\n  public rate: Array<Rate> = [];\r\n  public itemkey: string;\r\n  public searchText: string;\r\n\r\n  // invoice input data\r\n  public InvoiceMaxcount: number = 0;\r\n  public invoiceHeader: Invoice;\r\n  public invoiceHeaderList: Invoice[];\r\n  public invoiceDetails: Invoicedetails[];\r\n  public invoiceDet: Invoicedetails;\r\n  public invDet: Invoicedetails;\r\n\r\n  public invoiceHeaderResult: Invoice;\r\n  public OrderKey: string;\r\n  public OrderNo: string;  \r\n  public InvoiceKey: string;\r\n  public InvoiceNo: number;\r\n  public invoiceDate: Date;\r\n  public CustKey: string;\r\n  public BilltoAddrKey: string;\r\n  public dueDate: Date;\r\n  public InvoiceAmt: number;\r\n  public drpCharge: number = 0;\r\n  public rowIndex = -1;\r\n\r\n  public invoiceDetail: Array<any> = [];\r\n  public invoiceItem: any = {};\r\n  private total: number = 0;\r\n  private ItemRate: number = 0;\r\n  private ContainerQuantity: number = 0;\r\n\r\n  public showInvoice: boolean = false;\r\n  public showImage: boolean = true;\r\n  public showAddUpdateDiv: boolean = true;\r\n  public item_editing: boolean = false;\r\n  public showInvoiceList: boolean = true;\r\n  public lblrowaddupdate: string;\r\n  public lblInvoice: string;\r\n\r\n  \r\n  public editing: boolean = false;    \r\n  public isEditable: boolean = true;\r\n  \r\n\r\n  isDesc: boolean = false;\r\n  column: string = \"InvoiceNo\";\r\n  p: number = 1;\r\n  count: number;\r\n\r\n  constructor(\r\n    private invoiceService: InvoiceService,\r\n    private itemService: ItemService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.showImage = true;\r\n    this.showAddUpdateDiv = false;\r\n    this.invoiceModel = new Invoicemodel();\r\n    this.invoiceModel.invoice = new Invoice();\r\n    this.rate = new Array<Rate>();\r\n\r\n    this.itemService.GetItems().subscribe(\r\n      data => (this.Itemlist = data),\r\n      error => console.log(error),\r\n      () => console.log(\"Get Itemlist\", this.Itemlist)\r\n    );\r\n\r\n    this.load_NewInvoiceList();\r\n    this.load_InvoiceList();\r\n  }\r\n\r\n  load_InvoiceList() {\r\n    this.invoiceService.getInvoiceHeaderList().subscribe(\r\n      data => {\r\n        this.invoiceHeaderList = data;\r\n\r\n        if (this.invoiceHeaderList.length > 0) {\r\n          this.showImage = false;\r\n          this.showInvoiceList = true;\r\n        }\r\n      },\r\n      error => console.log(error),\r\n      () => console.log(\"Get invoiceHeaderList\", this.invoiceHeaderList)\r\n    );\r\n  }\r\n  load_NewInvoiceList() {\r\n    this.invoiceService.GetOrderstoGenerateInvoice().subscribe(\r\n      data => {\r\n        this.Data = data;\r\n      },\r\n      error => console.log(error),\r\n      () => console.log(\"Get Data\", this.Data)\r\n    );\r\n  }\r\n\r\n  getOrderdata(orderKey: string) {\r\n    this.invoiceDet = null;\r\n    this.invoiceDetail = null;\r\n    this.invoiceDetail = new Array<Invoicedetails>();\r\n\r\n    this.invoiceService.GetInvoiceMaxcount().subscribe(\r\n      data => {\r\n        this.InvoiceMaxcount = data;\r\n        this.InvoiceNo = this.InvoiceMaxcount + 1;\r\n      },\r\n      error => console.log(error),\r\n      () => console.log(\"Get InvoiceMaxcount\", this.InvoiceMaxcount)\r\n    );\r\n\r\n    // this.invoiceModel = this.Data.find(x => x.order.OrderKey == orderKey);\r\n    this.invoiceService.getOrderDatabyKey(orderKey).subscribe(\r\n      data => {\r\n        this.invoiceModel = data;\r\n        console.log(\"Get invoice Model\", this.invoiceModel);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n    this.invoiceService.getorderratesbykey(orderKey).subscribe(\r\n      data => {\r\n        this.rate = data;\r\n        for (var item of this.rate) {\r\n          var count = 0;\r\n          if (this.invoiceDetail.length == 0) {\r\n            this.invoiceDet = new Invoicedetails();\r\n            this.invoiceDet.Itemkey = item.itemkey;\r\n            this.invoiceDet.Description = item.description;\r\n            this.invoiceDet.Quantity = 1;\r\n            this.invoiceDet.UnitPrice = item.unitprice;\r\n            this.invoiceDet.Price = this.invoiceDet.UnitPrice;\r\n            this.invoiceDet.InvoiceLineKey = undefined;\r\n            this.invoiceDet.InvoiceKey = undefined;\r\n            this.invoiceDet.InvoiceDescription = \"\";\r\n            this.invoiceDet.ExcessAmount = \"\";\r\n            this.invoiceDet.Container = item.containerno;\r\n            this.invoiceDetail.push(this.invoiceDet);\r\n            console.log(\"this.invoiceDetail\", this.invoiceDetail);\r\n          } else {\r\n            for (var items of this.invoiceDetail) {\r\n              if (items.Itemkey == item.itemkey) {\r\n                this.invoiceDetail[count].containerno =  this.invoiceDetail[count].containerno + ','+ items.containerno;\r\n                this.invoiceDetail[count].Quantity = items.Quantity + 1;\r\n                this.invoiceDetail[count].Price =\r\n                  this.invoiceDetail[count].Quantity * items.UnitPrice;\r\n              } else {\r\n                count = count + 1;\r\n              }\r\n            }\r\n\r\n            if (count == this.invoiceDetail.length) {\r\n              this.invoiceDet = new Invoicedetails();\r\n              this.invoiceDet.Itemkey = item.itemkey;\r\n              this.invoiceDet.Description = item.description;\r\n              this.invoiceDet.Quantity = 1;\r\n              this.invoiceDet.Container = item.containerno;\r\n              this.invoiceDet.UnitPrice = item.unitprice;\r\n              this.invoiceDet.Price = this.invoiceDet.UnitPrice;\r\n              this.invoiceDet.InvoiceLineKey = undefined;\r\n              this.invoiceDet.InvoiceKey = undefined;\r\n              this.invoiceDet.InvoiceDescription = \"\";\r\n              this.invoiceDet.ExcessAmount = \"\";\r\n              this.invoiceDetail.push(this.invoiceDet);\r\n              console.log(\"this.invoiceDetail\", this.invoiceDetail);\r\n              count = 0;\r\n            }\r\n          }\r\n        }\r\n\r\n        this.InvoiceAmt = 0;\r\n        this.total = 0;\r\n\r\n        for (var items of this.invoiceDetail) {\r\n          var val2 = +items.Price;\r\n          this.total = this.addNumbers(this.total, val2);\r\n        }\r\n\r\n        this.InvoiceAmt = +this.total.toFixed(2);\r\n        this.drpCharge = 0;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n\r\n    this.showInvoice = true;\r\n    this.showImage = false;\r\n    this.showInvoiceList = false;\r\n    this.lblInvoice = \"Create\";\r\n    console.log(\"Get invoiceModel\", this.invoiceModel);\r\n  }\r\n\r\n  load_invoiceHeaderandDetailData(model: Invoice) {\r\n    this.showInvoice = true;\r\n    this.showImage = false;\r\n    this.showInvoiceList = false;\r\n    this.lblInvoice = \"Update\";\r\n\r\n    this.invoiceModel = new Invoicemodel();\r\n    this.invoiceModel.order = new DeliveryOrderHeader();\r\n    this.invoiceModel.order.OrderKey = model.OrderKey;\r\n    this.OrderKey = model.OrderKey;\r\n    this.invoiceModel.order.BillToAddressBO = new Address();\r\n    this.invoiceModel.order.SourceAddressBO = new Address();\r\n    this.invoiceModel.order.DestinationAddressBO = new Address();\r\n    this.BillToAddress = new Address();\r\n\r\n    this.invoiceDet = null;\r\n    this.invoiceDet = new Invoicedetails();\r\n    this.InvoiceKey = model.Invoicekey;\r\n    this.InvoiceNo = model.InvoiceNo;\r\n    this.invoiceDate = model.InvoiceDate;\r\n    this.dueDate = model.DueDate;\r\n    this.InvoiceAmt = +model.InvoiceAmt.toFixed(2);\r\n\r\n    this.invoiceService.getOrderDatabyKey(model.OrderKey).subscribe(\r\n      data => {\r\n        this.invoiceModel = data;\r\n        this.OrderNo = this.invoiceModel.order.OrderNo;\r\n        console.log(\"Edit for Invoice:  -- \", this.invoiceModel);\r\n        console.log(\"OrderNo:  -- \", this.invoiceModel.order.OrderNo);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n\r\n    this.invoiceService.getinvoicedetail(model.Invoicekey).subscribe(\r\n      data => {\r\n        this.invoiceDetail = data;\r\n        console.log(\"Edit for invoice Detail:  -- \", this.invoiceDetail);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );    \r\n    this.BillToAddress = this.invoiceModel.order.BillToAddressBO;\r\n    console.log(\r\n      \" this.BillToAddress \",\r\n      this.invoiceModel.order.BillToAddressBO\r\n    );\r\n  }\r\n\r\n  editItem(data: any, index: number) {\r\n    this.rowIndex = index;\r\n    this.item_editing = true;\r\n    this.invDet.isEditable = true;\r\n    this.drpCharge = data.Itemkey;\r\n    this.ContainerQuantity = data.Quantity;\r\n    this.ItemRate = data.UnitPrice;\r\n    this.showAddUpdateDiv = true;\r\n    this.lblrowaddupdate = \"Edit\";\r\n  }\r\n  CancelCreateInvoice() {\r\n    this.showInvoice = false;\r\n    this.showImage = false;\r\n    this.showInvoiceList = true;\r\n    this.invoiceDet = null;\r\n  }\r\n\r\n  ClearRow() {\r\n    this.item_editing = false;\r\n    this.rowIndex = -1;\r\n    this.drpCharge = 0;\r\n    this.showAddUpdateDiv = false;\r\n    this.drpCharge = undefined;\r\n    this.ContainerQuantity = undefined;\r\n    this.ItemRate = undefined;\r\n  }\r\n  editRow()\r\n  {\r\n    this.isEditable = false;\r\n  }\r\n\r\n  updateRow(data: Invoicedetails, index: number)\r\n  {\r\n    if (data.Price == 0) {\r\n      this.showInfo(\"Rate must be entered!\", \"Rate\");\r\n      return;\r\n    }\r\n    if (data.Quantity == 0) {\r\n      this.showInfo(\"Quantity must be entered!\", \"Rate\");\r\n      return;\r\n    }\r\n    if (data.Quantity > this.invoiceModel.containers.length) {\r\n      this.showInfo(\"Quantity must be within container no(s)\", \"Rate\");\r\n      return;\r\n    }\r\n\r\n    this.invoiceDetail[index].Quantity = data.Quantity;\r\n    //this.invoiceDetail[this.rowIndex].unitprice = this.ItemRate;\r\n    this.invoiceDetail[index].Price = data.Price;   \r\n    this.InvoiceAmt = 0;\r\n    for (var item of this.invoiceDetail) {\r\n      var val2 = +item.Price;\r\n      this.total = this.addNumbers(this.total, val2);\r\n    }\r\n    this.InvoiceAmt = +this.total.toFixed(2);\r\n    this.invDet.isEditable = false;\r\n    return;\r\n  }\r\n\r\n  addupdateItem() {\r\n    if (this.drpCharge == 0) {\r\n      this.showInfo(\"Item must be selected!\", \"Rate\");\r\n      return;\r\n    }\r\n    if (this.ItemRate == 0) {\r\n      this.showInfo(\"Rate must be entered!\", \"Rate\");\r\n      return;\r\n    }\r\n    if (this.ContainerQuantity == 0) {\r\n      this.showInfo(\"Quantity must be entered!\", \"Rate\");\r\n      return;\r\n    }\r\n    if (this.ContainerQuantity > this.invoiceModel.containers.length) {\r\n      this.showInfo(\"Quantity must be within container no(s)\", \"Rate\");\r\n      return;\r\n    }\r\n\r\n    if (this.item_editing) {\r\n      this.invoiceDetail[this.rowIndex].Quantity = this.ContainerQuantity;\r\n      this.invoiceDetail[this.rowIndex].unitprice = this.ItemRate;\r\n      this.invoiceDetail[this.rowIndex].Price =\r\n        this.ContainerQuantity * this.ItemRate;\r\n\r\n      this.item_editing = false;\r\n      this.rowIndex = -1;\r\n      this.drpCharge = 0;\r\n      this.drpCharge = undefined;\r\n      this.ContainerQuantity = undefined;\r\n      this.showAddUpdateDiv = false;\r\n      return;\r\n    } else {\r\n      for (var item of this.invoiceDetail) {\r\n        if (item.Itemkey == this.itemkey) {\r\n          this.showInfo(\"Item already added!\", \"Rate\");\r\n          return;\r\n        }\r\n      }\r\n\r\n      var itemData = this.Itemlist.find(key => key.itemkey == this.itemkey);\r\n      //this.ItemRate = +(+itemData.unitprice).toFixed(2);\r\n\r\n      this.invoiceItem.Itemkey = itemData.itemkey;\r\n      this.invoiceItem.Description = itemData.description;\r\n      this.invoiceItem.Quantity = this.ContainerQuantity;\r\n      this.invoiceItem.Price = (\r\n        this.ItemRate * this.invoiceItem.Quantity\r\n      ).toFixed(2);\r\n      this.invoiceItem.UnitPrice = this.ItemRate;\r\n      this.invoiceItem.InvoiceKey = this.InvoiceKey;\r\n      var itemdetails = this.invoiceItem;\r\n      this.invoiceDetail.push(itemdetails);\r\n\r\n      this.drpCharge = undefined;\r\n      this.ContainerQuantity = undefined;\r\n      this.ItemRate = 0;\r\n      this.invoiceItem = {};\r\n      this.InvoiceAmt = 0;\r\n      this.total = 0;\r\n      this.showAddUpdateDiv = false;\r\n    }\r\nthis.InvoiceAmt = 0;\r\n    for (var item of this.invoiceDetail) {\r\n      var val2 = +item.Price;\r\n      this.total = this.addNumbers(this.total, val2);\r\n    }\r\n    this.InvoiceAmt = +this.total.toFixed(2);\r\n  }\r\n  showChargeDiv() {\r\n    this.showAddUpdateDiv = true;\r\n    this.lblrowaddupdate = \"Add\";\r\n  }\r\n\r\n  deleteItem(index) {\r\n    if (this.invoiceDetail.length == 1) {\r\n      // this.toastr.error(\"Can't delete the row when there is only one row\", 'Warning');\r\n      return false;\r\n    } else {\r\n      this.invoiceDetail.splice(index, 1);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  addNumbers(a: number, b: number) {\r\n    return a + b;\r\n  }\r\n\r\n  drpAddnewCharge_ChangedEvent(itemkey: string) {\r\n    for (var item of this.invoiceDetail) {\r\n      if (item.Itemkey == itemkey) {\r\n        this.showInfo(\"Item already added!\", \"Rate\");\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.itemkey = itemkey;\r\n    var itemData = this.Itemlist.find(key => key.itemkey == itemkey);\r\n    this.ContainerQuantity = 1;\r\n    this.ItemRate = +(+itemData.unitprice).toFixed(2);\r\n  }\r\n\r\n  submit() {\r\n    if (this.dueDate == undefined) {\r\n      alert(\"Please enter a due date.\");\r\n      return;\r\n    }\r\n    if (this.invoiceDetail.length < 1) {\r\n      alert(\"Please add invoice deatils.\");\r\n      return;\r\n    }\r\n\r\n    if (this.lblInvoice == \"Create\") {\r\n      this.createInvoice();\r\n    }\r\n    if (this.lblInvoice == \"Update\") {\r\n      this.updateInvoice();\r\n    }\r\n  }\r\n  updateInvoice() {\r\n    this.invoiceHeader = new Invoice();\r\n    this.invoiceHeader.Invoicekey = this.InvoiceKey;\r\n    this.invoiceHeader.InvoiceNo = this.InvoiceNo;\r\n    this.invoiceHeader.InvoiceDate = this.invoiceDate;\r\n    this.invoiceHeader.InvoiceAmt = +this.InvoiceAmt.toFixed(2);\r\n    this.invoiceHeader.DueDate = this.dueDate;\r\n\r\n    this.invoiceService.UpdateInvoiceHeader(this.invoiceHeader).subscribe(\r\n      result => {},\r\n      error => {\r\n        this.showError(error, \"Invoice Update\");\r\n        return;\r\n      }\r\n    );\r\n\r\n    this.invoiceService.UpdateInvoiceDetail(this.invoiceDetail).subscribe(\r\n      res => {\r\n        if (res) {\r\n          this.load_NewInvoiceList();\r\n          this.load_InvoiceList();\r\n          this.showInvoice = false;\r\n          this.showSuccess(\"Invoice updated successfully\", \"Invoice\");\r\n        }\r\n      },\r\n      error => {\r\n        this.showError(error, \"Invoice Update\");\r\n        return;\r\n      }\r\n    );\r\n  }\r\n\r\n  createInvoice() {\r\n    //adding header data to invoiceHeader\r\n    this.invoiceHeader = new Invoice();\r\n    this.invoiceHeader.OrderKey = this.invoiceModel.order.OrderKey;\r\n    this.invoiceHeader.InvoiceNo = this.InvoiceNo;\r\n    this.invoiceHeader.InvoiceDate = this.invoiceDate;\r\n    this.invoiceHeader.InvoiceAmt = +this.InvoiceAmt.toFixed(2);\r\n    this.invoiceHeader.CustKey = this.invoiceModel.order.CustKey;\r\n    this.invoiceHeader.BilltoAddrKey = this.invoiceModel.order.BillToAddress;\r\n    this.invoiceHeader.DueDate = this.dueDate;\r\n\r\n    this.invoiceService.CreateInvoiceHeader(this.invoiceHeader).subscribe(\r\n      result => {\r\n        this.invoiceHeaderResult = result;\r\n        if (\r\n          this.invoiceHeaderResult.Invoicekey != undefined &&\r\n          this.invoiceHeaderResult.Invoicekey != \"\"\r\n        ) {\r\n          for (let i = 0; i < this.invoiceDetail.length; i++) {\r\n            this.invoiceDetail[\r\n              i\r\n            ].InvoiceKey = this.invoiceHeaderResult.Invoicekey;\r\n          }\r\n          this.invoiceHeader.invoicedetails = this.invoiceDetail;\r\n          this.invoiceService\r\n            .CreateInvoiceDetail(this.invoiceHeader.invoicedetails)\r\n            .subscribe(res => {\r\n              if (res) {\r\n                this.load_NewInvoiceList();\r\n                this.load_InvoiceList();\r\n                this.showInvoice = false;\r\n                this.showSuccess(\"Invoice Created successfully\", \"Invoice\");\r\n              }\r\n            });            \r\n        }\r\n      },\r\n      error => {\r\n        this.showError(error, \"New-Order\");\r\n      }\r\n    );\r\n  }\r\n\r\n  downloadPDF() {\r\n    this.invoiceService.downloadInvoice(this.OrderNo).subscribe(\r\n      result => {\r\n        if (confirm(\"Are you sure to download the file? \")) {\r\n          saveAs(result, this.OrderNo+ '.pdf');\r\n      }},\r\n      error => {\r\n        this.showError(error, \"Server error while downloading file.\");\r\n        return;\r\n      }\r\n    );    \r\n  }\r\n\r\n  \r\n  createPDF() {\r\n    this.invoiceService.createPDF(this.InvoiceKey).subscribe(\r\n      result => {\r\n        this.showSuccess(\"Invoice PDF Created successfully\", \"Invoice PDF\");\r\n      },\r\n      error => {\r\n        this.showError(error, \"PDF Creation\");\r\n        return;\r\n      }\r\n    );\r\n  }\r\n\r\n  showSuccess(message: string, title: string) {\r\n    this.toastr.success(message, title, { timeOut: 2000, closeButton: true });\r\n  }\r\n  showError(message: string, title: string) {\r\n    this.toastr.error(message, \"Oops!\", { timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  showWarning(message: string, title: string) {\r\n    this.toastr.warning(message, title);\r\n  }\r\n\r\n  showInfo(message: string, title: string) {\r\n    this.toastr.info(message, title, { timeOut: 1000, closeButton: true });\r\n  }\r\n\r\n  sort(column) {\r\n    this.isDesc = !this.isDesc; //change the direction\r\n    this.column = column;\r\n    let direction = this.isDesc ? 1 : -1;\r\n\r\n    this.invoiceHeaderList = [...this.invoiceHeaderList].sort((n1, n2) => {\r\n      if (this.column == \"InvoiceNo\") {\r\n        if (n1.InvoiceNo > n2.InvoiceNo) {\r\n          return 1 * direction;\r\n        } else if (n1.InvoiceNo < n2.InvoiceNo) {\r\n          return -1 * direction;\r\n        } else return 0;\r\n      }\r\n\r\n      if (this.column == \"CustName\") {\r\n        if (n1.CustName > n2.CustName) {\r\n          return 1 * direction;\r\n        } else if (n1.CustName < n2.CustName) {\r\n          return -1 * direction;\r\n        } else return 0;\r\n      }\r\n      if (this.column == \"InvoiceAmt\") {\r\n        if (n1.InvoiceAmt > n2.InvoiceAmt) {\r\n          return 1 * direction;\r\n        } else if (n1.InvoiceAmt < n2.InvoiceAmt) {\r\n          return -1 * direction;\r\n        } else return 0;\r\n      }\r\n\r\n      if (this.column == \"DueDate\") {\r\n        if (n1.DueDate > n2.DueDate) {\r\n          return 1 * direction;\r\n        } else if (n1.DueDate < n2.DueDate) {\r\n          return -1 * direction;\r\n        } else return 0;\r\n      }\r\n      if (this.column == \"StatusDesc\") {\r\n        if (n1.StatusDesc > n2.StatusDesc) {\r\n          return 1 * direction;\r\n        } else if (n1.StatusDesc < n2.StatusDesc) {\r\n          return -1 * direction;\r\n        } else return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\"","\r\nimport { AuthenticationService } from \"../../_services/authentication.service\";\r\nimport { OnInit, Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { first } from 'rxjs-compat/operator/first';\r\n\r\n@Component({\r\n  selector: \"app-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.scss\"]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  model: any = {};\r\n  loading = false;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  error = \"\";\r\n  isContainerAttributeVisible : boolean=true;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    // reset login status\r\n    this.authenticationService.logout();\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams[\"returnUrl\"] || \"/\";\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n\r\n  onSubmit() {\r\n    this.loading = true;\r\n    this.isContainerAttributeVisible = false;\r\n    // stop here if form is invalid\r\n\r\n    this.authenticationService\r\n      .login(this.model.username, this.model.password, this.model.company)\r\n      .pipe()\r\n      .subscribe(\r\n        data => {     \r\n          this.router.navigate([\"dashboard\"]);\r\n        },\r\n        error => {\r\n          this.error = \"Error in Login!\";\r\n          this.loading = false;\r\n          console.log(\"LOGIN ERROR: \"+ error );\r\n        }\r\n      );\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL25hdmlnYXRpb24vbmF2aWdhdGlvbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Login } from \"../../_models/login\";\r\nimport { DeliveryOrderService } from \"../../_services/deliveryOrder.service\";\r\nimport { AuthenticationService } from \"../../_services/authentication.service\";\r\nimport { UserService } from \"../../_services/user.service\";\r\nimport { Loginresult } from \"../../_models/loginresult\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { TabComponent } from \"../tab/tab.component\";\r\nimport { Order_details } from \"../../_models/order_details\";\r\nimport { DeliveryOrderHeader } from \"../../_models/DeliveryOrderHeader\";\r\n\r\n@Component({\r\n  selector: \"app-navigation\",\r\n  templateUrl: \"./navigation.component.html\",\r\n  styleUrls: [\"./navigation.component.scss\"]\r\n})\r\nexport class NavigationComponent implements OnInit {\r\n  currentUser: Loginresult;\r\n  currentUserSubscription: Subscription;\r\n  \r\n  Orderlist: Array<DeliveryOrderHeader> = [];\r\n  schedulerlist:Array<Order_details> = [];\r\n  dispatchAssignmentlist:Array<Order_details> = [];\r\n  dispatchDeliverylist:Array<Order_details> = [];\r\n\r\n  ModalOrderKey: string;\r\n  show:boolean=true;\r\n\r\n  constructor(\r\n    private service: DeliveryOrderService,\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService,\r\n    private userService: UserService,\r\n    private modalService: NgbModal,\r\n  ) {\r\n    this.authenticationService.currentUser.subscribe(\r\n      x => (this.currentUser = x)\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.service\r\n      .getOrderlist()\r\n      .subscribe(\r\n        data => (this.Orderlist = data),\r\n        error => console.log(error),\r\n        () => console.log(\"Get OrderList complete\", this.Orderlist)\r\n      );\r\n  }\r\n  test(type:number)\r\n  {\r\n    alert();\r\n  }\r\n  //   navigate(orderkey:string)\r\n  //   {\r\n  //   console.log(orderkey);\r\n  // this.router.navigate(['/tab', orderkey]);\r\n\r\n  //   }\r\n\r\n  open(orderParams) {\r\n    // this.order = orderParams;\r\n     this.ModalOrderKey = orderParams;\r\n        const modalRef = this.modalService.open(TabComponent,{ size:'lg',backdrop:true, windowClass : 'myCustomModalClass'});\r\n       modalRef.componentInstance.orderKeyinput =   this.ModalOrderKey;  \r\n   }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL29yZGVybGlzdC9vcmRlcmxpc3QuY29tcG9uZW50LnNjc3MifQ== */\"","\r\nimport { DeliveryOrderService } from \"../../_services/deliveryOrder.service\";\r\nimport { DeliveryOrderHeader } from \"../../_models/DeliveryOrderHeader\";\r\n\r\nimport { Order_details } from \"../../_models/order_details\";\r\nimport { NgbModal, NgbActiveModal } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { TabComponent } from \"../tab/tab.component\";\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { OnInit, Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: \"app-orderlist\",\r\n  templateUrl: \"./orderlist.component.html\",\r\n  styleUrls: [\"./orderlist.component.scss\"]\r\n})\r\nexport class OrderlistComponent implements OnInit {\r\n  Orderlist: any;\r\n  ModalOrderKey: string;\r\n  orderKey: string;\r\n  orderkey1: string;\r\n  public order: DeliveryOrderHeader;\r\n  modalOrderKey: string;\r\n  public orderinfo: Order_details[];\r\n\r\n  public pieChartLabels: string[] = [    \r\n    \"In Progress\",\r\n    \"Scheduled\",\r\n    \"Dispatched\",\r\n    \"Hold\",\r\n    \"Completed\"\r\n  ];\r\n  public pieChartData: number[] = [30, 5, 10, 5,89];\r\n  public pieChartType = \"pie\";\r\n  public barChartOptions: any = {\r\n    scaleShowVerticalLines: false,\r\n    responsive: true\r\n  };\r\n\r\n  \r\n  public barChartLabels: string[] = [\"Dec 2018\"];\r\n  public barChartType = \"bar\";\r\n  public barChartLegend = true;\r\n\r\n  public barChartData: any[] = [\r\n    { data: [65], label: \"Total Orders\" },\r\n    { data: [28], label: \"Delivery in Progress\" },\r\n    { data: [20], label: \"Hold\" }\r\n  ];\r\n\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private service: DeliveryOrderService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.service\r\n      .getOrderlist()\r\n      .subscribe(\r\n        data => (this.Orderlist = data),\r\n        error => console.log(error),\r\n        () => console.log(\"Get OrderList complete\", this.Orderlist)\r\n      );\r\n\r\n   \r\n      this.service\r\n      .getorderstatusfordashboard()\r\n      .subscribe(\r\n        data => (this.pieChartData = data as any[]),\r\n        error => console.log(error),\r\n        () => console.log(\"Get pieChart Data\", this.pieChartData)\r\n      );\r\n\r\n      console.log(\"Get pieChart Data\", this.pieChartData)\r\n  }\r\n  open(orderParams) {\r\n   // this.order = orderParams;\r\n    this.ModalOrderKey = orderParams;\r\n       const modalRef = this.modalService.open(TabComponent,{ size:'lg',backdrop:true, windowClass : 'myCustomModalClass'});\r\n      modalRef.componentInstance.orderKeyinput =   this.ModalOrderKey;  \r\n  }\r\n\r\n  viewOrder(orderKey: string) {\r\n    this.router.navigate([\"/doIntake\", orderKey]);\r\n    //this.router.navigate(['/tab',orderKey]);\r\n  }\r\n  navigatetoTab(order: string) {\r\n    this.router.navigate([\"/tab\", order]);\r\n  }\r\n\r\n  viewOrderinfo(orderParams) {\r\n   // this.order = orderParams;\r\n\r\n  // this.order.OrderKey =orderParams;\r\n  this.ModalOrderKey = orderParams;\r\n\r\n  }\r\n  // events\r\n  public chartClicked(e:any):void {\r\n    console.log(e);\r\n  }\r\n \r\n  public chartHovered(e:any):void {\r\n    console.log(e);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PdfService {\r\n\r\nconstructor() { }\r\ngetPDF():string {\r\n  return 'C:/Users/Arun/Documents/GitHub/TMS_Admin/TMS.Api/App_Data/Files/DOJO200001/FORM16_2018.pdf';\r\n}\r\n}\r\n","export default \".ScrollStyle {\\n  max-height: 600px;\\n  overflow-y: scroll;\\n}\\n\\npdf-viewer {\\n  display: block;\\n  height: 100vh;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvcGRmdmlld2NvbXBvbmVudC9DOlxcVXNlcnNcXEFydW5cXERvY3VtZW50c1xcR2l0SHViXFxUTVNfQWRtaW5cXFRNU19XZWIvc3JjXFxhcHBcXHZpZXdzXFxwZGZ2aWV3Y29tcG9uZW50XFxwZGZ2aWV3Y29tcG9uZW50LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy9wZGZ2aWV3Y29tcG9uZW50L3BkZnZpZXdjb21wb25lbnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxpQkFBQTtFQUNBLGtCQUFBO0FDQ0o7O0FEQ0U7RUFDRSxjQUFBO0VBQ0EsYUFBQTtBQ0VKIiwiZmlsZSI6InNyYy9hcHAvdmlld3MvcGRmdmlld2NvbXBvbmVudC9wZGZ2aWV3Y29tcG9uZW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLlNjcm9sbFN0eWxlIHtcclxuICAgIG1heC1oZWlnaHQ6IDYwMHB4O1xyXG4gICAgb3ZlcmZsb3cteTogc2Nyb2xsO1xyXG4gIH1cclxuICBwZGYtdmlld2VyIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICB9IiwiLlNjcm9sbFN0eWxlIHtcbiAgbWF4LWhlaWdodDogNjAwcHg7XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbn1cblxucGRmLXZpZXdlciB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDEwMHZoO1xufSJdfQ== */\"","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { PdfService } from \"./pdf.service\";\r\nimport { AppSettings } from \"../../_constants/appsettings\";\r\nimport { HttpHeaders } from \"@angular/common/http\";\r\nimport { DomSanitizer, SafeResourceUrl, SafeUrl } from '@angular/platform-browser';\r\n@Component({\r\n  selector: \"app-pdfviewcomponent\",\r\n  templateUrl: \"./pdfviewcomponent.component.html\",\r\n  styleUrls: [\"./pdfviewcomponent.component.scss\"],\r\n  providers: [PdfService]\r\n})\r\nexport class PdfviewcomponentComponent implements OnInit {\r\n  page: number = 1;\r\n  @Input() pdfSrc: any;\r\n  test: string;\r\n  constructor(private pdfService: PdfService,private sanitizer: DomSanitizer) {}\r\n\r\n  ngOnInit() { \r\n\r\n    // this.pdfSrc = \"https://vadimdez.github.io/ng2-pdf-viewer/assets/pdf-test.pdf\";\r\n    // const httpOptions = {\r\n    //   headers: new HttpHeaders({\r\n    //     \"Content-Type\": \"application/json\",\r\n    //     Authorization: \"Bearer \" + token.token\r\n    //   })\r\n    // };\r\n   // var token = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n    //this.pdfSrc = this.sanitizer.bypassSecurityTrustResourceUrl(AppSettings._BaseURL + \"App_Data/Files/DOJO200001/FORM16_2018.pdf\");\r\n    //this.pdfSrc = (AppSettings._BaseURL + \"App_Data/Files/DOJO200001/FORM16_2018.pdf\");\r\n\r\n//  console.log(\"URL:\", this.pdfSrc );\r\n\r\n//     const headers = new HttpHeaders({\r\n//       \"Content-Type\": \"application/json\",\r\n//       \"Access-Control-Allow-Origin\": '*',\r\n//       \"Authorization\": \"Bearer \" + token.token\r\n//     });\r\n\r\n    // this.pdfSrc = {\r\n    //   url: this.sanitizer.bypassSecurityTrustResourceUrl(AppSettings._BaseURL + \"App_Data/Files/DOJO200001/Name Script.pdf\")      ,         \r\n    //   httpHeaders: headers ,\r\n    // };\r\n   \r\n  }\r\n  \r\n\r\n  onFileSelected() {\r\n    let $img: any = document.querySelector('#file');\r\n  \r\n    if (typeof (FileReader) !== 'undefined') {\r\n      let reader = new FileReader();\r\n  \r\n      reader.onload = (e: any) => {\r\n        this.pdfSrc = e.target.result;\r\n        console.log(\"e.target.result\",e.target.result);\r\n        console.log(\"this.pdfSrc\",this.pdfSrc);\r\n\r\n      };\r\n  \r\n     reader.readAsArrayBuffer($img.files[0]);\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3NjaGVkdWxlci11cGRhdGUvc2NoZWR1bGVyLXVwZGF0ZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { NgbActiveModal } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { Tms_routes } from \"../../_models/tms_routes\";\r\nimport { MasterService } from \"../../_services/master.service\";\r\nimport { Item } from \"../../_models/item\";\r\nimport { Order_details } from \"../../_models/order_details\";\r\nimport { AccountingoptionsService } from \"../../_services/accountingoptions.service\";\r\nimport { AccountingOptions } from \"../../_models/accountingOptions\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { DeliveryOrderService } from \"../../_services/deliveryOrder.service\";\r\nimport { RoutesService } from \"../../_services/routes.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { SchedulerService } from \"../../_services/scheduler.service\";\r\nimport { Scheduler } from \"../../_models/scheduler\";\r\n\r\n@Component({\r\n  selector: \"app-scheduler-update\",\r\n  templateUrl: \"./scheduler-update.component.html\",\r\n  styleUrls: [\"./scheduler-update.component.scss\"]\r\n})\r\nexport class SchedulerUpdateComponent implements OnInit {\r\n  @Input() OrderDetailKey: string;\r\n  @Input() containerId: string;\r\n  @Input() OrderDetail: Order_details;\r\n\r\n  itemlist: Item[] = [];\r\n  orderdetail: Order_details;\r\n  public AppDateFrom: Date;\r\n  public AppDateTo: Date;\r\n  public PickupDateTime: Date;\r\n  public DropOffDateTime: Date;\r\n  public Legtype: number;\r\n  public LastFreeDay: Date;\r\n  public DriverNotes: string;\r\n  public SchedulerNotes: string;\r\n  public status: string;\r\n  public tmsroutes: Tms_routes;\r\n  optionsChecked = [];\r\n  acccountingOptions: Array<AccountingOptions> = [];\r\n  public schedulerData: Scheduler;\r\n\r\n  //update purpose\r\n  public temp_AppDateFrom: Date;\r\n  public temp_AppDateTo: Date;\r\n  public temp_PickupDateTime: Date;\r\n  public temp_DropOffDateTime: Date;\r\n  public temp_Legtype: number;\r\n  public temp_LastFreeDay: Date;\r\n  public temp_DriverNotes: string;\r\n  public temp_SchedulerNotes: string;\r\n  public temp_AccOptionsChecked = Array<AccountingOptions>();\r\n\r\n  public isUpdated:boolean;\r\n  constructor(\r\n    public datepipe: DatePipe,\r\n    private _NgbActiveModal: NgbActiveModal,\r\n    private toastr: ToastrService,\r\n    private master: MasterService,\r\n    private accountingoption: AccountingoptionsService,\r\n    private orderService: DeliveryOrderService,\r\n    private routesService: RoutesService,\r\n    private schedulerService: SchedulerService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.schedulerService.GetScheduledContainer(this.OrderDetailKey).subscribe(\r\n      data => {\r\n        this.schedulerData = data;\r\n        this.temp_AppDateFrom = this.AppDateFrom = new Date(\r\n          this.schedulerData.AppDateFrom\r\n        );\r\n        this.temp_AppDateTo = this.AppDateTo = new Date(\r\n          this.schedulerData.AppDateTo\r\n        );\r\n        this.temp_LastFreeDay = this.LastFreeDay = new Date(\r\n          this.schedulerData.LastFreeDay\r\n        );\r\n        this.temp_SchedulerNotes = this.SchedulerNotes = this.schedulerData.SchedulerNotes;\r\n        this.temp_Legtype = this.Legtype = this.schedulerData.LegType;\r\n        this.temp_PickupDateTime = this.PickupDateTime = this.schedulerData.ScheduleArrival;\r\n        this.temp_DropOffDateTime = this.DropOffDateTime = this.schedulerData.ScheduleDeparture;\r\n        this.temp_DriverNotes = this.DriverNotes = this.schedulerData.DriverNotes;\r\n        this.temp_AccOptionsChecked = this.acccountingOptions = this.schedulerData.accountingBO;\r\n      },\r\n      error => console.log(error),\r\n      () => console.log(\"Get scheduler Data\", this.schedulerData)\r\n    );\r\n\r\n    this.master.getItemList(1).subscribe(\r\n      data => {\r\n        this.itemlist = data;\r\n        for (var i = 0; i < this.schedulerData.accountingBO.length; i++) {\r\n          for (var j = 0; j < this.itemlist.length; j++) {\r\n            if (\r\n              this.acccountingOptions[i].itemkey == this.itemlist[j].itemkey\r\n            ) {\r\n              this.itemlist[j].isChecked = true;\r\n            }\r\n          }\r\n        }\r\n      },\r\n      error => console.log(error),\r\n      () => console.log(\"Get itemlist\", this.itemlist)\r\n    );\r\n    // this.accountingoption\r\n    //   .GetAccountingOptionsbyKey(this.OrderDetailKey)\r\n    //   .subscribe(\r\n    //     data => {\r\n    //       this.acccountingOptions = data;\r\n    //     },\r\n    //     error => console.log(error),\r\n    //     () => console.log(\"Get acccounting Options\", this.acccountingOptions)\r\n    //   );\r\n  }\r\n\r\n  onSubmit() {  \r\n    //Order Details\r\n    var detail = new Order_details();\r\n    detail.OrderDetailKey = this.OrderDetailKey;\r\n    detail.AppDateFrom = this.AppDateFrom;\r\n    detail.AppDateTo = this.AppDateTo;\r\n    detail.LastFreeDay = this.LastFreeDay;\r\n    detail.SchedulerNotes = this.SchedulerNotes;\r\n\r\n    //TMS route details\r\n    var tmsroutes = new Tms_routes();\r\n    tmsroutes.OrderDetailKey = this.OrderDetailKey;\r\n    tmsroutes.scheduledarrival = this.PickupDateTime;\r\n    tmsroutes.scheduleddeparture = this.DropOffDateTime;\r\n    tmsroutes.legtype = this.Legtype;\r\n    tmsroutes.drivernotes = this.DriverNotes;\r\n\r\n    //accounting options\r\n    var AccOptionsChecked = Array<AccountingOptions>();\r\n    AccOptionsChecked = this.acccountingOptions;\r\n    var updateAccOptions = false;\r\n\r\n    //check whether to call update method or not for -Order Details-\r\n    if (\r\n      this.AppDateFrom != this.temp_AppDateFrom ||\r\n      this.temp_AppDateTo != this.temp_AppDateTo ||\r\n      this.LastFreeDay != this.temp_LastFreeDay ||\r\n      this.SchedulerNotes != this.temp_SchedulerNotes\r\n    ) {\r\n      this.orderService.updateOrderDetails(detail).subscribe(\r\n        result => {\r\n          this.isUpdated = true;\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.showError(\"An Unexpected Error Occured.\", \"Scheduler-Update\");\r\n          return;\r\n        }\r\n      );\r\n    }\r\n    //check whether to call update method or not for -route details-\r\n    if (\r\n      this.PickupDateTime != this.temp_PickupDateTime ||\r\n      this.DropOffDateTime != this.temp_DropOffDateTime ||\r\n      this.Legtype != this.temp_Legtype ||\r\n      this.DriverNotes != this.temp_DriverNotes\r\n    ) {\r\n      this.routesService.insertRoutesDetails(tmsroutes).subscribe(\r\n        result => {\r\n          this.isUpdated = true;\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.showError(\"An Unexpected Error Occured.\", \"Scheduler-Update\");\r\n          return;\r\n        }\r\n      );\r\n    }\r\n\r\n    //check whether to call update method or not for -AccountingOptions-\r\n\r\n    // if (\r\n    //   this.schedulerData.accountingBO.length > 0 &&\r\n    //   AccOptionsChecked.length > 0\r\n    // ) {\r\n    //   for (var j = 0; j < AccOptionsChecked.length; j++) {\r\n    //     if (\r\n    //       AccOptionsChecked[j].itemkey != this.temp_AccOptionsChecked[j].itemkey\r\n    //     ) {\r\n    //       updateAccOptions = true;\r\n    //     }\r\n    //   }\r\n    // } \r\n    \r\n    \r\n\r\n//deleting existing data before adding\r\n    this.accountingoption\r\n        .UpdateAccountingOptions(this.OrderDetailKey)\r\n        .subscribe(\r\n          result => {\r\n            this.isUpdated = true;\r\n            //alert(result);\r\n          },\r\n          error => {\r\n            console.log(error);\r\n            this.showError(\"An Unexpected Error Occured.\", \"Scheduler-Update\");\r\n            return;\r\n          }\r\n        );\r\n\r\n    if (AccOptionsChecked.length > 0) {\r\n      this.accountingoption\r\n        .insertAccountingoptions(AccOptionsChecked)\r\n        .subscribe(\r\n          result => {\r\n            this.isUpdated = true;\r\n            //alert(result);\r\n          },\r\n          error => {\r\n            console.log(error);\r\n            this.showError(\"An Unexpected Error Occured.\", \"Scheduler-Update\");\r\n            return;\r\n          }\r\n        );\r\n    }\r\n    //if ( this.isUpdated) {\r\n      this.showSuccess(\"Updated successfully\", \"Scheduler-Update\");\r\n      //closing the modal window\r\n      //this.activeModal.dismiss(\"Cross click\");\r\n      this. closeModal();\r\n   // }\r\n  }\r\n\r\n  onCheckboxChange(option, event) {\r\n    if (event.target.checked) {\r\n      option.orderdetailkey = this.OrderDetailKey;\r\n      this.acccountingOptions.push(option);\r\n    } else {\r\n      for (var i = 0; i < this.itemlist.length; i++) {\r\n        if (this.acccountingOptions[i].itemkey == option.itemkey) {\r\n          this.acccountingOptions.splice(i, 1);\r\n        }\r\n      }\r\n    }\r\n    console.log(this.acccountingOptions);\r\n  }\r\n\r\n  showSuccess(message: string, title: string) {\r\n    this.toastr.success(message, title, { timeOut: 2000, closeButton: true });\r\n  }\r\n  showError(message: string, title: string) {\r\n    this.toastr.error(message, \"Oops!\", { timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  get activeModal() {\r\n    return this._NgbActiveModal;\r\n  }\r\n\r\n  closeModal() { this._NgbActiveModal.close('success'); }\r\n\r\n}\r\n","export default \".table tbody tr:hover td, .table tbody tr:hover th {\\n  background-color: #334858;\\n}\\n\\n.table-custom tbody {\\n  display: block;\\n  height: 200px;\\n  overflow: auto;\\n}\\n\\n.scrollbar {\\n  width: 100%;\\n  height: 93%;\\n  margin-top: 0px;\\n  float: left;\\n  overflow-y: scroll;\\n}\\n\\n#scrollbar-style::-webkit-scrollbar-track {\\n  box-shadow: 1px 1px 0px rgba(0, 0, 0, 0.1);\\n  background-color: lightslategrey;\\n  border-radius: 10px;\\n}\\n\\n#scrollbar-style::-webkit-scrollbar {\\n  width: 7px;\\n  background-color: #1a1818;\\n}\\n\\n#scrollbar-style::-webkit-scrollbar-thumb {\\n  background-color: darkslategrey;\\n  background-image: -webkit-linear-gradient(90deg, rgba(255, 255, 255, 0.2) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.2) 50%, rgba(255, 255, 255, 0.2) 75%, transparent 75%, transparent);\\n}\\n\\np {\\n  font-family: Lato;\\n}\\n\\n.pointer {\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2NoZWR1bGVybGlzdC9DOlxcVXNlcnNcXEFydW5cXERvY3VtZW50c1xcR2l0SHViXFxUTVNfQWRtaW5cXFRNU19XZWIvc3JjXFxhcHBcXHZpZXdzXFxzY2hlZHVsZXJsaXN0XFxzY2hlZHVsZXJsaXN0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy9zY2hlZHVsZXJsaXN0L3NjaGVkdWxlcmxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx5QkFBQTtBQ0NKOztBREdJO0VBQ0UsY0FBQTtFQUNBLGFBQUE7RUFDQSxjQUFBO0FDQU47O0FESUU7RUFDRSxXQUFBO0VBQ0EsV0FBQTtFQUVBLGVBQUE7RUFFQSxXQUFBO0VBQ0Esa0JBQUE7QUNISjs7QURNRTtFQUdFLDBDQUFBO0VBQ0EsZ0NBQUE7RUFDQSxtQkFBQTtBQ0hKOztBRE1FO0VBQ0UsVUFBQTtFQUNBLHlCQUFBO0FDSEo7O0FETUU7RUFDRSwrQkFBQTtFQUNBLDBNQUFBO0FDSEo7O0FEY0U7RUFDRSxpQkFBQTtBQ1hKOztBRGFFO0VBQ0ksZUFBQTtBQ1ZOIiwiZmlsZSI6InNyYy9hcHAvdmlld3Mvc2NoZWR1bGVybGlzdC9zY2hlZHVsZXJsaXN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRhYmxlIHRib2R5IHRyOmhvdmVyIHRkLCAudGFibGUgdGJvZHkgdHI6aG92ZXIgdGgge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDUxLCA3MiwgODgpO1xyXG59XHJcblxyXG4udGFibGUtY3VzdG9tIHtcclxuICAgIHRib2R5IHtcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIGhlaWdodDogMjAwcHg7XHJcbiAgICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gICAgfVxyXG4gIH1cclxuICBcclxuICAuc2Nyb2xsYmFyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5MyU7XHJcbiAgICAvL2hlaWdodDpjYWxjKDEwMCUgLSAyMDBweCk7XHJcbiAgICBtYXJnaW4tdG9wOiAwcHg7XHJcbiAgICAvL2JhY2tncm91bmQtY29sb3I6Z3JlZW47XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIG92ZXJmbG93LXk6IHNjcm9sbDtcclxuICB9XHJcbiAgXHJcbiAgI3Njcm9sbGJhci1zdHlsZTo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2sge1xyXG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiAxcHggMXB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgICAtbW96LWJveC1zaGFkb3c6IDFweCAxcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICAgIGJveC1zaGFkb3c6IDFweCAxcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0c2xhdGVncmV5O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICB9XHJcbiAgXHJcbiAgI3Njcm9sbGJhci1zdHlsZTo6LXdlYmtpdC1zY3JvbGxiYXIge1xyXG4gICAgd2lkdGg6IDdweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyNiwgMjQsIDI0KTtcclxuICB9XHJcbiAgXHJcbiAgI3Njcm9sbGJhci1zdHlsZTo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZGFya3NsYXRlZ3JleTtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KFxyXG4gICAgICA5MGRlZyxcclxuICAgICAgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpIDI1JSxcclxuICAgICAgdHJhbnNwYXJlbnQgMjUlLFxyXG4gICAgICB0cmFuc3BhcmVudCA1MCUsXHJcbiAgICAgIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKSA1MCUsXHJcbiAgICAgIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKSA3NSUsXHJcbiAgICAgIHRyYW5zcGFyZW50IDc1JSxcclxuICAgICAgdHJhbnNwYXJlbnRcclxuICAgICk7XHJcbiAgfVxyXG4gIHAge1xyXG4gICAgZm9udC1mYW1pbHk6IExhdG87XHJcbiAgfVxyXG4gIC5wb2ludGVye1xyXG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgfSIsIi50YWJsZSB0Ym9keSB0cjpob3ZlciB0ZCwgLnRhYmxlIHRib2R5IHRyOmhvdmVyIHRoIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMzNDg1ODtcbn1cblxuLnRhYmxlLWN1c3RvbSB0Ym9keSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDIwMHB4O1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLnNjcm9sbGJhciB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDkzJTtcbiAgbWFyZ2luLXRvcDogMHB4O1xuICBmbG9hdDogbGVmdDtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xufVxuXG4jc2Nyb2xsYmFyLXN0eWxlOjotd2Via2l0LXNjcm9sbGJhci10cmFjayB7XG4gIC13ZWJraXQtYm94LXNoYWRvdzogMXB4IDFweCAwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICAtbW96LWJveC1zaGFkb3c6IDFweCAxcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgYm94LXNoYWRvdzogMXB4IDFweCAwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodHNsYXRlZ3JleTtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbn1cblxuI3Njcm9sbGJhci1zdHlsZTo6LXdlYmtpdC1zY3JvbGxiYXIge1xuICB3aWR0aDogN3B4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWExODE4O1xufVxuXG4jc2Nyb2xsYmFyLXN0eWxlOjotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7XG4gIGJhY2tncm91bmQtY29sb3I6IGRhcmtzbGF0ZWdyZXk7XG4gIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KDkwZGVnLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMikgMjUlLCB0cmFuc3BhcmVudCAyNSUsIHRyYW5zcGFyZW50IDUwJSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpIDUwJSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpIDc1JSwgdHJhbnNwYXJlbnQgNzUlLCB0cmFuc3BhcmVudCk7XG59XG5cbnAge1xuICBmb250LWZhbWlseTogTGF0bztcbn1cblxuLnBvaW50ZXIge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59Il19 */\"","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { Order_details } from \"../../_models/order_details\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { DeliveryOrderHeader } from \"../../_models/DeliveryOrderHeader\";\r\nimport { MasterService } from \"../../_services/master.service\";\r\nimport { Status } from \"../../common/master\";\r\nimport { SchedulerService } from \"../../_services/scheduler.service\";\r\nimport { DeliveryOrderService } from \"../../_services/deliveryOrder.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { NavigationComponent } from \"../navigation/navigation.component\";\r\nimport { Item } from \"../../_models/item\";\r\nimport { RoutesService } from \"../../_services/routes.service\";\r\nimport { Tms_routes } from \"../../_models/tms_routes\";\r\nimport { AccountingOptions } from \"../../_models/accountingOptions\";\r\nimport { AccountingoptionsService } from \"../../_services/accountingoptions.service\";\r\nimport {\r\n  NgbActiveModal,\r\n  NgbModal,\r\n  NgbModalRef\r\n} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { SchedulerUpdateComponent } from \"../scheduler-update/scheduler-update.component\";\r\nimport { Scheduler } from \"../../_models/scheduler\";\r\n\r\n@Component({\r\n  providers: [NavigationComponent],\r\n  selector: \"app-schedulerlist\",\r\n  templateUrl: \"./schedulerlist.component.html\",\r\n  styleUrls: [\"./schedulerlist.component.scss\"]\r\n})\r\nexport class SchedulerlistComponent implements OnInit {\r\n  // bsConfig: Partial<BsDatepickerConfig>;\r\n  HeaderData: DeliveryOrderHeader;\r\n  DetailData: Order_details;\r\n  DetailsData: Array<Order_details> = [];\r\n  scheduledContainerList: Array<Order_details> = [];\r\n  AccountingOptions: Array<Item> = [];\r\n  acccountingOptions: Array<AccountingOptions> = [];\r\n  statuslist: Status[] = [];\r\n  itemlist: Item[] = [];\r\n  AccOpts: number;\r\n  statuslistFiltered: Status[] = [];\r\n  dataSaved: boolean = false;\r\n  routesdataSaved: boolean = false;\r\n  accountingoptionsSaved: boolean = false;\r\n  alldataSaved: boolean = false;\r\n  message = null;\r\n  public searchText: string;\r\n  public SearchRecentContainer: string;\r\n\r\n  registerForm: FormGroup;\r\n  submitted = false;\r\n  selectedKey: string;\r\n  dataShow: boolean;\r\n  tempOrderDetailKey: string;\r\n  OrderDetailKey: string;\r\n  customerKey: string;\r\n\r\n  public AppDateFrom: Date;\r\n  public AppDateTo: Date;\r\n  public PickupDateTime: Date;\r\n  public DropOffDateTime: Date;\r\n  public Legtype: number;\r\n  public LastFreeDay: Date;\r\n  public DriverNotes: string;\r\n  public SchedulerNotes: string;\r\n  public status: string;\r\n  public tmsroutes: Tms_routes;\r\n  public schedulerData: Scheduler;\r\n\r\n  showScheduler = false;\r\n  showImage = true;\r\n  showSchedulerDiv = true;\r\n  showScheduledContainerList: boolean;\r\n  btnCompleteScheduleDisabled: boolean = true;\r\n\r\n  optionsChecked = [];\r\n  modalRef: NgbModalRef;\r\n\r\n  isDesc: boolean = false;\r\n  column: string = \"containerid\";\r\n  p: number = 1;\r\n  count: number;\r\n\r\n  constructor(\r\n    private _NgbModal: NgbModal,\r\n    private NaviComp: NavigationComponent,\r\n    private formBuilder: FormBuilder,\r\n    private schedulerService: SchedulerService,\r\n    private orderService: DeliveryOrderService,\r\n    private master: MasterService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private toastr: ToastrService,\r\n    private routesService: RoutesService,\r\n    private accountingoptionsService: AccountingoptionsService\r\n  ) {\r\n    //this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n    // NaviComp.test(6);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.master.getStatusList().subscribe(\r\n      data => {\r\n        this.statuslist = data;\r\n      },\r\n      error => console.log(error),\r\n      () => console.log(\"Get statuslist\", this.statuslist)\r\n    );\r\n\r\n    this.master.getItemList(1).subscribe(\r\n      data => {\r\n        this.itemlist = data;\r\n      },\r\n      error => console.log(error),\r\n      () => console.log(\"Get itemlist\", this.itemlist)\r\n    );\r\n\r\n    this.loaddata();\r\n    this.loadScheduleddata();\r\n    this.sliceItems();\r\n  }\r\n\r\n  sliceItems() {\r\n    var size = 4;\r\n    this.AccOpts = Math.floor(13 / size) + 1;\r\n    console.log(\"Itemlist : = \", this.itemlist.length);\r\n    console.log(\"AccOpts  : = \", this.AccOpts);\r\n  }\r\n\r\n  onSubmit() {\r\n    if (!confirm(\"Are you sure you want to Save? \")) {    \r\n      return;\r\n    }\r\n\r\n    if (\r\n      this.AppDateFrom == null ||\r\n      this.AppDateTo == null ||\r\n      this.PickupDateTime == null ||\r\n      this.DropOffDateTime == null ||\r\n      this.LastFreeDay == null\r\n    ) {\r\n      this.showError(\"Enter the missing fields.\", \"Scheduler\");\r\n      return;\r\n    }\r\n\r\n    //Order Details\r\n    //this.DetailData = new Order_details();\r\n    this.DetailData.AppDateFrom = new Date(this.AppDateFrom);\r\n    this.DetailData.AppDateTo = new Date(this.AppDateTo);\r\n    this.DetailData.LastFreeDay = new Date(this.LastFreeDay);\r\n    this.DetailData.SchedulerNotes = this.SchedulerNotes;\r\n\r\n    //TMS route details\r\n    var tmsroutes = new Tms_routes();\r\n    tmsroutes.OrderDetailKey = this.DetailData.OrderDetailKey;\r\n    tmsroutes.OrderKey = this.DetailData.OrderKey;\r\n    tmsroutes.scheduledarrival = new Date(this.PickupDateTime);\r\n    tmsroutes.scheduleddeparture = new Date(this.DropOffDateTime);\r\n    tmsroutes.legtype = this.Legtype;\r\n    tmsroutes.drivernotes = this.DriverNotes;\r\n\r\n    //accounting options\r\n    var AccOptionsChecked = Array<AccountingOptions>();\r\n    AccOptionsChecked = this.optionsChecked;\r\n    var updateAccOptions = false;\r\n\r\n    this.orderService.updateOrderDetails(this.DetailData).subscribe(\r\n      result => {},\r\n      error => {\r\n        console.log(error);\r\n        this.showError(\"An Unexpected Error Occured.\", \"Scheduler-Update\");\r\n        return;\r\n      }\r\n    );\r\n\r\n    this.routesService.insertRoutesDetails(tmsroutes).subscribe(\r\n      result => {},\r\n      error => {\r\n        console.log(error);\r\n        this.showError(\"An Unexpected Error Occured.\", \"Scheduler-Update\");\r\n        return;\r\n      }\r\n    );\r\n\r\n    //deleting existing data before adding\r\n    this.accountingoptionsService\r\n      .UpdateAccountingOptions(this.DetailData.OrderDetailKey)\r\n      .subscribe(\r\n        result => {\r\n          // this.isUpdated = true;\r\n          //alert(result);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.showError(\"An Unexpected Error Occured.\", \"Scheduler-Update\");\r\n          return;\r\n        }\r\n      );\r\n\r\n    if (AccOptionsChecked.length > 0) {\r\n      this.accountingoptionsService\r\n        .insertAccountingoptions(AccOptionsChecked)\r\n        .subscribe(\r\n          result => {},\r\n          error => {\r\n            console.log(error);\r\n            this.showError(\"An Unexpected Error Occured.\", \"Scheduler-Update\");\r\n            return;\r\n          }\r\n        );\r\n    }\r\n\r\n    var DOdetail = this.DetailData;\r\n    DOdetail.status = \"3\"; //In progress\r\n\r\n    this.orderService.UpdateDOdetailStatus(this.DetailData).subscribe(\r\n      result => {\r\n        this.loaddata();\r\n        this.loadScheduleddata();\r\n        this.showScheduledContainerList = true;\r\n        this.showScheduler = false;\r\n        this.showSuccess(\r\n          \"Container - \" + DOdetail.ContainerNo + \" Holded!\",\r\n          \"Scheduler-Update\"\r\n        );\r\n        return;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        this.showError(\"An Unexpected Error Occured.\", \"Scheduler-Update\");\r\n        return;\r\n      }\r\n    );\r\n\r\n    this.showScheduler = false; \r\n    this.loaddata();\r\n    this.loadScheduleddata();\r\n    this.clear();\r\n    this.showSuccess(\"Container Scheduled successfully\", \"Scheduler\");\r\n  }\r\n\r\n  ngOnChanges() {}\r\n\r\n  rowclickEvent(value: Order_details) {\r\n    // if (this.tempOrderDetailKey == value.OrderDetailKey) {\r\n    //   this.dataShow = false;\r\n    //   this.tempOrderDetailKey = null;\r\n    //   this.selectedKey = null;\r\n    //   return;\r\n    // } else {\r\n    //   this.dataShow = true;\r\n    //   this.DetailData = value;\r\n    //   console.log(\"Testing DetailData \", this.DetailData);\r\n    // }\r\n    this.clear();\r\n\r\n    this.OrderDetailKey = value.OrderDetailKey;\r\n\r\n    this.orderService.GetbyKey(value.OrderKey).subscribe(\r\n      data => {\r\n        this.HeaderData = data;\r\n        this.btnCompleteScheduleDisabled=true;\r\n        this.dataShow = true;\r\n        this.tempOrderDetailKey = value.OrderDetailKey;\r\n      },\r\n      error => console.log(error),\r\n      () => console.log(\"order Header Data \", this.HeaderData)\r\n    );\r\n    this.GetOrderDetailsbykey(this.OrderDetailKey);\r\n    this.Legtype = 0;\r\n    this.showScheduler = true;\r\n    this.showImage = false;\r\n    this.showSchedulerDiv = true;\r\n    this.showScheduledContainerList = false;\r\n  }\r\n\r\n  showSuccess(message: string, title: string) {\r\n    this.toastr.success(message, title, { timeOut: 2000, closeButton: true });\r\n  }\r\n  showError(message: string, title: string) {\r\n    this.toastr.error(message, \"Oops!\", { timeOut: 2000, closeButton: true });\r\n  }\r\n\r\n  loaddata() {\r\n    this.schedulerService.GetOrderstoSchedule().subscribe(\r\n      data => {\r\n        this.DetailsData = data;\r\n      },\r\n      error => console.log(error),\r\n      () => console.log(\"Get OrderDetail\", this.DetailsData)\r\n    );\r\n  }\r\n  loadScheduleddata() {\r\n    this.schedulerService.GetScheduledContainers().subscribe(\r\n      data => {\r\n        this.scheduledContainerList = data;\r\n      },\r\n      error => console.log(error),\r\n      () => console.log(\"Get OrderstoSchedule\", this.scheduledContainerList)\r\n    );\r\n    this.showScheduledContainerList = true;\r\n  }\r\n\r\n  GetOrderDetailsbykey(orderdetailkey: string) {\r\n    this.schedulerService.GetOrderDetailsbykey(orderdetailkey).subscribe(\r\n      data => {\r\n        this.DetailData = data;\r\n      },\r\n      error => console.log(error)\r\n    );\r\n    this.showScheduledContainerList = true;\r\n  }\r\n\r\n  //onCheckboxChange\r\n  onCheckboxChange(option, event) {\r\n    if (event.target.checked) {\r\n      option.orderdetailkey = this.OrderDetailKey;\r\n      //   option.customerkey = this.DetailsData[0].OrderKey;\r\n      this.optionsChecked.push(option);\r\n    } else {\r\n      for (var i = 0; i < this.itemlist.length; i++) {\r\n        if (this.optionsChecked[i].itemkey == option.itemkey) {\r\n          this.optionsChecked.splice(i, 1);\r\n        }\r\n      }\r\n    }\r\n    console.log(this.optionsChecked);\r\n  }\r\n\r\n  openModal(data: Order_details) {\r\n    this.modalRef = this._NgbModal.open(SchedulerUpdateComponent, {\r\n      backdrop: \"static\",\r\n      size: \"lg\",\r\n      keyboard: true,\r\n      centered: true\r\n    });\r\n    this.modalRef.componentInstance.OrderDetailKey = data.OrderDetailKey;\r\n    this.modalRef.componentInstance.containerId = data.containerid;\r\n    this.modalRef.componentInstance.OrderDetail = data;\r\n\r\n    this.modalRef.result.then(\r\n      result => {\r\n        if (result === \"success\") {\r\n          this.loadScheduleddata(); // Refresh Data in table grid\r\n          console.log(\"Refresh Data \", \"success\");\r\n        }\r\n      },\r\n      reason => {}\r\n    );\r\n  }\r\n\r\n  onCancel() {\r\n    if (!confirm(\"Are you sure you want to cancel?\")) {\r\n      return;\r\n    }\r\n    this.showScheduledContainerList = true;\r\n    this.showScheduler = false;\r\n    this.clear();    \r\n  }\r\n\r\n  loaddata_forEdit(data: Order_details) {\r\n    this.OrderDetailKey = data.OrderDetailKey;\r\n\r\n    this.orderService.GetbyKey(data.OrderKey).subscribe(\r\n      data => {\r\n        this.HeaderData = data;\r\n        this.btnCompleteScheduleDisabled = false;\r\n      },\r\n      error => console.log(error),\r\n      () => console.log(\"order Header Data \", this.HeaderData)\r\n    );\r\n\r\n    this.schedulerService.GetOrderDetailsbykey(data.OrderDetailKey).subscribe(\r\n      data => {\r\n        this.DetailData = data;\r\n        console.log(\" this.DetailData for edit\", this.DetailData);\r\n      },\r\n      error => console.log(error)\r\n    );\r\n\r\n    this.schedulerService.GetScheduledContainer(data.OrderDetailKey).subscribe(\r\n      data => {\r\n        this.schedulerData = data;\r\n\r\n        this.AppDateFrom = new Date(this.schedulerData.AppDateFrom);\r\n        this.AppDateTo = new Date(this.schedulerData.AppDateTo);\r\n        this.LastFreeDay = new Date(this.schedulerData.LastFreeDay);\r\n        this.SchedulerNotes = this.schedulerData.SchedulerNotes;\r\n        this.Legtype = this.schedulerData.LegType;\r\n        this.PickupDateTime = this.schedulerData.ScheduleArrival;\r\n        this.DropOffDateTime = this.schedulerData.ScheduleDeparture;\r\n        this.DriverNotes = this.schedulerData.DriverNotes;\r\n        this.optionsChecked = this.acccountingOptions = this.schedulerData.accountingBO;\r\n        this.showScheduledContainerList = false;\r\n        this.showScheduler = true;\r\n      },\r\n      error => console.log(error),\r\n      () => console.log(\"Get scheduler Data\", this.schedulerData)\r\n    );\r\n\r\n    if (this.schedulerData.accountingBO.length > 0) {\r\n      this.master.getItemList(1).subscribe(\r\n        data => {\r\n          this.itemlist = data;\r\n          for (var i = 0; i < this.schedulerData.accountingBO.length; i++) {\r\n            for (var j = 0; j < this.itemlist.length; j++) {\r\n              if (\r\n                this.acccountingOptions[i].itemkey == this.itemlist[j].itemkey\r\n              ) {\r\n                this.itemlist[j].isChecked = true;\r\n              }\r\n            }\r\n          }\r\n        },\r\n        error => console.log(error),\r\n        () => console.log(\"Get itemlist\", this.itemlist)\r\n      );\r\n    }\r\n\r\n    // this.accountingoption\r\n    //   .GetAccountingOptionsbyKey(this.OrderDetailKey)\r\n    //   .subscribe(\r\n    //     data => {\r\n    //       this.acccountingOptions = data;\r\n    //     },\r\n    //     error => console.log(error),\r\n    //     () => console.log(\"Get acccounting Options\", this.acccountingOptions)\r\n    //   );\r\n  }\r\n\r\n  hold_Schedule() {\r\n    if (!confirm(\"Are you sure you want to Hold? \")) {\r\n      return;\r\n    }\r\n    var DOdetail = this.DetailData;\r\n    DOdetail.status = \"4\"; //4- Hold\r\n\r\n    this.orderService.UpdateDOdetailStatus(this.DetailData).subscribe(\r\n      result => {\r\n        this.loaddata();\r\n        this.loadScheduleddata();\r\n        this.showScheduledContainerList = true;\r\n        this.showScheduler = false;\r\n        this.showSuccess(\r\n          \"Container - \" + DOdetail.ContainerNo + \" Holded!\",\r\n          \"Scheduler-Update\"\r\n        );\r\n        return;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        this.showError(\"An Unexpected Error Occured.\", \"Scheduler-Update\");\r\n        return;\r\n      }\r\n    );\r\n  }\r\n  complete_Schedule() {\r\n    if (!confirm(\"Are you sure you want to Complete Schedule?\")) {\r\n      return;\r\n    }\r\n    var DOdetail = this.DetailData;\r\n    DOdetail.status = \"5\"; //4- complete schedule\r\n\r\n    this.orderService.UpdateDOdetailStatus(this.DetailData).subscribe(\r\n      result => {\r\n        this.loaddata();\r\n        this.loadScheduleddata();\r\n        this.showScheduledContainerList = true;\r\n        this.showScheduler = false;\r\n        this.showSuccess(\r\n          \"Schedule Completed for the Container :\" +\r\n            this.DetailData.ContainerNo!,\r\n          \"Scheduler-Update\"\r\n        );\r\n        return;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        this.showError(\"An Unexpected Error Occured.\", \"Scheduler-Update\");\r\n        return;\r\n      }\r\n    );\r\n  }\r\n\r\n  sort(column) {\r\n    this.isDesc = !this.isDesc; //change the direction\r\n    this.column = column;\r\n    let direction = this.isDesc ? 1 : -1;\r\n\r\n    this.scheduledContainerList = [...this.scheduledContainerList].sort(\r\n      (n1, n2) => {\r\n        if (this.column == \"containerid\") {\r\n          if (n1.containerid > n2.containerid) {\r\n            return 1 * direction;\r\n          } else if (n1.containerid < n2.containerid) {\r\n            return -1 * direction;\r\n          } else return 0;\r\n        }\r\n\r\n        if (this.column == \"ContainerNo\") {\r\n          if (n1.ContainerNo > n2.ContainerNo) {\r\n            return 1 * direction;\r\n          } else if (n1.ContainerNo < n2.ContainerNo) {\r\n            return -1 * direction;\r\n          } else return 0;\r\n        }\r\n        if (this.column == \"ContainerSizeDesc\") {\r\n          if (n1.ContainerSizeDesc > n2.ContainerSizeDesc) {\r\n            return 1 * direction;\r\n          } else if (n1.ContainerSizeDesc < n2.ContainerSizeDesc) {\r\n            return -1 * direction;\r\n          } else return 0;\r\n        }\r\n        if (this.column == \"LastFreeDay\") {\r\n          if (n1.LastFreeDay > n2.LastFreeDay) {\r\n            return 1 * direction;\r\n          } else if (n1.LastFreeDay < n2.LastFreeDay) {\r\n            return -1 * direction;\r\n          } else return 0;\r\n        }\r\n\r\n        if (this.column == \"PickupDateTime\") {\r\n          if (n1.PickupDateTime > n2.PickupDateTime) {\r\n            return 1 * direction;\r\n          } else if (n1.PickupDateTime < n2.PickupDateTime) {\r\n            return -1 * direction;\r\n          } else return 0;\r\n        }\r\n        if (this.column == \"DropOffDateTime\") {\r\n          if (n1.DropOffDateTime > n2.DropOffDateTime) {\r\n            return 1 * direction;\r\n          } else if (n1.DropOffDateTime < n2.DropOffDateTime) {\r\n            return -1 * direction;\r\n          } else return 0;\r\n        }\r\n        if (this.column == \"StatusDesc\") {\r\n          if (n1.StatusDesc > n2.StatusDesc) {\r\n            return 1 * direction;\r\n          } else if (n1.StatusDesc < n2.StatusDesc) {\r\n            return -1 * direction;\r\n          } else return 0;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  clear() {\r\n    this.AppDateFrom = undefined;\r\n    this.AppDateTo = undefined;\r\n    this.LastFreeDay = undefined;\r\n    this.SchedulerNotes = undefined;\r\n    //this.DetailData = null;\r\n    this.PickupDateTime = undefined;\r\n    this.DropOffDateTime = undefined;\r\n    this.Legtype = undefined;\r\n    this.DriverNotes = undefined;\r\n    //this.optionsChecked = null;\r\n\r\n    for (var j = 0; j < this.itemlist.length; j++) {\r\n      this.itemlist[j].isChecked = false;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  SimpleChanges,\r\n  OnChanges,\r\n  OnDestroy\r\n} from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\n//import { BsModalRef, BsModalService } from \"ngx-bootstrap\";\r\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { DeliveryOrderService } from \"../../_services/deliveryOrder.service\";\r\nimport { DeliveryOrderHeader } from \"../../_models/DeliveryOrderHeader\";\r\nimport { Order_details } from \"../../_models/order_details\";\r\n@Component({\r\n  selector: \"app-tab\",\r\n  templateUrl: \"./tab.component.html\"\r\n})\r\nexport class TabComponent implements OnInit, OnChanges, OnDestroy {\r\n  @Input() orderKeyinput: string;\r\n\r\n  public order: DeliveryOrderHeader;\r\n  public orderinfo: Order_details[];\r\n\r\n  subscription: Subscription;\r\n  //modalRef: BsModalRef;\r\n  constructor(  private service: DeliveryOrderService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private modalService: NgbModal\r\n  ) {\r\n    //alert(this.orderKey);\r\n     this.orderKeyinput = this.route.snapshot.paramMap.get(\"order\");\r\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n    /* This part will only be accessable on load only. So, it will not be accessable on Reload. */\r\n    // this.ngOnInit();\r\n  }\r\n\r\n  ngOnInit() {\r\n    // alert('Tab Initiate:  '+ this.orderKeyinput);\r\n    //this.orderKeyinput = this.route.snapshot.paramMap.get(\"order\");\r\n    // this.orderKey ='43976812-5c31-11e9-be2a-93c1a1c5ac18';\r\n\r\n       if (this.orderKeyinput != undefined) {\r\n      this.service.GetbyKey(this.orderKeyinput).subscribe(data => {\r\n        (this.order = data), \r\n        console.log(\"testing Model----\", this.order);\r\n        this.service\r\n          .GetOrderDetailsbyKey(this.orderKeyinput)\r\n          .subscribe(\r\n            data => (this.orderinfo = data),\r\n            error => console.log(error),\r\n            () => console.log(\"Get OrderDetail\", this.orderinfo)\r\n          ),\r\n          error => console.log(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    // alert('Tab Onchange:  '+ this.orderKeyinput);\r\n    // this.orderKey = this.route.snapshot.paramMap.get(\"order\");\r\n    this.orderKeyinput = this.orderKeyinput; //changes[\"orderKeyinput\"].currentValue;\r\n\r\n    //  alert('Tab Onchange2:  '+ this.orderKeyinput);\r\n  }\r\n  ngOnDestroy() {\r\n    this.orderKeyinput = null;\r\n  }\r\n  onClick(event) {\r\n    //alert('TEst');\r\n  }\r\n  \r\n}\r\n","export default \".side {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  height: 100%;\\n  padding: 0;\\n}\\n\\n.scroll-area {\\n  width: 100%;\\n  height: 93%;\\n  margin-top: 0px;\\n  float: left;\\n  overflow-y: scroll;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvdGVzdC9DOlxcVXNlcnNcXEFydW5cXERvY3VtZW50c1xcR2l0SHViXFxUTVNfQWRtaW5cXFRNU19XZWIvc3JjXFxhcHBcXHZpZXdzXFx0ZXN0XFx0ZXN0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy90ZXN0L3Rlc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxlQUFBO0VBQ0EsTUFBQTtFQUNBLE9BQUE7RUFDQSxZQUFBO0VBQ0EsVUFBQTtBQ0NKOztBREVFO0VBQ0UsV0FBQTtFQUNBLFdBQUE7RUFFQSxlQUFBO0VBRUEsV0FBQTtFQUNBLGtCQUFBO0FDREoiLCJmaWxlIjoic3JjL2FwcC92aWV3cy90ZXN0L3Rlc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2lkZXtcclxuICAgIHBvc2l0aW9uOmZpeGVkO1xyXG4gICAgdG9wOjA7XHJcbiAgICBsZWZ0OjA7XHJcbiAgICBoZWlnaHQ6MTAwJTtcclxuICAgIHBhZGRpbmc6MDtcclxuICB9XHJcbiAgXHJcbiAgLnNjcm9sbC1hcmVhe1xyXG4gICAgd2lkdGg6MTAwJTtcclxuICAgIGhlaWdodDo5MyU7XHJcbiAgIC8vIGhlaWdodDpjYWxjKDEwMCUgLSAyMDBweCk7XHJcbiAgICBtYXJnaW4tdG9wOjBweDtcclxuICAgIC8vYmFja2dyb3VuZC1jb2xvcjpncmVlbjtcclxuICAgIGZsb2F0OmxlZnQ7XHJcbiAgICBvdmVyZmxvdy15OnNjcm9sbDtcclxuICB9IiwiLnNpZGUge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwYWRkaW5nOiAwO1xufVxuXG4uc2Nyb2xsLWFyZWEge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA5MyU7XG4gIG1hcmdpbi10b3A6IDBweDtcbiAgZmxvYXQ6IGxlZnQ7XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-test',\r\n  templateUrl: './test.component.html',\r\n  styleUrls: ['./test.component.scss']\r\n})\r\nexport class TestComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}