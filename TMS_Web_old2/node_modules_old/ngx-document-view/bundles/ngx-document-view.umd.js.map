{
  "version": 3,
  "file": "ngx-document-view.umd.js",
  "sources": [
    "ng://ngx-document-view/src/app/document-view/document-view.module.ts",
    "ng://ngx-document-view/src/app/document-view/document-view.directive.ts",
    "ng://ngx-document-view/src/app/document-view/models/ViewProviders.ts"
  ],
  "sourcesContent": [
    "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DocumentViewDirective } from './document-view.directive';\r\nimport { SafePipeModule } from 'safe-pipe';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, SafePipeModule],\r\n  declarations: [DocumentViewDirective],\r\n  exports: [DocumentViewDirective]\r\n})\r\nexport class DocumentViewModule {}\r\n",
    "import { element } from 'protractor';\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  ElementRef,\r\n  ViewChild,\r\n  Output\r\n} from '@angular/core';\r\nimport { ViewProviders } from './models/ViewProviders';\r\nimport { UriBuilder } from 'uribuilder';\r\nimport { cleanPath } from 'cleanpath';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { TimerObservable } from 'rxjs/observable/TimerObservable';\r\nimport 'rxjs/operator/toPromise';\r\nimport 'rxjs/operator/takeUntil';\r\nimport { Directive } from '@angular/core';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: 'iframe[ngx-document]'\r\n})\r\nexport class DocumentViewDirective implements OnInit {\r\n  private _provider: ViewProviders = ViewProviders.google;\r\n  private _originSrc: string;\r\n  /**\r\n   * 檢視器提供者\r\n   */\r\n  @Input()\r\n  public set provider(value: ViewProviders) {\r\n    this._provider = value;\r\n    this.ngOnInit();\r\n  }\r\n\r\n  public get provider(): ViewProviders {\r\n    return this._provider;\r\n  }\r\n\r\n  @Output() public providerChange = new EventEmitter<ViewProviders>();\r\n\r\n  /**\r\n   * 原始文件連結\r\n   */\r\n  public get originSrc(): string {\r\n    return this._originSrc;\r\n  }\r\n\r\n  constructor(private iframe: ElementRef) {\r\n    this._originSrc = (this.iframe.nativeElement as HTMLIFrameElement).src;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    (this.iframe\r\n      .nativeElement as HTMLIFrameElement).src = this.getDocumentUrl();\r\n  }\r\n\r\n  /**\r\n   * 根據對應的檢視器提供者產生文件網址\r\n   */\r\n  public getDocumentUrl(): string {\r\n    if (this.provider === ViewProviders.google) {\r\n      return (\r\n        'http://docs.google.com/gview?url=' +\r\n        encodeURI(this._originSrc) +\r\n        '&embedded=true'\r\n      );\r\n    } else if (this.provider === ViewProviders.microsoft) {\r\n      return (\r\n        'https://view.officeapps.live.com/op/embed.aspx?src=' +\r\n        encodeURI(this._originSrc)\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 轉換連結與編碼\r\n   * @param url 連結\r\n   */\r\n  encodeURI(url: string): string {\r\n    if (UriBuilder.parse(url).isRelative()) {\r\n      url = cleanPath(document.baseURI + '/' + url);\r\n    }\r\n    return encodeURIComponent(url);\r\n  }\r\n}\r\n",
    "/**\r\n * 檢視器服務提供者\r\n */\r\nexport enum ViewProviders {\r\n  /**\r\n   * Google\r\n   */\r\n  google = 'google',\r\n  /**\r\n   * Microsoft\r\n   */\r\n  microsoft = 'microsoft'\r\n}\r\n"
  ],
  "names": [
    "Output",
    "cleanPath",
    "EventEmitter"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;CEWA,CAAA;;;;;;;;;;;QDoCA,IAAA,CAAA,SAAwC,GAAxC,aAAA,CAAA,MAAA,CAAA;QAAsB,IAAtB,CAAA,cAAA,GAAA,IAAAE,iBAAA,EAAA,CAAA;QAxBA,IAAA,CAAA,UAAA,GAAA,EAAA,IAAA,CAAA,MAAmD,CAAnD,aAAA,GAAA,GAAA,CAAA;KAeA;IAUA,MAAA,CAAA,cAAA,CAAsB,qBAAtB,CAAA,SAAmC,EAAnC,UAAA,EAAA;;;;;;;;;;;;;;YAdA,IAAqB,CAArB,QAAA,EAAA,CAAA;SACA;;;;;;;;;;;;QAgBA,UAAA,EAAA,IAAA;QACI,YAAJ,EAAA,IAAA;KACA,CAAA,CAAA;;;;;;aAMA,aAAA,GAAA,GAAA,GAAA,IAAA,CAAA,cAAA,EAAA,CAAA;KACA,CAAA;;;;;IAMA,qBAAA,CAAA,SAAiC,CAAjC,cAAA,GAAA,YAAA;QACA,IAAM,IAAN,CAAA,QAAA,KAAA,aAAA,CAAA,MAAA,EAAA;YAEA,QAAA,mCAAA;gBAEA,SAAA,CAAA,IAAA,CAAA,UAAA,CAAA;gBAEA,gBAAA,EAAA;;;;;;;KAOA,CAAA;;;;;;;;YA7DC,GAAD,GAAAD,mBAAA,CAAA,QAAA,CAAA,OAAA,GAAA,GAAA,GAAA,GAAA,CAAA,CAAA;SACA;QACA,OAAA,kBAAA,CAAA,GAAA,CAAA,CAAA;;;;AAhBA,qBAAA,CAAY,UAAZ,GAAA;;;aAuBA,EAAA,EAAA;CAUA,CAAA;;;;;;;IDtCA,gBAAA,EAAA,CAAA,EAUA,IAVA,EAAAD,WAAA,EAAA,EAAA;;;;;;AAQA,IAAA,kBAAA,IAAY,YAAZ;IACA,SAAC,kBAAD,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;"
}
