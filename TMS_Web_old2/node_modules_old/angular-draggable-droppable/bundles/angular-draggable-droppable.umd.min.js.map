{"version":3,"sources":["null","ng://angular-draggable-droppable/draggable-helper.provider.ts","ng://angular-draggable-droppable/draggable.directive.ts","ng://angular-draggable-droppable/droppable.directive.ts","ng://angular-draggable-droppable/drag-and-drop.module.ts"],"names":["__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","DraggableHelper","Subject","DraggableDirective","element","renderer","draggableHelper","zone","this","x","y","EventEmitter","prototype","ngOnInit","_this","checkEventListeners","pointerDrag","pointerDown","pipe","filter","canDrag","mergeMap","pointerDownEvent","currentDrag","run","dragPointerDown","pointerMove","map","pointerMoveEvent","event","preventDefault","clientX","clientY","moveData","dragSnapGrid","Math","floor","dragAxis","_a","validateDrag","takeUntil","merge","pointerUp","share","take","subscribe","dragStart","setCursor","dragCursor","takeLast","dragEnd","complete","setCssTransform","ghostDragEnabled","setStyle","nativeElement","pairwise","_b","previous","dragging","dropData","ngOnChanges","changes","ngOnDestroy","unsubscribeEventListeners","hasEventListeners","Object","keys","eventListenerSubscriptions","length","runOutsideAngular","mousedown","listen","onMouseDown","mouseup","onMouseUp","touchstart","onTouchStart","touchend","onTouchEnd","touchcancel","mouseenter","onMouseEnter","mouseleave","onMouseLeave","mousemove","mouseMoveEvent","touchmove","touchMoveEvent","targetTouches","touches","changedTouches","forEach","transformAttribute","type","Directive","args","selector","ElementRef","Renderer2","NgZone","Input","Output","DroppableDirective","currentDragSubscription","drag","currentDragDropData","dragOverActive","droppableRectangle","getBoundingClientRect","overlaps","rect","left","right","top","bottom","overlapsChanged","distinctUntilChanged","overlapsNow","dragEnter","dragOver","didOverlap","dragLeave","drop","unsubscribe","DragAndDropModule","forRoot","ngModule","providers","NgModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Subject } from 'rxjs';\n\nexport class DraggableHelper {\n  currentDrag: Subject<any> = new Subject();\n}\n","import {\n  Directive,\n  OnInit,\n  ElementRef,\n  Renderer2,\n  Output,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnChanges,\n  NgZone,\n  SimpleChanges\n} from '@angular/core';\nimport { Subject, Observable, merge } from 'rxjs';\nimport {\n  map,\n  mergeMap,\n  takeUntil,\n  take,\n  takeLast,\n  pairwise,\n  share,\n  filter\n} from 'rxjs/operators';\nimport { DraggableHelper } from './draggable-helper.provider';\n\nexport interface Coordinates {\n  x: number;\n  y: number;\n}\n\nexport interface DragAxis {\n  x: boolean;\n  y: boolean;\n}\n\nexport interface SnapGrid {\n  x?: number;\n  y?: number;\n}\n\nexport type ValidateDrag = (coordinates: Coordinates) => boolean;\n\nexport interface PointerEvent {\n  clientX: number;\n  clientY: number;\n  event: MouseEvent | TouchEvent;\n}\n\nconst MOVE_CURSOR: string = 'move';\n\n@Directive({\n  selector: '[mwlDraggable]'\n})\nexport class DraggableDirective implements OnInit, OnChanges, OnDestroy {\n  /**\n   * an object of data you can pass to the drop event\n   */\n  @Input() dropData: any;\n\n  /**\n   * The axis along which the element is draggable\n   */\n  @Input() dragAxis: DragAxis = { x: true, y: true };\n\n  /**\n   * Snap all drags to an x / y grid\n   */\n  @Input() dragSnapGrid: SnapGrid = {};\n\n  /**\n   * Show a ghost element that shows the drag when dragging\n   */\n  @Input() ghostDragEnabled: boolean = true;\n\n  /**\n   * Allow custom behaviour to control when the element is dragged\n   */\n  @Input() validateDrag: ValidateDrag;\n\n  /**\n   * The cursor to use when dragging the element\n   */\n  @Input() dragCursor = MOVE_CURSOR;\n\n  /**\n   * Called when the element can be dragged along one axis and has the mouse or pointer device pressed on it\n   */\n  @Output() dragPointerDown = new EventEmitter<Coordinates>();\n\n  /**\n   * Called when the element has started to be dragged.\n   * Only called after at least one mouse or touch move event\n   */\n  @Output() dragStart = new EventEmitter<Coordinates>();\n\n  /**\n   * Called when the element is being dragged\n   */\n  @Output() dragging = new EventEmitter<Coordinates>();\n\n  /**\n   * Called after the element is dragged\n   */\n  @Output() dragEnd = new EventEmitter<Coordinates>();\n\n  /**\n   * @hidden\n   */\n  pointerDown: Subject<PointerEvent> = new Subject();\n\n  /**\n   * @hidden\n   */\n  pointerMove: Subject<PointerEvent> = new Subject();\n\n  /**\n   * @hidden\n   */\n  pointerUp: Subject<PointerEvent> = new Subject();\n\n  private eventListenerSubscriptions: {\n    mousemove?: () => void;\n    mousedown?: () => void;\n    mouseup?: () => void;\n    mouseenter?: () => void;\n    mouseleave?: () => void;\n    touchstart?: () => void;\n    touchmove?: () => void;\n    touchend?: () => void;\n    touchcancel?: () => void;\n  } = {};\n\n  /**\n   * @hidden\n   */\n  constructor(\n    public element: ElementRef,\n    private renderer: Renderer2,\n    private draggableHelper: DraggableHelper,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit(): void {\n    this.checkEventListeners();\n\n    const pointerDrag: Observable<any> = this.pointerDown\n      .pipe(filter(() => this.canDrag()))\n      .pipe(\n        mergeMap((pointerDownEvent: PointerEvent) => {\n          const currentDrag: Subject<any> = new Subject();\n\n          this.zone.run(() => {\n            this.dragPointerDown.next({ x: 0, y: 0 });\n          });\n\n          const pointerMove: Observable<Coordinates> = this.pointerMove\n            .pipe(\n              map((pointerMoveEvent: PointerEvent) => {\n                pointerMoveEvent.event.preventDefault();\n\n                return {\n                  currentDrag,\n                  x: pointerMoveEvent.clientX - pointerDownEvent.clientX,\n                  y: pointerMoveEvent.clientY - pointerDownEvent.clientY,\n                  clientX: pointerMoveEvent.clientX,\n                  clientY: pointerMoveEvent.clientY\n                };\n              })\n            )\n            .pipe(\n              map((moveData: Coordinates) => {\n                if (this.dragSnapGrid.x) {\n                  moveData.x =\n                    Math.floor(moveData.x / this.dragSnapGrid.x) *\n                    this.dragSnapGrid.x;\n                }\n\n                if (this.dragSnapGrid.y) {\n                  moveData.y =\n                    Math.floor(moveData.y / this.dragSnapGrid.y) *\n                    this.dragSnapGrid.y;\n                }\n\n                return moveData;\n              })\n            )\n            .pipe(\n              map((moveData: Coordinates) => {\n                if (!this.dragAxis.x) {\n                  moveData.x = 0;\n                }\n\n                if (!this.dragAxis.y) {\n                  moveData.y = 0;\n                }\n\n                return moveData;\n              })\n            )\n            .pipe(\n              filter(\n                ({ x, y }) => !this.validateDrag || this.validateDrag({ x, y })\n              )\n            )\n            .pipe(takeUntil(merge(this.pointerUp, this.pointerDown)))\n            .pipe(share());\n\n          pointerMove.pipe(take(1)).subscribe(() => {\n            pointerDownEvent.event.preventDefault();\n\n            this.zone.run(() => {\n              this.dragStart.next({ x: 0, y: 0 });\n            });\n\n            this.setCursor(this.dragCursor);\n\n            this.draggableHelper.currentDrag.next(currentDrag);\n          });\n\n          pointerMove.pipe(takeLast(1)).subscribe(({ x, y }) => {\n            this.zone.run(() => {\n              this.dragEnd.next({ x, y });\n            });\n            currentDrag.complete();\n            this.setCssTransform('');\n            if (this.ghostDragEnabled) {\n              this.renderer.setStyle(\n                this.element.nativeElement,\n                'pointerEvents',\n                ''\n              );\n            }\n          });\n\n          return pointerMove;\n        })\n      )\n      .pipe(share());\n\n    merge(\n      pointerDrag.pipe(take(1)).pipe(map(value => [, value])),\n      pointerDrag.pipe(pairwise())\n    )\n      .pipe(\n        filter(([previous, next]) => {\n          if (!previous) {\n            return true;\n          }\n          return previous.x !== next.x || previous.y !== next.y;\n        })\n      )\n      .pipe(map(([previous, next]) => next))\n      .subscribe(({ x, y, currentDrag, clientX, clientY }) => {\n        this.zone.run(() => {\n          this.dragging.next({ x, y });\n        });\n        if (this.ghostDragEnabled) {\n          this.renderer.setStyle(\n            this.element.nativeElement,\n            'pointerEvents',\n            'none'\n          );\n        }\n        this.setCssTransform(`translate(${x}px, ${y}px)`);\n        currentDrag.next({\n          clientX,\n          clientY,\n          dropData: this.dropData\n        });\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['dragAxis']) {\n      this.checkEventListeners();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribeEventListeners();\n    this.pointerDown.complete();\n    this.pointerMove.complete();\n    this.pointerUp.complete();\n  }\n\n  private checkEventListeners(): void {\n    const canDrag: boolean = this.canDrag();\n    const hasEventListeners: boolean =\n      Object.keys(this.eventListenerSubscriptions).length > 0;\n\n    if (canDrag && !hasEventListeners) {\n      this.zone.runOutsideAngular(() => {\n        this.eventListenerSubscriptions.mousedown = this.renderer.listen(\n          this.element.nativeElement,\n          'mousedown',\n          (event: MouseEvent) => {\n            this.onMouseDown(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseup = this.renderer.listen(\n          'document',\n          'mouseup',\n          (event: MouseEvent) => {\n            this.onMouseUp(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchstart = this.renderer.listen(\n          this.element.nativeElement,\n          'touchstart',\n          (event: TouchEvent) => {\n            this.onTouchStart(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchend = this.renderer.listen(\n          'document',\n          'touchend',\n          (event: TouchEvent) => {\n            this.onTouchEnd(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchcancel = this.renderer.listen(\n          'document',\n          'touchcancel',\n          (event: TouchEvent) => {\n            this.onTouchEnd(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseenter = this.renderer.listen(\n          this.element.nativeElement,\n          'mouseenter',\n          () => {\n            this.onMouseEnter();\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseleave = this.renderer.listen(\n          this.element.nativeElement,\n          'mouseleave',\n          () => {\n            this.onMouseLeave();\n          }\n        );\n      });\n    } else if (!canDrag && hasEventListeners) {\n      this.unsubscribeEventListeners();\n    }\n  }\n\n  private onMouseDown(event: MouseEvent): void {\n    if (!this.eventListenerSubscriptions.mousemove) {\n      this.eventListenerSubscriptions.mousemove = this.renderer.listen(\n        'document',\n        'mousemove',\n        (mouseMoveEvent: MouseEvent) => {\n          this.pointerMove.next({\n            event: mouseMoveEvent,\n            clientX: mouseMoveEvent.clientX,\n            clientY: mouseMoveEvent.clientY\n          });\n        }\n      );\n    }\n    this.pointerDown.next({\n      event,\n      clientX: event.clientX,\n      clientY: event.clientY\n    });\n  }\n\n  private onMouseUp(event: MouseEvent): void {\n    if (this.eventListenerSubscriptions.mousemove) {\n      this.eventListenerSubscriptions.mousemove();\n      delete this.eventListenerSubscriptions.mousemove;\n    }\n    this.pointerUp.next({\n      event,\n      clientX: event.clientX,\n      clientY: event.clientY\n    });\n  }\n\n  private onTouchStart(event: TouchEvent): void {\n    if (!this.eventListenerSubscriptions.touchmove) {\n      this.eventListenerSubscriptions.touchmove = this.renderer.listen(\n        'document',\n        'touchmove',\n        (touchMoveEvent: TouchEvent) => {\n          this.pointerMove.next({\n            event: touchMoveEvent,\n            clientX: touchMoveEvent.targetTouches[0].clientX,\n            clientY: touchMoveEvent.targetTouches[0].clientY\n          });\n        }\n      );\n    }\n    this.pointerDown.next({\n      event,\n      clientX: event.touches[0].clientX,\n      clientY: event.touches[0].clientY\n    });\n  }\n\n  private onTouchEnd(event: TouchEvent): void {\n    if (this.eventListenerSubscriptions.touchmove) {\n      this.eventListenerSubscriptions.touchmove();\n      delete this.eventListenerSubscriptions.touchmove;\n    }\n    this.pointerUp.next({\n      event,\n      clientX: event.changedTouches[0].clientX,\n      clientY: event.changedTouches[0].clientY\n    });\n  }\n\n  private onMouseEnter(): void {\n    this.setCursor(this.dragCursor);\n  }\n\n  private onMouseLeave(): void {\n    this.setCursor('');\n  }\n\n  private setCssTransform(value: string): void {\n    if (this.ghostDragEnabled) {\n      const transformAttributes = [\n        'transform',\n        '-webkit-transform',\n        '-ms-transform',\n        '-moz-transform',\n        '-o-transform'\n      ];\n      transformAttributes.forEach(transformAttribute => {\n        this.renderer.setStyle(\n          this.element.nativeElement,\n          transformAttribute,\n          value\n        );\n      });\n    }\n  }\n\n  private canDrag(): boolean {\n    return this.dragAxis.x || this.dragAxis.y;\n  }\n\n  private setCursor(value: string): void {\n    this.renderer.setStyle(this.element.nativeElement, 'cursor', value);\n  }\n\n  private unsubscribeEventListeners(): void {\n    Object.keys(this.eventListenerSubscriptions).forEach(type => {\n      (this as any).eventListenerSubscriptions[type]();\n      delete (this as any).eventListenerSubscriptions[type];\n    });\n  }\n}\n","import {\n  Directive,\n  OnInit,\n  ElementRef,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  NgZone\n} from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  pairwise,\n  filter,\n  map,\n  mergeMap\n} from 'rxjs/operators';\nimport { DraggableHelper } from './draggable-helper.provider';\n\nfunction isCoordinateWithinRectangle(\n  clientX: number,\n  clientY: number,\n  rect: ClientRect\n): boolean {\n  return (\n    clientX >= rect.left &&\n    clientX <= rect.right &&\n    clientY >= rect.top &&\n    clientY <= rect.bottom\n  );\n}\n\nexport interface DropData {\n  dropData: any;\n}\n\n@Directive({\n  selector: '[mwlDroppable]'\n})\nexport class DroppableDirective implements OnInit, OnDestroy {\n  /**\n   * Called when a draggable element starts overlapping the element\n   */\n  @Output() dragEnter = new EventEmitter<DropData>();\n\n  /**\n   * Called when a draggable element stops overlapping the element\n   */\n  @Output() dragLeave = new EventEmitter<DropData>();\n\n  /**\n   * Called when a draggable element is moved over the element\n   */\n  @Output() dragOver = new EventEmitter<DropData>();\n\n  /**\n   * Called when a draggable element is dropped on this element\n   */\n  @Output() drop = new EventEmitter<DropData>();\n\n  currentDragSubscription: Subscription;\n\n  constructor(\n    private element: ElementRef,\n    private draggableHelper: DraggableHelper,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit(): void {\n    interface CurrentDragData {\n      clientX: number;\n      clientY: number;\n      dropData: any;\n    }\n\n    this.currentDragSubscription = this.draggableHelper.currentDrag.subscribe(\n      (drag: Subject<CurrentDragData>) => {\n        const droppableRectangle: ClientRect = this.element.nativeElement.getBoundingClientRect();\n\n        let currentDragDropData: any;\n        const overlaps = drag.pipe(\n          map(({ clientX, clientY, dropData }) => {\n            currentDragDropData = dropData;\n            return isCoordinateWithinRectangle(\n              clientX,\n              clientY,\n              droppableRectangle\n            );\n          })\n        );\n\n        const overlapsChanged = overlaps.pipe(distinctUntilChanged());\n\n        let dragOverActive: boolean; // TODO - see if there's a way of doing this via rxjs\n\n        overlapsChanged\n          .pipe(filter(overlapsNow => overlapsNow))\n          .subscribe(() => {\n            dragOverActive = true;\n            this.zone.run(() => {\n              this.dragEnter.next({\n                dropData: currentDragDropData\n              });\n            });\n          });\n\n        overlaps.pipe(filter(overlapsNow => overlapsNow)).subscribe(() => {\n          this.zone.run(() => {\n            this.dragOver.next({\n              dropData: currentDragDropData\n            });\n          });\n        });\n\n        overlapsChanged\n          .pipe(pairwise())\n          .pipe(\n            filter(([didOverlap, overlapsNow]) => didOverlap && !overlapsNow)\n          )\n          .subscribe(() => {\n            dragOverActive = false;\n            this.zone.run(() => {\n              this.dragLeave.next({\n                dropData: currentDragDropData\n              });\n            });\n          });\n\n        drag.pipe(mergeMap(() => overlaps)).subscribe({\n          complete: () => {\n            if (dragOverActive) {\n              this.zone.run(() => {\n                this.drop.next({\n                  dropData: currentDragDropData\n                });\n              });\n            }\n          }\n        });\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.currentDragSubscription.unsubscribe();\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { DraggableDirective } from './draggable.directive';\nimport { DroppableDirective } from './droppable.directive';\nimport { DraggableHelper } from './draggable-helper.provider';\n\n@NgModule({\n  declarations: [DraggableDirective, DroppableDirective],\n  exports: [DraggableDirective, DroppableDirective]\n})\nexport class DragAndDropModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DragAndDropModule,\n      providers: [DraggableHelper]\n    };\n  }\n}\n"]}