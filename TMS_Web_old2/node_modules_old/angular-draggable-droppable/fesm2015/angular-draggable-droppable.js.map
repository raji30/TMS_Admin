{"version":3,"file":"angular-draggable-droppable.js.map","sources":["ng://angular-draggable-droppable/draggable-helper.provider.ts","ng://angular-draggable-droppable/draggable.directive.ts","ng://angular-draggable-droppable/droppable.directive.ts","ng://angular-draggable-droppable/drag-and-drop.module.ts"],"sourcesContent":["import { Subject } from 'rxjs';\n\nexport class DraggableHelper {\n  currentDrag: Subject<any> = new Subject();\n}\n","import {\n  Directive,\n  OnInit,\n  ElementRef,\n  Renderer2,\n  Output,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnChanges,\n  NgZone,\n  SimpleChanges\n} from '@angular/core';\nimport { Subject, Observable, merge } from 'rxjs';\nimport {\n  map,\n  mergeMap,\n  takeUntil,\n  take,\n  takeLast,\n  pairwise,\n  share,\n  filter\n} from 'rxjs/operators';\nimport { DraggableHelper } from './draggable-helper.provider';\n\nexport interface Coordinates {\n  x: number;\n  y: number;\n}\n\nexport interface DragAxis {\n  x: boolean;\n  y: boolean;\n}\n\nexport interface SnapGrid {\n  x?: number;\n  y?: number;\n}\n\nexport type ValidateDrag = (coordinates: Coordinates) => boolean;\n\nexport interface PointerEvent {\n  clientX: number;\n  clientY: number;\n  event: MouseEvent | TouchEvent;\n}\n\nconst MOVE_CURSOR: string = 'move';\n\n@Directive({\n  selector: '[mwlDraggable]'\n})\nexport class DraggableDirective implements OnInit, OnChanges, OnDestroy {\n  /**\n   * an object of data you can pass to the drop event\n   */\n  @Input() dropData: any;\n\n  /**\n   * The axis along which the element is draggable\n   */\n  @Input() dragAxis: DragAxis = { x: true, y: true };\n\n  /**\n   * Snap all drags to an x / y grid\n   */\n  @Input() dragSnapGrid: SnapGrid = {};\n\n  /**\n   * Show a ghost element that shows the drag when dragging\n   */\n  @Input() ghostDragEnabled: boolean = true;\n\n  /**\n   * Allow custom behaviour to control when the element is dragged\n   */\n  @Input() validateDrag: ValidateDrag;\n\n  /**\n   * The cursor to use when dragging the element\n   */\n  @Input() dragCursor = MOVE_CURSOR;\n\n  /**\n   * Called when the element can be dragged along one axis and has the mouse or pointer device pressed on it\n   */\n  @Output() dragPointerDown = new EventEmitter<Coordinates>();\n\n  /**\n   * Called when the element has started to be dragged.\n   * Only called after at least one mouse or touch move event\n   */\n  @Output() dragStart = new EventEmitter<Coordinates>();\n\n  /**\n   * Called when the element is being dragged\n   */\n  @Output() dragging = new EventEmitter<Coordinates>();\n\n  /**\n   * Called after the element is dragged\n   */\n  @Output() dragEnd = new EventEmitter<Coordinates>();\n\n  /**\n   * @hidden\n   */\n  pointerDown: Subject<PointerEvent> = new Subject();\n\n  /**\n   * @hidden\n   */\n  pointerMove: Subject<PointerEvent> = new Subject();\n\n  /**\n   * @hidden\n   */\n  pointerUp: Subject<PointerEvent> = new Subject();\n\n  private eventListenerSubscriptions: {\n    mousemove?: () => void;\n    mousedown?: () => void;\n    mouseup?: () => void;\n    mouseenter?: () => void;\n    mouseleave?: () => void;\n    touchstart?: () => void;\n    touchmove?: () => void;\n    touchend?: () => void;\n    touchcancel?: () => void;\n  } = {};\n\n  /**\n   * @hidden\n   */\n  constructor(\n    public element: ElementRef,\n    private renderer: Renderer2,\n    private draggableHelper: DraggableHelper,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit(): void {\n    this.checkEventListeners();\n\n    const pointerDrag: Observable<any> = this.pointerDown\n      .pipe(filter(() => this.canDrag()))\n      .pipe(\n        mergeMap((pointerDownEvent: PointerEvent) => {\n          const currentDrag: Subject<any> = new Subject();\n\n          this.zone.run(() => {\n            this.dragPointerDown.next({ x: 0, y: 0 });\n          });\n\n          const pointerMove: Observable<Coordinates> = this.pointerMove\n            .pipe(\n              map((pointerMoveEvent: PointerEvent) => {\n                pointerMoveEvent.event.preventDefault();\n\n                return {\n                  currentDrag,\n                  x: pointerMoveEvent.clientX - pointerDownEvent.clientX,\n                  y: pointerMoveEvent.clientY - pointerDownEvent.clientY,\n                  clientX: pointerMoveEvent.clientX,\n                  clientY: pointerMoveEvent.clientY\n                };\n              })\n            )\n            .pipe(\n              map((moveData: Coordinates) => {\n                if (this.dragSnapGrid.x) {\n                  moveData.x =\n                    Math.floor(moveData.x / this.dragSnapGrid.x) *\n                    this.dragSnapGrid.x;\n                }\n\n                if (this.dragSnapGrid.y) {\n                  moveData.y =\n                    Math.floor(moveData.y / this.dragSnapGrid.y) *\n                    this.dragSnapGrid.y;\n                }\n\n                return moveData;\n              })\n            )\n            .pipe(\n              map((moveData: Coordinates) => {\n                if (!this.dragAxis.x) {\n                  moveData.x = 0;\n                }\n\n                if (!this.dragAxis.y) {\n                  moveData.y = 0;\n                }\n\n                return moveData;\n              })\n            )\n            .pipe(\n              filter(\n                ({ x, y }) => !this.validateDrag || this.validateDrag({ x, y })\n              )\n            )\n            .pipe(takeUntil(merge(this.pointerUp, this.pointerDown)))\n            .pipe(share());\n\n          pointerMove.pipe(take(1)).subscribe(() => {\n            pointerDownEvent.event.preventDefault();\n\n            this.zone.run(() => {\n              this.dragStart.next({ x: 0, y: 0 });\n            });\n\n            this.setCursor(this.dragCursor);\n\n            this.draggableHelper.currentDrag.next(currentDrag);\n          });\n\n          pointerMove.pipe(takeLast(1)).subscribe(({ x, y }) => {\n            this.zone.run(() => {\n              this.dragEnd.next({ x, y });\n            });\n            currentDrag.complete();\n            this.setCssTransform('');\n            if (this.ghostDragEnabled) {\n              this.renderer.setStyle(\n                this.element.nativeElement,\n                'pointerEvents',\n                ''\n              );\n            }\n          });\n\n          return pointerMove;\n        })\n      )\n      .pipe(share());\n\n    merge(\n      pointerDrag.pipe(take(1)).pipe(map(value => [, value])),\n      pointerDrag.pipe(pairwise())\n    )\n      .pipe(\n        filter(([previous, next]) => {\n          if (!previous) {\n            return true;\n          }\n          return previous.x !== next.x || previous.y !== next.y;\n        })\n      )\n      .pipe(map(([previous, next]) => next))\n      .subscribe(({ x, y, currentDrag, clientX, clientY }) => {\n        this.zone.run(() => {\n          this.dragging.next({ x, y });\n        });\n        if (this.ghostDragEnabled) {\n          this.renderer.setStyle(\n            this.element.nativeElement,\n            'pointerEvents',\n            'none'\n          );\n        }\n        this.setCssTransform(`translate(${x}px, ${y}px)`);\n        currentDrag.next({\n          clientX,\n          clientY,\n          dropData: this.dropData\n        });\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['dragAxis']) {\n      this.checkEventListeners();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribeEventListeners();\n    this.pointerDown.complete();\n    this.pointerMove.complete();\n    this.pointerUp.complete();\n  }\n\n  private checkEventListeners(): void {\n    const canDrag: boolean = this.canDrag();\n    const hasEventListeners: boolean =\n      Object.keys(this.eventListenerSubscriptions).length > 0;\n\n    if (canDrag && !hasEventListeners) {\n      this.zone.runOutsideAngular(() => {\n        this.eventListenerSubscriptions.mousedown = this.renderer.listen(\n          this.element.nativeElement,\n          'mousedown',\n          (event: MouseEvent) => {\n            this.onMouseDown(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseup = this.renderer.listen(\n          'document',\n          'mouseup',\n          (event: MouseEvent) => {\n            this.onMouseUp(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchstart = this.renderer.listen(\n          this.element.nativeElement,\n          'touchstart',\n          (event: TouchEvent) => {\n            this.onTouchStart(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchend = this.renderer.listen(\n          'document',\n          'touchend',\n          (event: TouchEvent) => {\n            this.onTouchEnd(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchcancel = this.renderer.listen(\n          'document',\n          'touchcancel',\n          (event: TouchEvent) => {\n            this.onTouchEnd(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseenter = this.renderer.listen(\n          this.element.nativeElement,\n          'mouseenter',\n          () => {\n            this.onMouseEnter();\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseleave = this.renderer.listen(\n          this.element.nativeElement,\n          'mouseleave',\n          () => {\n            this.onMouseLeave();\n          }\n        );\n      });\n    } else if (!canDrag && hasEventListeners) {\n      this.unsubscribeEventListeners();\n    }\n  }\n\n  private onMouseDown(event: MouseEvent): void {\n    if (!this.eventListenerSubscriptions.mousemove) {\n      this.eventListenerSubscriptions.mousemove = this.renderer.listen(\n        'document',\n        'mousemove',\n        (mouseMoveEvent: MouseEvent) => {\n          this.pointerMove.next({\n            event: mouseMoveEvent,\n            clientX: mouseMoveEvent.clientX,\n            clientY: mouseMoveEvent.clientY\n          });\n        }\n      );\n    }\n    this.pointerDown.next({\n      event,\n      clientX: event.clientX,\n      clientY: event.clientY\n    });\n  }\n\n  private onMouseUp(event: MouseEvent): void {\n    if (this.eventListenerSubscriptions.mousemove) {\n      this.eventListenerSubscriptions.mousemove();\n      delete this.eventListenerSubscriptions.mousemove;\n    }\n    this.pointerUp.next({\n      event,\n      clientX: event.clientX,\n      clientY: event.clientY\n    });\n  }\n\n  private onTouchStart(event: TouchEvent): void {\n    if (!this.eventListenerSubscriptions.touchmove) {\n      this.eventListenerSubscriptions.touchmove = this.renderer.listen(\n        'document',\n        'touchmove',\n        (touchMoveEvent: TouchEvent) => {\n          this.pointerMove.next({\n            event: touchMoveEvent,\n            clientX: touchMoveEvent.targetTouches[0].clientX,\n            clientY: touchMoveEvent.targetTouches[0].clientY\n          });\n        }\n      );\n    }\n    this.pointerDown.next({\n      event,\n      clientX: event.touches[0].clientX,\n      clientY: event.touches[0].clientY\n    });\n  }\n\n  private onTouchEnd(event: TouchEvent): void {\n    if (this.eventListenerSubscriptions.touchmove) {\n      this.eventListenerSubscriptions.touchmove();\n      delete this.eventListenerSubscriptions.touchmove;\n    }\n    this.pointerUp.next({\n      event,\n      clientX: event.changedTouches[0].clientX,\n      clientY: event.changedTouches[0].clientY\n    });\n  }\n\n  private onMouseEnter(): void {\n    this.setCursor(this.dragCursor);\n  }\n\n  private onMouseLeave(): void {\n    this.setCursor('');\n  }\n\n  private setCssTransform(value: string): void {\n    if (this.ghostDragEnabled) {\n      const transformAttributes = [\n        'transform',\n        '-webkit-transform',\n        '-ms-transform',\n        '-moz-transform',\n        '-o-transform'\n      ];\n      transformAttributes.forEach(transformAttribute => {\n        this.renderer.setStyle(\n          this.element.nativeElement,\n          transformAttribute,\n          value\n        );\n      });\n    }\n  }\n\n  private canDrag(): boolean {\n    return this.dragAxis.x || this.dragAxis.y;\n  }\n\n  private setCursor(value: string): void {\n    this.renderer.setStyle(this.element.nativeElement, 'cursor', value);\n  }\n\n  private unsubscribeEventListeners(): void {\n    Object.keys(this.eventListenerSubscriptions).forEach(type => {\n      (this as any).eventListenerSubscriptions[type]();\n      delete (this as any).eventListenerSubscriptions[type];\n    });\n  }\n}\n","import {\n  Directive,\n  OnInit,\n  ElementRef,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  NgZone\n} from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  pairwise,\n  filter,\n  map,\n  mergeMap\n} from 'rxjs/operators';\nimport { DraggableHelper } from './draggable-helper.provider';\n\nfunction isCoordinateWithinRectangle(\n  clientX: number,\n  clientY: number,\n  rect: ClientRect\n): boolean {\n  return (\n    clientX >= rect.left &&\n    clientX <= rect.right &&\n    clientY >= rect.top &&\n    clientY <= rect.bottom\n  );\n}\n\nexport interface DropData {\n  dropData: any;\n}\n\n@Directive({\n  selector: '[mwlDroppable]'\n})\nexport class DroppableDirective implements OnInit, OnDestroy {\n  /**\n   * Called when a draggable element starts overlapping the element\n   */\n  @Output() dragEnter = new EventEmitter<DropData>();\n\n  /**\n   * Called when a draggable element stops overlapping the element\n   */\n  @Output() dragLeave = new EventEmitter<DropData>();\n\n  /**\n   * Called when a draggable element is moved over the element\n   */\n  @Output() dragOver = new EventEmitter<DropData>();\n\n  /**\n   * Called when a draggable element is dropped on this element\n   */\n  @Output() drop = new EventEmitter<DropData>();\n\n  currentDragSubscription: Subscription;\n\n  constructor(\n    private element: ElementRef,\n    private draggableHelper: DraggableHelper,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit(): void {\n    interface CurrentDragData {\n      clientX: number;\n      clientY: number;\n      dropData: any;\n    }\n\n    this.currentDragSubscription = this.draggableHelper.currentDrag.subscribe(\n      (drag: Subject<CurrentDragData>) => {\n        const droppableRectangle: ClientRect = this.element.nativeElement.getBoundingClientRect();\n\n        let currentDragDropData: any;\n        const overlaps = drag.pipe(\n          map(({ clientX, clientY, dropData }) => {\n            currentDragDropData = dropData;\n            return isCoordinateWithinRectangle(\n              clientX,\n              clientY,\n              droppableRectangle\n            );\n          })\n        );\n\n        const overlapsChanged = overlaps.pipe(distinctUntilChanged());\n\n        let dragOverActive: boolean; // TODO - see if there's a way of doing this via rxjs\n\n        overlapsChanged\n          .pipe(filter(overlapsNow => overlapsNow))\n          .subscribe(() => {\n            dragOverActive = true;\n            this.zone.run(() => {\n              this.dragEnter.next({\n                dropData: currentDragDropData\n              });\n            });\n          });\n\n        overlaps.pipe(filter(overlapsNow => overlapsNow)).subscribe(() => {\n          this.zone.run(() => {\n            this.dragOver.next({\n              dropData: currentDragDropData\n            });\n          });\n        });\n\n        overlapsChanged\n          .pipe(pairwise())\n          .pipe(\n            filter(([didOverlap, overlapsNow]) => didOverlap && !overlapsNow)\n          )\n          .subscribe(() => {\n            dragOverActive = false;\n            this.zone.run(() => {\n              this.dragLeave.next({\n                dropData: currentDragDropData\n              });\n            });\n          });\n\n        drag.pipe(mergeMap(() => overlaps)).subscribe({\n          complete: () => {\n            if (dragOverActive) {\n              this.zone.run(() => {\n                this.drop.next({\n                  dropData: currentDragDropData\n                });\n              });\n            }\n          }\n        });\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.currentDragSubscription.unsubscribe();\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { DraggableDirective } from './draggable.directive';\nimport { DroppableDirective } from './droppable.directive';\nimport { DraggableHelper } from './draggable-helper.provider';\n\n@NgModule({\n  declarations: [DraggableDirective, DroppableDirective],\n  exports: [DraggableDirective, DroppableDirective]\n})\nexport class DragAndDropModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DragAndDropModule,\n      providers: [DraggableHelper]\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;;;;AAAA;;2BAG8B,IAAI,OAAO,EAAE;;CAC1C;;;;;;ACJD,AAiDA,uBAAM,WAAW,GAAW,MAAM,CAAC;AAKnC;;;;;;;;IAkFE,YACS,SACC,UACA,iBACA;QAHD,YAAO,GAAP,OAAO;QACN,aAAQ,GAAR,QAAQ;QACR,oBAAe,GAAf,eAAe;QACf,SAAI,GAAJ,IAAI;;;;wBA7EgB,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE;;;;4BAKhB,EAAE;;;;gCAKC,IAAI;;;;0BAUnB,WAAW;;;;+BAKL,IAAI,YAAY,EAAe;;;;;yBAMrC,IAAI,YAAY,EAAe;;;;wBAKhC,IAAI,YAAY,EAAe;;;;uBAKhC,IAAI,YAAY,EAAe;;;;2BAKd,IAAI,OAAO,EAAE;;;;2BAKb,IAAI,OAAO,EAAE;;;;yBAKf,IAAI,OAAO,EAAE;0CAY5C,EAAE;KAUF;;;;IAEJ,QAAQ;QACN,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3B,uBAAM,WAAW,GAAoB,IAAI,CAAC,WAAW;aAClD,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;aAClC,IAAI,CACH,QAAQ,CAAC,CAAC,gBAA8B;YACtC,uBAAM,WAAW,GAAiB,IAAI,OAAO,EAAE,CAAC;YAEhD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;gBACZ,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;aAC3C,CAAC,CAAC;YAEH,uBAAM,WAAW,GAA4B,IAAI,CAAC,WAAW;iBAC1D,IAAI,CACH,GAAG,CAAC,CAAC,gBAA8B;gBACjC,gBAAgB,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC;gBAExC,OAAO;oBACL,WAAW;oBACX,CAAC,EAAE,gBAAgB,CAAC,OAAO,GAAG,gBAAgB,CAAC,OAAO;oBACtD,CAAC,EAAE,gBAAgB,CAAC,OAAO,GAAG,gBAAgB,CAAC,OAAO;oBACtD,OAAO,EAAE,gBAAgB,CAAC,OAAO;oBACjC,OAAO,EAAE,gBAAgB,CAAC,OAAO;iBAClC,CAAC;aACH,CAAC,CACH;iBACA,IAAI,CACH,GAAG,CAAC,CAAC,QAAqB;gBACxB,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE;oBACvB,QAAQ,CAAC,CAAC;wBACR,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;4BAC5C,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;iBACvB;gBAED,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE;oBACvB,QAAQ,CAAC,CAAC;wBACR,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;4BAC5C,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;iBACvB;gBAED,OAAO,QAAQ,CAAC;aACjB,CAAC,CACH;iBACA,IAAI,CACH,GAAG,CAAC,CAAC,QAAqB;gBACxB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE;oBACpB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;iBAChB;gBAED,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE;oBACpB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;iBAChB;gBAED,OAAO,QAAQ,CAAC;aACjB,CAAC,CACH;iBACA,IAAI,CACH,MAAM,CACJ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAChE,CACF;iBACA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;iBACxD,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;YAEjB,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;gBAClC,gBAAgB,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC;gBAExC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;oBACZ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;iBACrC,CAAC,CAAC;gBAEH,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAEhC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACpD,CAAC,CAAC;YAEH,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;gBAC/C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;oBACZ,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;iBAC7B,CAAC,CAAC;gBACH,WAAW,CAAC,QAAQ,EAAE,CAAC;gBACvB,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;gBACzB,IAAI,IAAI,CAAC,gBAAgB,EAAE;oBACzB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CACpB,IAAI,CAAC,OAAO,CAAC,aAAa,EAC1B,eAAe,EACf,EAAE,CACH,CAAC;iBACH;aACF,CAAC,CAAC;YAEH,OAAO,WAAW,CAAC;SACpB,CAAC,CACH;aACA,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;QAEjB,KAAK,CACH,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,EACvD,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAC7B;aACE,IAAI,CACH,MAAM,CAAC,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC;YACtB,IAAI,CAAC,QAAQ,EAAE;gBACb,OAAO,IAAI,CAAC;aACb;YACD,OAAO,QAAQ,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;SACvD,CAAC,CACH;aACA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;aACrC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE;YACjD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;gBACZ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;aAC9B,CAAC,CAAC;YACH,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBACzB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CACpB,IAAI,CAAC,OAAO,CAAC,aAAa,EAC1B,eAAe,EACf,MAAM,CACP,CAAC;aACH;YACD,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAClD,WAAW,CAAC,IAAI,CAAC;gBACf,OAAO;gBACP,OAAO;gBACP,QAAQ,EAAE,IAAI,CAAC,QAAQ;aACxB,CAAC,CAAC;SACJ,CAAC,CAAC;KACN;;;;;IAED,WAAW,CAAC,OAAsB;QAChC,IAAI,OAAO,CAAC,UAAU,CAAC,EAAE;YACvB,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC5B;KACF;;;;IAED,WAAW;QACT,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACjC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QAC5B,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QAC5B,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;KAC3B;;;;IAEO,mBAAmB;QACzB,uBAAM,OAAO,GAAY,IAAI,CAAC,OAAO,EAAE,CAAC;QACxC,uBAAM,iBAAiB,GACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;QAE1D,IAAI,OAAO,IAAI,CAAC,iBAAiB,EAAE;YACjC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;gBAC1B,IAAI,CAAC,0BAA0B,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAC9D,IAAI,CAAC,OAAO,CAAC,aAAa,EAC1B,WAAW,EACX,CAAC,KAAiB;oBAChB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;iBACzB,CACF,CAAC;gBAEF,IAAI,CAAC,0BAA0B,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAC5D,UAAU,EACV,SAAS,EACT,CAAC,KAAiB;oBAChB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;iBACvB,CACF,CAAC;gBAEF,IAAI,CAAC,0BAA0B,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAC/D,IAAI,CAAC,OAAO,CAAC,aAAa,EAC1B,YAAY,EACZ,CAAC,KAAiB;oBAChB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;iBAC1B,CACF,CAAC;gBAEF,IAAI,CAAC,0BAA0B,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAC7D,UAAU,EACV,UAAU,EACV,CAAC,KAAiB;oBAChB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;iBACxB,CACF,CAAC;gBAEF,IAAI,CAAC,0BAA0B,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAChE,UAAU,EACV,aAAa,EACb,CAAC,KAAiB;oBAChB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;iBACxB,CACF,CAAC;gBAEF,IAAI,CAAC,0BAA0B,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAC/D,IAAI,CAAC,OAAO,CAAC,aAAa,EAC1B,YAAY,EACZ;oBACE,IAAI,CAAC,YAAY,EAAE,CAAC;iBACrB,CACF,CAAC;gBAEF,IAAI,CAAC,0BAA0B,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAC/D,IAAI,CAAC,OAAO,CAAC,aAAa,EAC1B,YAAY,EACZ;oBACE,IAAI,CAAC,YAAY,EAAE,CAAC;iBACrB,CACF,CAAC;aACH,CAAC,CAAC;SACJ;aAAM,IAAI,CAAC,OAAO,IAAI,iBAAiB,EAAE;YACxC,IAAI,CAAC,yBAAyB,EAAE,CAAC;SAClC;;;;;;IAGK,WAAW,CAAC,KAAiB;QACnC,IAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,SAAS,EAAE;YAC9C,IAAI,CAAC,0BAA0B,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAC9D,UAAU,EACV,WAAW,EACX,CAAC,cAA0B;gBACzB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;oBACpB,KAAK,EAAE,cAAc;oBACrB,OAAO,EAAE,cAAc,CAAC,OAAO;oBAC/B,OAAO,EAAE,cAAc,CAAC,OAAO;iBAChC,CAAC,CAAC;aACJ,CACF,CAAC;SACH;QACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;YACpB,KAAK;YACL,OAAO,EAAE,KAAK,CAAC,OAAO;YACtB,OAAO,EAAE,KAAK,CAAC,OAAO;SACvB,CAAC,CAAC;;;;;;IAGG,SAAS,CAAC,KAAiB;QACjC,IAAI,IAAI,CAAC,0BAA0B,CAAC,SAAS,EAAE;YAC7C,IAAI,CAAC,0BAA0B,CAAC,SAAS,EAAE,CAAC;YAC5C,OAAO,IAAI,CAAC,0BAA0B,CAAC,SAAS,CAAC;SAClD;QACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;YAClB,KAAK;YACL,OAAO,EAAE,KAAK,CAAC,OAAO;YACtB,OAAO,EAAE,KAAK,CAAC,OAAO;SACvB,CAAC,CAAC;;;;;;IAGG,YAAY,CAAC,KAAiB;QACpC,IAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,SAAS,EAAE;YAC9C,IAAI,CAAC,0BAA0B,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAC9D,UAAU,EACV,WAAW,EACX,CAAC,cAA0B;gBACzB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;oBACpB,KAAK,EAAE,cAAc;oBACrB,OAAO,EAAE,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,OAAO;oBAChD,OAAO,EAAE,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,OAAO;iBACjD,CAAC,CAAC;aACJ,CACF,CAAC;SACH;QACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;YACpB,KAAK;YACL,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;YACjC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;SAClC,CAAC,CAAC;;;;;;IAGG,UAAU,CAAC,KAAiB;QAClC,IAAI,IAAI,CAAC,0BAA0B,CAAC,SAAS,EAAE;YAC7C,IAAI,CAAC,0BAA0B,CAAC,SAAS,EAAE,CAAC;YAC5C,OAAO,IAAI,CAAC,0BAA0B,CAAC,SAAS,CAAC;SAClD;QACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;YAClB,KAAK;YACL,OAAO,EAAE,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO;YACxC,OAAO,EAAE,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO;SACzC,CAAC,CAAC;;;;;IAGG,YAAY;QAClB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;;;;IAG1B,YAAY;QAClB,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;;;;;;IAGb,eAAe,CAAC,KAAa;QACnC,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,uBAAM,mBAAmB,GAAG;gBAC1B,WAAW;gBACX,mBAAmB;gBACnB,eAAe;gBACf,gBAAgB;gBAChB,cAAc;aACf,CAAC;YACF,mBAAmB,CAAC,OAAO,CAAC,kBAAkB;gBAC5C,IAAI,CAAC,QAAQ,CAAC,QAAQ,CACpB,IAAI,CAAC,OAAO,CAAC,aAAa,EAC1B,kBAAkB,EAClB,KAAK,CACN,CAAC;aACH,CAAC,CAAC;SACJ;;;;;IAGK,OAAO;QACb,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;;;;;;IAGpC,SAAS,CAAC,KAAa;QAC7B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;;;;;IAG9D,yBAAyB;QAC/B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC,OAAO,CAAC,IAAI;YACvD,mBAAC,IAAW,GAAE,0BAA0B,CAAC,IAAI,CAAC,EAAE,CAAC;YACjD,OAAO,mBAAC,IAAW,GAAE,0BAA0B,CAAC,IAAI,CAAC,CAAC;SACvD,CAAC,CAAC;;;;YAxZN,SAAS,SAAC;gBACT,QAAQ,EAAE,gBAAgB;aAC3B;;;;YAlDC,UAAU;YACV,SAAS;YAoBF,eAAe;YAdtB,MAAM;;;yBAgDL,KAAK;yBAKL,KAAK;6BAKL,KAAK;iCAKL,KAAK;6BAKL,KAAK;2BAKL,KAAK;gCAKL,MAAM;0BAMN,MAAM;yBAKN,MAAM;wBAKN,MAAM;;;;;;;ACxGT;;;;;;AAmBA,qCACE,OAAe,EACf,OAAe,EACf,IAAgB;IAEhB,QACE,OAAO,IAAI,IAAI,CAAC,IAAI;QACpB,OAAO,IAAI,IAAI,CAAC,KAAK;QACrB,OAAO,IAAI,IAAI,CAAC,GAAG;QACnB,OAAO,IAAI,IAAI,CAAC,MAAM,EACtB;CACH;;;;;;;IAgCC,YACU,SACA,iBACA;QAFA,YAAO,GAAP,OAAO;QACP,oBAAe,GAAf,eAAe;QACf,SAAI,GAAJ,IAAI;;;;yBAtBQ,IAAI,YAAY,EAAY;;;;yBAK5B,IAAI,YAAY,EAAY;;;;wBAK7B,IAAI,YAAY,EAAY;;;;oBAKhC,IAAI,YAAY,EAAY;KAQzC;;;;IAEJ,QAAQ;QAON,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,SAAS,CACvE,CAAC,IAA8B;YAC7B,uBAAM,kBAAkB,GAAe,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC;YAE1F,qBAAI,mBAAwB,CAAC;YAC7B,uBAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CACxB,GAAG,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE;gBACjC,mBAAmB,GAAG,QAAQ,CAAC;gBAC/B,OAAO,2BAA2B,CAChC,OAAO,EACP,OAAO,EACP,kBAAkB,CACnB,CAAC;aACH,CAAC,CACH,CAAC;YAEF,uBAAM,eAAe,GAAG,QAAQ,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;YAE9D,qBAAI,cAAuB,CAAC;YAE5B,eAAe;iBACZ,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI,WAAW,CAAC,CAAC;iBACxC,SAAS,CAAC;gBACT,cAAc,GAAG,IAAI,CAAC;gBACtB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;oBACZ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;wBAClB,QAAQ,EAAE,mBAAmB;qBAC9B,CAAC,CAAC;iBACJ,CAAC,CAAC;aACJ,CAAC,CAAC;YAEL,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC;gBAC1D,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;oBACZ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;wBACjB,QAAQ,EAAE,mBAAmB;qBAC9B,CAAC,CAAC;iBACJ,CAAC,CAAC;aACJ,CAAC,CAAC;YAEH,eAAe;iBACZ,IAAI,CAAC,QAAQ,EAAE,CAAC;iBAChB,IAAI,CACH,MAAM,CAAC,CAAC,CAAC,UAAU,EAAE,WAAW,CAAC,KAAK,UAAU,IAAI,CAAC,WAAW,CAAC,CAClE;iBACA,SAAS,CAAC;gBACT,cAAc,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;oBACZ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;wBAClB,QAAQ,EAAE,mBAAmB;qBAC9B,CAAC,CAAC;iBACJ,CAAC,CAAC;aACJ,CAAC,CAAC;YAEL,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC;gBAC5C,QAAQ,EAAE;oBACR,IAAI,cAAc,EAAE;wBAClB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;4BACZ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gCACb,QAAQ,EAAE,mBAAmB;6BAC9B,CAAC,CAAC;yBACJ,CAAC,CAAC;qBACJ;iBACF;aACF,CAAC,CAAC;SACJ,CACF,CAAC;KACH;;;;IAED,WAAW;QACT,IAAI,CAAC,uBAAuB,CAAC,WAAW,EAAE,CAAC;KAC5C;;;YA7GF,SAAS,SAAC;gBACT,QAAQ,EAAE,gBAAgB;aAC3B;;;;YAnCC,UAAU;YAcH,eAAe;YAVtB,MAAM;;;0BAoCL,MAAM;0BAKN,MAAM;yBAKN,MAAM;qBAKN,MAAM;;;;;;;AC1DT;;;;IAUE,OAAO,OAAO;QACZ,OAAO;YACL,QAAQ,EAAE,iBAAiB;YAC3B,SAAS,EAAE,CAAC,eAAe,CAAC;SAC7B,CAAC;KACH;;;YAVF,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,kBAAkB,EAAE,kBAAkB,CAAC;gBACtD,OAAO,EAAE,CAAC,kBAAkB,EAAE,kBAAkB,CAAC;aAClD;;;;;;;;;;;;;;;"}
